[
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Region",
      "=",
      "``",
      "Caribbean",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "region",
      "=",
      "value"
    ],
    "question": "What is the total surface area of the countries in the Caribbean region?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "surface",
      "area",
      "of",
      "the",
      "countries",
      "in",
      "the",
      "Caribbean",
      "region",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Caribbean\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "num_of_staff",
      ")",
      "FROM",
      "museum",
      "WHERE",
      "open_year",
      "<",
      "2009"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_staff",
      ")",
      "from",
      "museum",
      "where",
      "open_year",
      "<",
      "value"
    ],
    "question": "Find the average number of staff working for the museums that were open before 2009.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "staff",
      "working",
      "for",
      "the",
      "museums",
      "that",
      "were",
      "open",
      "before",
      "2009",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2009.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dog_id",
      ")",
      "FROM",
      "Treatments"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dog_id",
      ")",
      "from",
      "treatments"
    ],
    "question": "How many dogs went through any treatments?",
    "question_toks": [
      "How",
      "many",
      "dogs",
      "went",
      "through",
      "any",
      "treatments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "Cartoon",
      "WHERE",
      "Directed_by",
      "=",
      "``",
      "Ben",
      "Jones",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "cartoon",
      "where",
      "directed_by",
      "=",
      "value"
    ],
    "question": "What are the names of all cartoons directed by Ben Jones?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "cartoons",
      "directed",
      "by",
      "Ben",
      "Jones",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Ben Jones\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "query_toks": [
      "SELECT",
      "AirportName",
      "FROM",
      "AIRPORTS",
      "WHERE",
      "AirportCode",
      "=",
      "``",
      "AKO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airportname",
      "from",
      "airports",
      "where",
      "airportcode",
      "=",
      "value"
    ],
    "question": "Return the name of the airport with code 'AKO'.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "with",
      "code",
      "'AKO",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"AKO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "FlightNo",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "DestAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flightno",
      "from",
      "flights",
      "where",
      "destairport",
      "=",
      "value"
    ],
    "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "question_toks": [
      "What",
      "are",
      "flight",
      "numbers",
      "of",
      "flights",
      "arriving",
      "at",
      "Airport",
      "``",
      "APG",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": [
      "SELECT",
      "section_name",
      "FROM",
      "Sections",
      "ORDER",
      "BY",
      "section_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "section_name",
      "from",
      "sections",
      "order",
      "by",
      "section_name",
      "desc"
    ],
    "question": "List the section_name in reversed lexicographical order.",
    "question_toks": [
      "List",
      "the",
      "section_name",
      "in",
      "reversed",
      "lexicographical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "highschooler"
    ],
    "question": "Count the number of high schoolers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "high",
      "schoolers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "IndepYear",
      ">",
      "1950"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "indepyear",
      ">",
      "value"
    ],
    "question": "Give the names of the nations that were founded after 1950.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "the",
      "nations",
      "that",
      "were",
      "founded",
      "after",
      "1950",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1950.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "GROUP",
      "BY",
      "document_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "group",
      "by",
      "document_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List all document ids with at least two paragraphs.",
    "question_toks": [
      "List",
      "all",
      "document",
      "ids",
      "with",
      "at",
      "least",
      "two",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": [
      "SELECT",
      "section_name",
      "FROM",
      "Sections",
      "ORDER",
      "BY",
      "section_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "section_name",
      "from",
      "sections",
      "order",
      "by",
      "section_name",
      "desc"
    ],
    "question": "What are the names of the sections in reverse alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "sections",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(charge_amount) FROM Charges",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "charge_amount",
      ")",
      "FROM",
      "Charges"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "charge_amount",
      ")",
      "from",
      "charges"
    ],
    "question": "How much does the most expensive charge type costs?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "most",
      "expensive",
      "charge",
      "type",
      "costs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "query_toks": [
      "SELECT",
      "section_description",
      "FROM",
      "Sections",
      "WHERE",
      "section_name",
      "=",
      "'h",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "section_description",
      "from",
      "sections",
      "where",
      "section_name",
      "=",
      "value"
    ],
    "question": "What is the description for the section named h?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "section",
      "named",
      "h",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"h\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Students",
      "WHERE",
      "current_address_id",
      "!",
      "=",
      "permanent_address_id"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "students",
      "where",
      "current_address_id",
      "!",
      "=",
      "permanent_address_id"
    ],
    "question": "Whose permanent address is different from his or her current address? List his or her first name.",
    "question_toks": [
      "Whose",
      "permanent",
      "address",
      "is",
      "different",
      "from",
      "his",
      "or",
      "her",
      "current",
      "address",
      "?",
      "List",
      "his",
      "or",
      "her",
      "first",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          [
            0,
            34,
            false
          ],
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "Count the number of employees",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "employees"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Nationality",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct nationalities are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "nationalities",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "loser_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "loser_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the highest rank of losers in all matches.",
    "question_toks": [
      "Find",
      "the",
      "highest",
      "rank",
      "of",
      "losers",
      "in",
      "all",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Ref_template_types",
      "WHERE",
      "template_type_description",
      "=",
      "``",
      "Book",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "ref_template_types",
      "where",
      "template_type_description",
      "=",
      "value"
    ],
    "question": "What is the template type code for template type description \"Book\".",
    "question_toks": [
      "What",
      "is",
      "the",
      "template",
      "type",
      "code",
      "for",
      "template",
      "type",
      "description",
      "``",
      "Book",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Book\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Abbreviation",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "abbreviation",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "abbreviation",
      "of",
      "Airline",
      "``",
      "JetBlue",
      "Airways",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "FROM",
      "Students",
      "ORDER",
      "BY",
      "date_first_registered",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "from",
      "students",
      "order",
      "by",
      "date_first_registered",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the first student to register? List the first name, middle name and last name.",
    "question_toks": [
      "Who",
      "is",
      "the",
      "first",
      "student",
      "to",
      "register",
      "?",
      "List",
      "the",
      "first",
      "name",
      ",",
      "middle",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              41,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "have",
      "cartoons",
      "on",
      "TV",
      "that",
      "were",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Todd Casey\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "query_toks": [
      "SELECT",
      "Population",
      ",",
      "LifeExpectancy",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "=",
      "``",
      "Brazil",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      ",",
      "lifeexpectancy",
      "from",
      "country",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What are the population and life expectancies in Brazil?",
    "question_toks": [
      "What",
      "are",
      "the",
      "population",
      "and",
      "life",
      "expectancies",
      "in",
      "Brazil",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Brazil\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "manager_name",
      ",",
      "district",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "number_products",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "manager_name",
      ",",
      "district",
      "from",
      "shop",
      "order",
      "by",
      "number_products",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the manager name and district of the shop that sells the largest number of products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "manager",
      "name",
      "and",
      "district",
      "of",
      "the",
      "shop",
      "that",
      "sells",
      "the",
      "largest",
      "number",
      "of",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "query_toks": [
      "SELECT",
      "T1.template_type_code",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "WHERE",
      "T2.document_name",
      "=",
      "``",
      "Data",
      "base",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "template_type_code",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "where",
      "t2",
      ".",
      "document_name",
      "=",
      "value"
    ],
    "question": "Return the template type code of the template that is used by a document named Data base.",
    "question_toks": [
      "Return",
      "the",
      "template",
      "type",
      "code",
      "of",
      "the",
      "template",
      "that",
      "is",
      "used",
      "by",
      "a",
      "document",
      "named",
      "Data",
      "base",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Data base\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "query_toks": [
      "select",
      "t2.concert_name",
      ",",
      "t2.theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "concert",
      "as",
      "t2",
      "on",
      "t1.concert_id",
      "=",
      "t2.concert_id",
      "group",
      "by",
      "t2.concert_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "concert_name",
      ",",
      "t2",
      ".",
      "theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "concert",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t2",
      ".",
      "concert_id",
      "group",
      "by",
      "t2",
      ".",
      "concert_id"
    ],
    "question": "What are the names , themes , and number of singers for every concert ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "themes",
      ",",
      "and",
      "number",
      "of",
      "singers",
      "for",
      "every",
      "concert",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.transcript_date",
      ",",
      "T1.transcript_id",
      "FROM",
      "Transcript_Contents",
      "AS",
      "T1",
      "JOIN",
      "Transcripts",
      "AS",
      "T2",
      "ON",
      "T1.transcript_id",
      "=",
      "T2.transcript_id",
      "GROUP",
      "BY",
      "T1.transcript_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "transcript_date",
      ",",
      "t1",
      ".",
      "transcript_id",
      "from",
      "transcript_contents",
      "as",
      "t1",
      "join",
      "transcripts",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "transcript_id",
      "=",
      "t2",
      ".",
      "transcript_id",
      "group",
      "by",
      "t1",
      ".",
      "transcript_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What is the date and id of the transcript with at least 2 courses listed?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "and",
      "id",
      "of",
      "the",
      "transcript",
      "with",
      "at",
      "least",
      "2",
      "courses",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ],
          [
            "table_unit",
            9
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ],
            [
              0,
              52,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          56,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "T2.Language",
      ")",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "IndepYear",
      "<",
      "1930",
      "AND",
      "T2.IsOfficial",
      "=",
      "``",
      "T",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "language",
      ")",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "indepyear",
      "<",
      "value",
      "and",
      "t2",
      ".",
      "isofficial",
      "=",
      "value"
    ],
    "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "question_toks": [
      "For",
      "the",
      "countries",
      "founded",
      "before",
      "1930",
      ",",
      "what",
      "is",
      "the",
      "total",
      "number",
      "of",
      "distinct",
      "official",
      "languages",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1930.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"T\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "series_name",
      ")",
      ",",
      "count",
      "(",
      "DISTINCT",
      "content",
      ")",
      "FROM",
      "TV_Channel",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "series_name",
      ")",
      ",",
      "count",
      "(",
      "distinct",
      "content",
      ")",
      "from",
      "tv_channel"
    ],
    "question": "List the number of different series names and contents in the TV Channel table.",
    "question_toks": [
      "List",
      "the",
      "number",
      "of",
      "different",
      "series",
      "names",
      "and",
      "contents",
      "in",
      "the",
      "TV",
      "Channel",
      "table",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "GROUP",
      "BY",
      "T2.Conductor_ID",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "group",
      "by",
      "t2",
      ".",
      "conductor_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the names of conductors who have conducted at more than one orchestra?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "conductors",
      "who",
      "have",
      "conducted",
      "at",
      "more",
      "than",
      "one",
      "orchestra",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "WHERE",
      "Year_of_Founded",
      ">",
      "2008"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "where",
      "year_of_founded",
      ">",
      "value"
    ],
    "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "name",
      "of",
      "the",
      "conductor",
      "that",
      "has",
      "conducted",
      "orchestras",
      "founded",
      "after",
      "2008",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2008.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": [
      "SELECT",
      "department_description",
      "FROM",
      "Departments",
      "WHERE",
      "department_name",
      "LIKE",
      "'",
      "%",
      "computer",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "department_description",
      "from",
      "departments",
      "where",
      "department_name",
      "like",
      "value"
    ],
    "question": "What is the description of the department whose name has the substring the computer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "department",
      "whose",
      "name",
      "has",
      "the",
      "substring",
      "the",
      "computer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%computer%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "query_toks": [
      "SELECT",
      "T1.course_name",
      ",",
      "T1.course_id",
      "FROM",
      "Courses",
      "AS",
      "T1",
      "JOIN",
      "Sections",
      "AS",
      "T2",
      "ON",
      "T1.course_id",
      "=",
      "T2.course_id",
      "GROUP",
      "BY",
      "T1.course_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "course_name",
      ",",
      "t1",
      ".",
      "course_id",
      "from",
      "courses",
      "as",
      "t1",
      "join",
      "sections",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "group",
      "by",
      "t1",
      ".",
      "course_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "What are the names and id of courses having at most 2 sections?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "id",
      "of",
      "courses",
      "having",
      "at",
      "most",
      "2",
      "sections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "query_toks": [
      "SELECT",
      "T3.Name",
      ",",
      "T2.Course",
      "FROM",
      "course_arrange",
      "AS",
      "T1",
      "JOIN",
      "course",
      "AS",
      "T2",
      "ON",
      "T1.Course_ID",
      "=",
      "T2.Course_ID",
      "JOIN",
      "teacher",
      "AS",
      "T3",
      "ON",
      "T1.Teacher_ID",
      "=",
      "T3.Teacher_ID"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "course",
      "from",
      "course_arrange",
      "as",
      "t1",
      "join",
      "course",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "course_id",
      "=",
      "t2",
      ".",
      "course_id",
      "join",
      "teacher",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "teacher_id",
      "=",
      "t3",
      ".",
      "teacher_id"
    ],
    "question": "What is the name of each teacher and what course they teach?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "each",
      "teacher",
      "and",
      "what",
      "course",
      "they",
      "teach",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "query_toks": [
      "SELECT",
      "Citizenship",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "singer",
      "GROUP",
      "BY",
      "Citizenship"
    ],
    "query_toks_no_value": [
      "select",
      "citizenship",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer",
      "group",
      "by",
      "citizenship"
    ],
    "question": "Show different citizenship of singers and the number of singers of each citizenship.",
    "question_toks": [
      "Show",
      "different",
      "citizenship",
      "of",
      "singers",
      "and",
      "the",
      "number",
      "of",
      "singers",
      "of",
      "each",
      "citizenship",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2.name",
      "FROM",
      "hiring",
      "AS",
      "t1",
      "JOIN",
      "shop",
      "AS",
      "t2",
      "ON",
      "t1.shop_id",
      "=",
      "t2.shop_id",
      "GROUP",
      "BY",
      "t2.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t2",
      ".",
      "name",
      "from",
      "hiring",
      "as",
      "t1",
      "join",
      "shop",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "shop_id",
      "=",
      "t2",
      ".",
      "shop_id",
      "group",
      "by",
      "t2",
      ".",
      "name"
    ],
    "question": "For each shop, return the number of employees working there and the name of the shop.",
    "question_toks": [
      "For",
      "each",
      "shop",
      ",",
      "return",
      "the",
      "number",
      "of",
      "employees",
      "working",
      "there",
      "and",
      "the",
      "name",
      "of",
      "the",
      "shop",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "query_toks": [
      "SELECT",
      "T2.petid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.Lname",
      "=",
      "'Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "petid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "pet",
      "owned",
      "by",
      "student",
      "whose",
      "last",
      "name",
      "is",
      "\u2018Smith\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "query_toks": [
      "SELECT",
      "T1.template_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "GROUP",
      "BY",
      "T1.template_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "template_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "group",
      "by",
      "t1",
      ".",
      "template_type_code"
    ],
    "question": "Show all template type codes and the number of documents using each type.",
    "question_toks": [
      "Show",
      "all",
      "template",
      "type",
      "codes",
      "and",
      "the",
      "number",
      "of",
      "documents",
      "using",
      "each",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "T2.document_name",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "WHERE",
      "T1.template_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "document_name",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "where",
      "t1",
      ".",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "Show all document names using templates with template type code BK.",
    "question_toks": [
      "Show",
      "all",
      "document",
      "names",
      "using",
      "templates",
      "with",
      "template",
      "type",
      "code",
      "BK",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "transcript_date",
      "FROM",
      "Transcripts",
      "ORDER",
      "BY",
      "transcript_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "transcript_date",
      "from",
      "transcripts",
      "order",
      "by",
      "transcript_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "When was the last transcript released?",
    "question_toks": [
      "When",
      "was",
      "the",
      "last",
      "transcript",
      "released",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              53,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "query_toks": [
      "SELECT",
      "Pixel_aspect_ratio_PAR",
      ",",
      "country",
      "FROM",
      "tv_channel",
      "WHERE",
      "LANGUAGE",
      "!",
      "=",
      "'English",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "pixel_aspect_ratio_par",
      ",",
      "country",
      "from",
      "tv_channel",
      "where",
      "language",
      "!",
      "=",
      "value"
    ],
    "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "question_toks": [
      "find",
      "the",
      "pixel",
      "aspect",
      "ratio",
      "and",
      "nation",
      "of",
      "the",
      "tv",
      "channels",
      "that",
      "do",
      "not",
      "use",
      "English",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid"
    ],
    "question": "What are the different first names and ages of the students who do have pets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "first",
      "names",
      "and",
      "ages",
      "of",
      "the",
      "students",
      "who",
      "do",
      "have",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "age",
      ">",
      "value"
    ],
    "question": "Find number of pets owned by students who are older than 20.",
    "question_toks": [
      "Find",
      "number",
      "of",
      "pets",
      "owned",
      "by",
      "students",
      "who",
      "are",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.horsepower",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "ORDER",
      "BY",
      "T1.accelerate",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "horsepower",
      "from",
      "cars_data",
      "as",
      "t1",
      "order",
      "by",
      "t1",
      ".",
      "accelerate",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the horsepower of the car with the largest accelerate?",
    "question_toks": [
      "What",
      "is",
      "the",
      "horsepower",
      "of",
      "the",
      "car",
      "with",
      "the",
      "largest",
      "accelerate",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Templates",
      "AS",
      "T2",
      "ON",
      "T1.Template_ID",
      "=",
      "T2.Template_ID",
      "WHERE",
      "T2.Template_Type_Code",
      "=",
      "'PPT",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "templates",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "where",
      "t2",
      ".",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "Count the number of documents that use the PPT template type.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "that",
      "use",
      "the",
      "PPT",
      "template",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"PPT\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Continent",
      ")",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T2.Language",
      "=",
      "``",
      "Chinese",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "continent",
      ")",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t2",
      ".",
      "language",
      "=",
      "value"
    ],
    "question": "How many continents speak Chinese?",
    "question_toks": [
      "How",
      "many",
      "continents",
      "speak",
      "Chinese",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Chinese\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "query_toks": [
      "SELECT",
      "LANGUAGE",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "TV_Channel",
      "GROUP",
      "BY",
      "LANGUAGE"
    ],
    "query_toks_no_value": [
      "select",
      "language",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tv_channel",
      "group",
      "by",
      "language"
    ],
    "question": "List each language and the number of TV Channels using it.",
    "question_toks": [
      "List",
      "each",
      "language",
      "and",
      "the",
      "number",
      "of",
      "TV",
      "Channels",
      "using",
      "it",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "SHARE",
      ")",
      ",",
      "min",
      "(",
      "SHARE",
      ")",
      "FROM",
      "TV_series",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "share",
      ")",
      ",",
      "min",
      "(",
      "share",
      ")",
      "from",
      "tv_series"
    ],
    "question": "What is minimum and maximum share of TV series?",
    "question_toks": [
      "What",
      "is",
      "minimum",
      "and",
      "maximum",
      "share",
      "of",
      "TV",
      "series",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "query_toks": [
      "SELECT",
      "T2.Title",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "Cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T1.series_name",
      "=",
      "``",
      "Sky",
      "Radio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t1",
      ".",
      "series_name",
      "=",
      "value"
    ],
    "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "question_toks": [
      "List",
      "the",
      "title",
      "of",
      "all",
      "Cartoons",
      "showed",
      "on",
      "TV",
      "Channel",
      "with",
      "series",
      "name",
      "``",
      "Sky",
      "Radio",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sky Radio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "WHERE",
      "T1.FullName",
      "=",
      "'American",
      "Motor",
      "Company",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "where",
      "t1",
      ".",
      "fullname",
      "=",
      "value"
    ],
    "question": "What is the number of car models created by the car maker American Motor Company?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "car",
      "models",
      "created",
      "by",
      "the",
      "car",
      "maker",
      "American",
      "Motor",
      "Company",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"American Motor Company\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "query_toks": [
      "SELECT",
      "email_address",
      "FROM",
      "Professionals",
      "WHERE",
      "state",
      "=",
      "'Hawaii",
      "'",
      "OR",
      "state",
      "=",
      "'Wisconsin",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      "from",
      "professionals",
      "where",
      "state",
      "=",
      "value",
      "or",
      "state",
      "=",
      "value"
    ],
    "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "question_toks": [
      "What",
      "are",
      "the",
      "emails",
      "of",
      "the",
      "professionals",
      "living",
      "in",
      "either",
      "the",
      "state",
      "of",
      "Hawaii",
      "or",
      "the",
      "state",
      "of",
      "Wisconsin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                41,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Hawaii\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Wisconsin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Accelerate",
      ")",
      ",",
      "Cylinders",
      "FROM",
      "CARS_DATA",
      "GROUP",
      "BY",
      "Cylinders",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "accelerate",
      ")",
      ",",
      "cylinders",
      "from",
      "cars_data",
      "group",
      "by",
      "cylinders"
    ],
    "question": "What is the maximum accelerate for all the different cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "accelerate",
      "for",
      "all",
      "the",
      "different",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT date_arrived ,  date_departed FROM Dogs",
    "query_toks": [
      "SELECT",
      "date_arrived",
      ",",
      "date_departed",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "date_arrived",
      ",",
      "date_departed",
      "from",
      "dogs"
    ],
    "question": "List the arrival date and the departure date for all the dogs.",
    "question_toks": [
      "List",
      "the",
      "arrival",
      "date",
      "and",
      "the",
      "departure",
      "date",
      "for",
      "all",
      "the",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "question_toks": [
      "which",
      "countries",
      "'",
      "tv",
      "channels",
      "are",
      "playing",
      "some",
      "cartoon",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Todd Casey\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "query_toks": [
      "SELECT",
      "T2.template_id",
      "FROM",
      "Ref_template_types",
      "AS",
      "T1",
      "JOIN",
      "Templates",
      "AS",
      "T2",
      "ON",
      "T1.template_type_code",
      "=",
      "T2.template_type_code",
      "WHERE",
      "T1.template_type_description",
      "=",
      "``",
      "Presentation",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "template_id",
      "from",
      "ref_template_types",
      "as",
      "t1",
      "join",
      "templates",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_type_code",
      "=",
      "t2",
      ".",
      "template_type_code",
      "where",
      "t1",
      ".",
      "template_type_description",
      "=",
      "value"
    ],
    "question": "Return the ids corresponding to templates with the description 'Presentation'.",
    "question_toks": [
      "Return",
      "the",
      "ids",
      "corresponding",
      "to",
      "templates",
      "with",
      "the",
      "description",
      "'Presentation",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Presentation\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT line_1 ,  line_2 FROM addresses",
    "query_toks": [
      "SELECT",
      "line_1",
      ",",
      "line_2",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "line_1",
      ",",
      "line_2",
      "from",
      "addresses"
    ],
    "question": "what are all the addresses including line 1 and line 2?",
    "question_toks": [
      "what",
      "are",
      "all",
      "the",
      "addresses",
      "including",
      "line",
      "1",
      "and",
      "line",
      "2",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T1.Name",
      "=",
      "``",
      "Afghanistan",
      "''",
      "AND",
      "IsOfficial",
      "=",
      "``",
      "T",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "isofficial",
      "=",
      "value"
    ],
    "question": "How many official languages are spoken in Afghanistan?",
    "question_toks": [
      "How",
      "many",
      "official",
      "languages",
      "are",
      "spoken",
      "in",
      "Afghanistan",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Afghanistan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"T\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.last_name",
      ",",
      "T2.size_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "t2",
      ".",
      "size_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id"
    ],
    "question": "What are each owner's first name, last name, and the size of their dog?",
    "question_toks": [
      "What",
      "are",
      "each",
      "owner",
      "'s",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "the",
      "size",
      "of",
      "their",
      "dog",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "query_toks": [
      "SELECT",
      "student_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Likes",
      "GROUP",
      "BY",
      "student_id"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "likes",
      "group",
      "by",
      "student_id"
    ],
    "question": "How many likes correspond to each student id?",
    "question_toks": [
      "How",
      "many",
      "likes",
      "correspond",
      "to",
      "each",
      "student",
      "id",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Paragraphs",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_ID",
      "=",
      "T2.document_ID",
      "WHERE",
      "T2.document_name",
      "=",
      "'Summer",
      "Show",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "paragraphs",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t2",
      ".",
      "document_name",
      "=",
      "value"
    ],
    "question": "How many paragraphs for the document with name 'Summer Show'?",
    "question_toks": [
      "How",
      "many",
      "paragraphs",
      "for",
      "the",
      "document",
      "with",
      "name",
      "'Summer",
      "Show",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Summer Show\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      "GROUP",
      "BY",
      "T1.student_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the names of high schoolers who have at least 3 friends.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "high",
      "schoolers",
      "who",
      "have",
      "at",
      "least",
      "3",
      "friends",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select max(capacity), average from stadium",
    "query_toks": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "question": "What is the maximum capacity and the average of all stadiums ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "capacity",
      "and",
      "the",
      "average",
      "of",
      "all",
      "stadiums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Highschooler",
      "WHERE",
      "grade",
      "=",
      "9",
      "OR",
      "grade",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "highschooler",
      "where",
      "grade",
      "=",
      "value",
      "or",
      "grade",
      "=",
      "value"
    ],
    "question": "How many high schoolers are there in grade 9 or 10?",
    "question_toks": [
      "How",
      "many",
      "high",
      "schoolers",
      "are",
      "there",
      "in",
      "grade",
      "9",
      "or",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          9.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country_code",
      "FROM",
      "players",
      "GROUP",
      "BY",
      "country_code"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country_code",
      "from",
      "players",
      "group",
      "by",
      "country_code"
    ],
    "question": "How many players are from each country?",
    "question_toks": [
      "How",
      "many",
      "players",
      "are",
      "from",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "Number_products",
      ")",
      ",",
      "max",
      "(",
      "Number_products",
      ")",
      "FROM",
      "shop"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "number_products",
      ")",
      ",",
      "max",
      "(",
      "number_products",
      ")",
      "from",
      "shop"
    ],
    "question": "What are the minimum and maximum number of products across all the shops?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      "and",
      "maximum",
      "number",
      "of",
      "products",
      "across",
      "all",
      "the",
      "shops",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "T2.edispl",
      ")",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T1.Model",
      "=",
      "'volvo",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t2",
      ".",
      "edispl",
      ")",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t1",
      ".",
      "model",
      "=",
      "value"
    ],
    "question": "What is the average edispl for all volvos?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "edispl",
      "for",
      "all",
      "volvos",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"volvo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "T2.document_name",
      "FROM",
      "Templates",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.template_id",
      "=",
      "T2.template_id",
      "WHERE",
      "T1.template_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "document_name",
      "from",
      "templates",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "template_id",
      "=",
      "t2",
      ".",
      "template_id",
      "where",
      "t1",
      ".",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "What are the names of documents that use templates with the code BK?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "documents",
      "that",
      "use",
      "templates",
      "with",
      "the",
      "code",
      "BK",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "template_id",
      "FROM",
      "Documents",
      "WHERE",
      "Document_Description",
      "LIKE",
      "``",
      "%",
      "w",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "template_id",
      "from",
      "documents",
      "where",
      "document_description",
      "like",
      "value"
    ],
    "question": "What is the document name and template id for document with description with the letter 'w' in it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "name",
      "and",
      "template",
      "id",
      "for",
      "document",
      "with",
      "description",
      "with",
      "the",
      "letter",
      "'w",
      "'",
      "in",
      "it",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%w%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "TV_Channel",
      "EXCEPT",
      "SELECT",
      "T1.country",
      "FROM",
      "TV_Channel",
      "AS",
      "T1",
      "JOIN",
      "cartoon",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.Channel",
      "WHERE",
      "T2.written_by",
      "=",
      "'Todd",
      "Casey",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "tv_channel",
      "except",
      "select",
      "t1",
      ".",
      "country",
      "from",
      "tv_channel",
      "as",
      "t1",
      "join",
      "cartoon",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "channel",
      "where",
      "t2",
      ".",
      "written_by",
      "=",
      "value"
    ],
    "question": "What are the countries that are not playing cartoons written by Todd Casey?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "are",
      "not",
      "playing",
      "cartoons",
      "written",
      "by",
      "Todd",
      "Casey",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            "\"Todd Casey\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.horsepower",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the model of the car with the smallest amount of horsepower?",
    "question_toks": [
      "What",
      "is",
      "the",
      "model",
      "of",
      "the",
      "car",
      "with",
      "the",
      "smallest",
      "amount",
      "of",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "SurfaceArea",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Europe",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "surfacearea",
      ">",
      "(",
      "select",
      "min",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      ")"
    ],
    "question": "What are the countries that have greater surface area than any country in Europe?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "that",
      "have",
      "greater",
      "surface",
      "area",
      "than",
      "any",
      "country",
      "in",
      "Europe",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ],
                "\"Europe\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "query_toks": [
      "select",
      "citizenship",
      "from",
      "singer",
      "group",
      "by",
      "citizenship",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "citizenship",
      "from",
      "singer",
      "group",
      "by",
      "citizenship",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most common singer citizenship ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "singer",
      "citizenship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.horsepower",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which model of the car has the minimum horsepower?",
    "question_toks": [
      "Which",
      "model",
      "of",
      "the",
      "car",
      "has",
      "the",
      "minimum",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "query_toks": [
      "SELECT",
      "T2.Language",
      "FROM",
      "country",
      "AS",
      "T1",
      "JOIN",
      "countrylanguage",
      "AS",
      "T2",
      "ON",
      "T1.Code",
      "=",
      "T2.CountryCode",
      "WHERE",
      "T1.GovernmentForm",
      "=",
      "``",
      "Republic",
      "''",
      "GROUP",
      "BY",
      "T2.Language",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "language",
      "from",
      "country",
      "as",
      "t1",
      "join",
      "countrylanguage",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "countrycode",
      "where",
      "t1",
      ".",
      "governmentform",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "language",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Which languages are spoken by only one country in republic governments?",
    "question_toks": [
      "Which",
      "languages",
      "are",
      "spoken",
      "by",
      "only",
      "one",
      "country",
      "in",
      "republic",
      "governments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "concert",
      "GROUP",
      "BY",
      "YEAR",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "concert",
      "group",
      "by",
      "year",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which year has most number of concerts?",
    "question_toks": [
      "Which",
      "year",
      "has",
      "most",
      "number",
      "of",
      "concerts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "JOIN",
      "concert",
      "AS",
      "T3",
      "ON",
      "T1.concert_id",
      "=",
      "T3.concert_id",
      "WHERE",
      "T3.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "join",
      "concert",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t3",
      ".",
      "concert_id",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "List all singer names in concerts in year 2014.",
    "question_toks": [
      "List",
      "all",
      "singer",
      "names",
      "in",
      "concerts",
      "in",
      "year",
      "2014",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "query_toks": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "\"north america\"",
      "and",
      "surfacearea",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      ",",
      "avg",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "and",
      "surfacearea",
      ">",
      "value"
    ],
    "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "population",
      "and",
      "average",
      "area",
      "of",
      "countries",
      "in",
      "the",
      "continent",
      "of",
      "North",
      "America",
      "whose",
      "area",
      "is",
      "bigger",
      "than",
      "3000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"north america\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          3000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "query_toks": [
      "SELECT",
      "template_id",
      "FROM",
      "Templates",
      "EXCEPT",
      "SELECT",
      "template_id",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "template_id",
      "from",
      "templates",
      "except",
      "select",
      "template_id",
      "from",
      "documents"
    ],
    "question": "What are the ids for templates that are not used in any documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "templates",
      "that",
      "are",
      "not",
      "used",
      "in",
      "any",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Professionals",
      "UNION",
      "SELECT",
      "first_name",
      "FROM",
      "Owners",
      "EXCEPT",
      "SELECT",
      "name",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "professionals",
      "union",
      "select",
      "first_name",
      "from",
      "owners",
      "except",
      "select",
      "name",
      "from",
      "dogs"
    ],
    "question": "Which first names are used for professionals or owners but are not used as dog names?",
    "question_toks": [
      "Which",
      "first",
      "names",
      "are",
      "used",
      "for",
      "professionals",
      "or",
      "owners",
      "but",
      "are",
      "not",
      "used",
      "as",
      "dog",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": {
        "from": {
          "table_units": [
            [
              "table_unit",
              4
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": {
          "from": {
            "table_units": [
              [
                "table_unit",
                5
              ]
            ],
            "conds": []
          },
          "select": [
            false,
            [
              [
                0,
                [
                  0,
                  [
                    0,
                    25,
                    false
                  ],
                  null
                ]
              ]
            ]
          ],
          "where": [],
          "groupBy": [],
          "having": [],
          "orderBy": [],
          "limit": null,
          "intersect": null,
          "union": null,
          "except": null
        }
      },
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "query_toks": [
      "SELECT",
      "Orchestra",
      "FROM",
      "orchestra",
      "WHERE",
      "Orchestra_ID",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Orchestra_ID",
      "FROM",
      "performance",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "orchestra",
      "from",
      "orchestra",
      "where",
      "orchestra_id",
      "not",
      "in",
      "(",
      "select",
      "orchestra_id",
      "from",
      "performance",
      ")"
    ],
    "question": "List the names of orchestras that have no performance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "orchestras",
      "that",
      "have",
      "no",
      "performance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "stadium_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "stadium_id",
      "FROM",
      "concert",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "stadium_id",
      "not",
      "in",
      "(",
      "select",
      "stadium_id",
      "from",
      "concert",
      ")"
    ],
    "question": "Show the stadium names without any concert.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "names",
      "without",
      "any",
      "concert",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.Money_Rank",
      "FROM",
      "people",
      "AS",
      "T1",
      "JOIN",
      "poker_player",
      "AS",
      "T2",
      "ON",
      "T1.People_ID",
      "=",
      "T2.People_ID",
      "ORDER",
      "BY",
      "T1.Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "money_rank",
      "from",
      "people",
      "as",
      "t1",
      "join",
      "poker_player",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "people_id",
      "=",
      "t2",
      ".",
      "people_id",
      "order",
      "by",
      "t1",
      ".",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the money rank of the poker player with the greatest height.",
    "question_toks": [
      "Return",
      "the",
      "money",
      "rank",
      "of",
      "the",
      "poker",
      "player",
      "with",
      "the",
      "greatest",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "Country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "TV_Channel",
      "GROUP",
      "BY",
      "Country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tv_channel",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the country with the most number of TV Channels and how many does it have?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "with",
      "the",
      "most",
      "number",
      "of",
      "TV",
      "Channels",
      "and",
      "how",
      "many",
      "does",
      "it",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "TV_Channel",
      "EXCEPT",
      "SELECT",
      "channel",
      "FROM",
      "cartoon",
      "WHERE",
      "directed_by",
      "=",
      "'Ben",
      "Jones",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "tv_channel",
      "except",
      "select",
      "channel",
      "from",
      "cartoon",
      "where",
      "directed_by",
      "=",
      "value"
    ],
    "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "TV",
      "channels",
      "that",
      "do",
      "not",
      "have",
      "any",
      "cartoons",
      "directed",
      "by",
      "Ben",
      "Jones",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  25,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            "\"Ben Jones\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "grade",
      ")",
      "FROM",
      "Highschooler",
      "WHERE",
      "id",
      "IN",
      "(",
      "SELECT",
      "T1.student_id",
      "FROM",
      "Friend",
      "AS",
      "T1",
      "JOIN",
      "Highschooler",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.id",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "grade",
      ")",
      "from",
      "highschooler",
      "where",
      "id",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "student_id",
      "from",
      "friend",
      "as",
      "t1",
      "join",
      "highschooler",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "id",
      ")"
    ],
    "question": "Find the average grade of all students who have some friends.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "grade",
      "of",
      "all",
      "students",
      "who",
      "have",
      "some",
      "friends",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.City",
      "FROM",
      "AIRPORTS",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.AirportCode",
      "=",
      "T2.SourceAirport",
      "GROUP",
      "BY",
      "T1.City",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "sourceairport",
      "group",
      "by",
      "t1",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city is the most frequent source airport?",
    "question_toks": [
      "Which",
      "city",
      "is",
      "the",
      "most",
      "frequent",
      "source",
      "airport",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.student_id",
      ",",
      "T1.first_name",
      ",",
      "T1.middle_name",
      ",",
      "T1.last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.student_id",
      "FROM",
      "Students",
      "AS",
      "T1",
      "JOIN",
      "Student_Enrolment",
      "AS",
      "T2",
      "ON",
      "T1.student_id",
      "=",
      "T2.student_id",
      "GROUP",
      "BY",
      "T1.student_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "student_id",
      ",",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "middle_name",
      ",",
      "t1",
      ".",
      "last_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "student_id",
      "from",
      "students",
      "as",
      "t1",
      "join",
      "student_enrolment",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "student_id",
      "=",
      "t2",
      ".",
      "student_id",
      "group",
      "by",
      "t1",
      ".",
      "student_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "question_toks": [
      "Which",
      "student",
      "has",
      "enrolled",
      "for",
      "the",
      "most",
      "times",
      "in",
      "any",
      "program",
      "?",
      "List",
      "the",
      "id",
      ",",
      "first",
      "name",
      ",",
      "middle",
      "name",
      ",",
      "last",
      "name",
      ",",
      "the",
      "number",
      "of",
      "enrollments",
      "and",
      "student",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          32,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "APG",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "WHERE",
      "T2.SourceAirport",
      "=",
      "``",
      "CVO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "where",
      "t2",
      ".",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "question_toks": [
      "Find",
      "all",
      "airlines",
      "that",
      "have",
      "flights",
      "from",
      "both",
      "airports",
      "'APG",
      "'",
      "and",
      "'CVO",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"CVO\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.zip_code",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "sum",
      "(",
      "T3.cost_of_treatment",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "zip_code",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "sum",
      "(",
      "t3",
      ".",
      "cost_of_treatment",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "question_toks": [
      "Find",
      "the",
      "owner",
      "id",
      "and",
      "zip",
      "code",
      "of",
      "the",
      "owner",
      "who",
      "spent",
      "the",
      "most",
      "money",
      "in",
      "total",
      "for",
      "his",
      "or",
      "her",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              49,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.cylinders",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T2.Model",
      "=",
      "'volvo",
      "'",
      "ORDER",
      "BY",
      "T1.accelerate",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "cylinders",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t2",
      ".",
      "model",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "accelerate",
      "asc",
      "limit",
      "value"
    ],
    "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
    "question_toks": [
      "For",
      "a",
      "volvo",
      "model",
      ",",
      "how",
      "many",
      "cylinders",
      "does",
      "the",
      "version",
      "with",
      "least",
      "accelerate",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"volvo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "JOIN",
      "Treatments",
      "AS",
      "T3",
      "ON",
      "T2.dog_id",
      "=",
      "T3.dog_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "join",
      "treatments",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "dog_id",
      "=",
      "t3",
      ".",
      "dog_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "question_toks": [
      "Which",
      "owner",
      "has",
      "paid",
      "for",
      "the",
      "most",
      "treatments",
      "on",
      "his",
      "or",
      "her",
      "dogs",
      "?",
      "List",
      "the",
      "owner",
      "id",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "query_toks": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "question": "Find the average age of students who do not have any pet .",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "students",
      "who",
      "do",
      "not",
      "have",
      "any",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.owner_id",
      ",",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Owners",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "GROUP",
      "BY",
      "T1.owner_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "owner_id",
      ",",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "owners",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "group",
      "by",
      "t1",
      ".",
      "owner_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "question_toks": [
      "Which",
      "owner",
      "owns",
      "the",
      "most",
      "dogs",
      "?",
      "List",
      "the",
      "owner",
      "id",
      ",",
      "first",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      ",",
      "T2.document_name",
      "FROM",
      "Paragraphs",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "GROUP",
      "BY",
      "T1.document_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      ",",
      "t2",
      ".",
      "document_name",
      "from",
      "paragraphs",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "group",
      "by",
      "t1",
      ".",
      "document_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the id and name of the document with the most paragraphs.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "and",
      "name",
      "of",
      "the",
      "document",
      "with",
      "the",
      "most",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Name",
      "FROM",
      "conductor",
      "AS",
      "T1",
      "JOIN",
      "orchestra",
      "AS",
      "T2",
      "ON",
      "T1.Conductor_ID",
      "=",
      "T2.Conductor_ID",
      "GROUP",
      "BY",
      "T2.Conductor_ID",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "conductor",
      "as",
      "t1",
      "join",
      "orchestra",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "conductor_id",
      "=",
      "t2",
      ".",
      "conductor_id",
      "group",
      "by",
      "t2",
      ".",
      "conductor_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the conductor who has conducted the most orchestras?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "conductor",
      "who",
      "has",
      "conducted",
      "the",
      "most",
      "orchestras",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.cylinders",
      "FROM",
      "CARS_DATA",
      "AS",
      "T1",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.MakeId",
      "WHERE",
      "T2.Model",
      "=",
      "'volvo",
      "'",
      "ORDER",
      "BY",
      "T1.accelerate",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "cylinders",
      "from",
      "cars_data",
      "as",
      "t1",
      "join",
      "car_names",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "makeid",
      "where",
      "t2",
      ".",
      "model",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "accelerate",
      "asc",
      "limit",
      "value"
    ],
    "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
    "question_toks": [
      "For",
      "model",
      "volvo",
      ",",
      "how",
      "many",
      "cylinders",
      "does",
      "the",
      "car",
      "with",
      "the",
      "least",
      "accelerate",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"volvo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Airline",
      "FROM",
      "AIRLINES",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.uid",
      "=",
      "T2.Airline",
      "GROUP",
      "BY",
      "T1.Airline",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "airline",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "uid",
      "=",
      "t2",
      ".",
      "airline",
      "group",
      "by",
      "t1",
      ".",
      "airline",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which airline has most number of flights?",
    "question_toks": [
      "Which",
      "airline",
      "has",
      "most",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Owners",
      "WHERE",
      "owner_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "owner_id",
      "FROM",
      "Dogs",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "owners",
      "where",
      "owner_id",
      "not",
      "in",
      "(",
      "select",
      "owner_id",
      "from",
      "dogs",
      ")"
    ],
    "question": "How many owners temporarily do not have any dogs?",
    "question_toks": [
      "How",
      "many",
      "owners",
      "temporarily",
      "do",
      "not",
      "have",
      "any",
      "dogs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "query_toks": [
      "SELECT",
      "T1.last_name",
      "FROM",
      "Owners",
      "AS",
      "T1",
      "JOIN",
      "Dogs",
      "AS",
      "T2",
      "ON",
      "T1.owner_id",
      "=",
      "T2.owner_id",
      "WHERE",
      "T2.age",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "last_name",
      "from",
      "owners",
      "as",
      "t1",
      "join",
      "dogs",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "owner_id",
      "=",
      "t2",
      ".",
      "owner_id",
      "where",
      "t2",
      ".",
      "age",
      "=",
      "(",
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "dogs",
      ")"
    ],
    "question": "Who owns the youngest dog? Give me his or her last name.",
    "question_toks": [
      "Who",
      "owns",
      "the",
      "youngest",
      "dog",
      "?",
      "Give",
      "me",
      "his",
      "or",
      "her",
      "last",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      26,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.City",
      "FROM",
      "AIRPORTS",
      "AS",
      "T1",
      "JOIN",
      "FLIGHTS",
      "AS",
      "T2",
      "ON",
      "T1.AirportCode",
      "=",
      "T2.SourceAirport",
      "GROUP",
      "BY",
      "T1.City",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "flights",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "airportcode",
      "=",
      "t2",
      ".",
      "sourceairport",
      "group",
      "by",
      "t1",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city has most number of departing flights?",
    "question_toks": [
      "Which",
      "city",
      "has",
      "most",
      "number",
      "of",
      "departing",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T2.date_of_treatment",
      "FROM",
      "Dogs",
      "AS",
      "T1",
      "JOIN",
      "Treatments",
      "AS",
      "T2",
      "ON",
      "T1.dog_id",
      "=",
      "T2.dog_id",
      "WHERE",
      "T1.breed_code",
      "=",
      "(",
      "SELECT",
      "breed_code",
      "FROM",
      "Dogs",
      "GROUP",
      "BY",
      "breed_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "date_of_treatment",
      "from",
      "dogs",
      "as",
      "t1",
      "join",
      "treatments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dog_id",
      "=",
      "t2",
      ".",
      "dog_id",
      "where",
      "t1",
      ".",
      "breed_code",
      "=",
      "(",
      "select",
      "breed_code",
      "from",
      "dogs",
      "group",
      "by",
      "breed_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value",
      ")"
    ],
    "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
    "question_toks": [
      "Which",
      "dogs",
      "are",
      "of",
      "the",
      "rarest",
      "breed",
      "?",
      "Show",
      "their",
      "names",
      "and",
      "treatment",
      "dates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              45,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                48,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      23,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [
              [
                0,
                23,
                false
              ]
            ],
            "having": [],
            "orderBy": [
              "asc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]