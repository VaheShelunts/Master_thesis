run python3 -m src.experiments     --process_data     --data_dir data/spider     --db_dir data/spider/database     --dataset_name spider     --question_split          --question_only               --denormalize_sql               --table_shuffling     --use_lstm_encoder     --use_meta_data_encoding          --sql_consistency_check          --use_picklist     --anchor_text_match_threshold 0.85               --top_k_picklist_matches 2     --process_sql_in_execution_order               --num_random_tables_added 0                         --save_best_model_only     --schema_augmentation_factor 1          --data_augmentation_factor 1          --vocab_min_freq 0     --text_vocab_min_freq 0     --program_vocab_min_freq 0     --num_values_per_field 0     --max_in_seq_len 512     --max_out_seq_len 60     --model bridge     --num_steps 100000     --curriculum_interval 0     --num_peek_steps 1000     --num_accumulation_steps 2     --train_batch_size 8     --dev_batch_size 8     --encoder_input_dim 1024     --encoder_hidden_dim 400     --decoder_input_dim 400     --num_rnn_layers 1     --num_const_attn_layers 0     --emb_dropout_rate 0.3     --pretrained_lm_dropout_rate 0     --rnn_layer_dropout_rate 0     --rnn_weight_dropout_rate 0     --cross_attn_dropout_rate 0     --cross_attn_num_heads 8     --res_input_dropout_rate 0.2     --res_layer_dropout_rate 0     --ff_input_dropout_rate 0.4     --ff_hidden_dropout_rate 0.0     --pretrained_transformer bert-large-uncased          --bert_finetune_rate 0.00006     --learning_rate 0.0005     --learning_rate_scheduler inverse-square     --trans_learning_rate_scheduler inverse-square     --warmup_init_lr 0.0005     --warmup_init_ft_lr 0.00003     --num_warmup_steps 4000     --grad_norm 0.3     --decoding_algorithm beam-search     --beam_size 16     --bs_alpha 1.05     --gpu 0     
2022-01-22 13:54:59.692842: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 39.38it/s]
  0%|          | 0/750 [00:00<?, ?it/s]  0%|          | 3/750 [00:00<00:27, 27.31it/s]  1%|          | 7/750 [00:00<00:25, 28.79it/s]  1%|          | 9/750 [00:00<00:56, 13.16it/s]  2%|▏         | 13/750 [00:00<00:45, 16.05it/s]167 schema graphs loaded
1 train examples loaded
750 dev examples loaded
Warning: file data/spider/fine-tune.json not found.
5398 parsed SQL queries loaded
* text vocab size = 30522
* program vocab size = 99

processing 1 examples from train...
--------------------
text:  what is the biggest city in wyoming
sql:  SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming"
ground truth values:  [('city.state_name', 'wyoming'), ('city.state_name', 'wyoming')]
matched values OrderedDict()
--------------------
********** train Data Statistics ***********
OOV observed in 0/1 examples
Denormalization skipped for 0/1 examples
Schema truncated for 0/1 examples
Token restored for 1/1 examples
+ text sizes
# text tokens (avg) = 7.0
# text tokens (min) = 7
# text tokens (max) = 7
+ input sizes
input size (avg) = 105.0
input size (min) = 105 
input size (max) = 105
+ program sizes
# program tokens (avg) = 30.0	# program whole field tokens = 30.0 (avg)	
# program tokens (min) = 30	# program whole field tokens = 30 (min)	
# program tokens (max) = 30	# program whole field tokens = 30 (max)	
max pointer span size = 1
---  value extraction performance ---
micro precision = 0.0
micro recall = 0.0
micro F1 = 0.0
processing 750 examples from dev...
--------------------
text:  papers that are coauthored by Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  papers written by Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  what are the papers that have Peter Mertens and Dina Barbian as co-authors
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers have Peter Mertens and Dina Barbian written ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  what paper did Peter Mertens and Dina Barbian write together ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Has Peter Mertens and Dina Barbian written a paper together ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers by Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by authors Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were written by authors Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  papers written by authors Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  When did Peter Mertens and Dina Barbian collaborate ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  what are the collaborations of Peter Mertens and Dina Barbian ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Have Peter Mertens and Dina Barbian written a paper together ?
sql:    2%|▏         | 17/750 [00:00<00:38, 18.95it/s]  3%|▎         | 21/750 [00:00<00:33, 21.60it/s]  3%|▎         | 24/750 [00:01<00:55, 13.13it/s]  4%|▎         | 28/750 [00:01<00:45, 15.99it/s]SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Peter Mertens and Dina Barbian as co-authors
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Does Peter Mertens ever collaborated with Dina Barbian ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  Which papers have Peter Mertens and Dina Barbian as co-authors ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  papers coauthored by Peter Mertens and Dina Barbian
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers have been written by Peter Mertens and Dina Barbian ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers have been written by both Peter Mertens and Dina Barbian ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers have been written by Peter Mertens and Dina Barbian .
sql:  SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian"
ground truth values:  [('author.authorName', 'Peter Mertens'), ('author.authorName', 'Dina Barbian')]
matched values OrderedDict()
--------------------
--------------------
text:  who has written the most syntactic parsing papers ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who is the most published author in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who has the most publications in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who has written the most papers on syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  List prominent scholars in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who wrote the most papers on syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  Who are the authors with the most published papers in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  top syntactic parsing author
sql:    4%|▍         | 32/750 [00:01<00:38, 18.89it/s]  5%|▍         | 36/750 [00:01<00:32, 22.19it/s]  5%|▌         | 39/750 [00:02<01:00, 11.76it/s]  6%|▌         | 46/750 [00:02<00:45, 15.53it/s]SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  top author in syntactic parsing
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who published the most in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who published the most papers in syntactic parsing ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citation noah a smith has ?
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  noah a smith citation count
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  how many citations does noah a smith have ?
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citations does noah a smith have ?
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  number of citations of noah a smith
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citations does noah a smith have
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  How many times was noah a smith cited ?
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citations does noah a smith has ?
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "noah a smith"
ground truth values:  [('author.authorName', 'noah a smith')]
matched values OrderedDict()
--------------------
--------------------
text:  chi papers
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers at chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers in chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers about chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Show me chi papers .
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers did chi publish ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  list papers published in chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers on chi
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi"
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Has mirella lapata written any papers in 2016 ?
sql:    7%|▋         | 52/750 [00:02<00:35, 19.89it/s]  8%|▊         | 59/750 [00:02<00:27, 25.04it/s]  9%|▉         | 66/750 [00:02<00:22, 30.73it/s] 10%|▉         | 72/750 [00:03<00:39, 17.33it/s]SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mirella lapata" AND t3.year  =  2016 GROUP BY t2.authorid
ground truth values:  [('author.authorName', 'mirella lapata')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has sharon goldwater written ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has written by sharon goldwater ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by sharon goldwater
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  what did sharon goldwater write ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  papers where sharon goldwater is an author
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers authored by sharon goldwater
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  sharon goldwater papers
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers by sharon goldwater
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers written by sharon goldwater
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  which papers has sharon goldwater written ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  papers written by sharon goldwater
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  What has sharon goldwater published ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  Does sharon goldwater have any papers published ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  sharon goldwater 's papers
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  show me papers by sharon goldwater .
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers are authored by sharon goldwater ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by sharon goldwater ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater"
ground truth values:  [('author.authorName', 'sharon goldwater')]
matched values OrderedDict()
--------------------
--------------------
text:  What was oren etzioni 's latest paper ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  Latest paper by oren etzioni
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the latest paper by oren etzioni ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  What is oren etzioni 's latest paper ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the latest papers by oren etzioni ?
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  most recent papers by oren etzioni
sql:  SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
 10%|█         | 76/750 [00:03<00:32, 20.80it/s] 11%|█         | 80/750 [00:03<00:27, 24.20it/s] 11%|█         | 84/750 [00:03<00:25, 26.25it/s] 12%|█▏        | 88/750 [00:03<00:22, 29.18it/s]--------------------
text:  are there any monte carlo simulation papers since 2011 ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "monte carlo simulation" AND t3.year  >  2011
ground truth values:  [('keyphrase.keyphraseName', 'monte carlo simulation')]
matched values OrderedDict()
--------------------
--------------------
text:  monte carlo simulation papers later than 2011
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "monte carlo simulation" AND t3.year  >  2011
ground truth values:  [('keyphrase.keyphraseName', 'monte carlo simulation')]
matched values OrderedDict()
--------------------
--------------------
text:  monte carlo simulation later than 2011
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "monte carlo simulation" AND t3.year  >  2011
ground truth values:  [('keyphrase.keyphraseName', 'monte carlo simulation')]
matched values OrderedDict()
--------------------
--------------------
text:  monte carlo simulation papers published after 2011
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "monte carlo simulation" AND t3.year  >  2011
ground truth values:  [('keyphrase.keyphraseName', 'monte carlo simulation')]
matched values OrderedDict()
--------------------
--------------------
text:  monte carlo simulation papers since 2011
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "monte carlo simulation" AND t3.year  >  2011
ground truth values:  [('keyphrase.keyphraseName', 'monte carlo simulation')]
matched values OrderedDict()
--------------------
--------------------
text:  does ras bodik publish a lot ?
sql:  SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "ras bodik"
ground truth values:  [('author.authorName', 'ras bodik')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers did David M. Blei publish at AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does David M. Blei have in AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers has David M. Blei published in AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers does David M. Blei have at AISTATS
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers does David M. Blei have in AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  how many David M. Blei papers are in AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers David M. Blei has in AISTATS ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does David M. Blei have in AISTATS
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "David M. Blei" AND t4.venuename  =  "AISTATS"
ground truth values:  [('author.authorName', 'David M. Blei'), ('venue.venueName', 'AISTATS')]
matched values OrderedDict()
--------------------
--------------------
text:  List all academic papers on machine networks for one shot learning
sql:  SELECT DISTINCT paperid FROM paper WHERE title  =  "machine networks for one shot learning"
ground truth values:  [('paper.title', 'machine networks for one shot learning')]
matched values OrderedDict()
--------------------
--------------------
text:  machine networks for one shot learning
sql:  SELECT DISTINCT paperid FROM paper WHERE title  =  "machine networks for one shot learning"
ground truth values:  [('paper.title', 'machine networks for one shot learning')]
matched values OrderedDict()
--------------------
--------------------
text:  which EMNLP 2010 papers have the most citations ?
sql:  SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  "EMNLP" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC
ground truth values:  [('venue.venueName', 'EMNLP')]
matched values OrderedDict()
--------------------
--------------------
text:  Which paper from EMNLP 2010 was cited most ?
sql:  SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  "EMNLP" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC
ground truth values:  [('venue.venueName', 'EMNLP')]
matched values OrderedDict()
--------------------
--------------------
text:  most cited EMNLP 2010 papers
sql:   12%|█▏        | 92/750 [00:03<00:20, 31.71it/s] 13%|█▎        | 96/750 [00:04<00:21, 31.11it/s] 13%|█▎        | 100/750 [00:04<00:56, 11.47it/s] 14%|█▍        | 107/750 [00:05<00:42, 15.26it/s]SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  "EMNLP" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC
ground truth values:  [('venue.venueName', 'EMNLP')]
matched values OrderedDict()
--------------------
--------------------
text:  which EMNLP 2010 papers have been cited the most ?
sql:  SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  "EMNLP" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC
ground truth values:  [('venue.venueName', 'EMNLP')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were published at CVPR in 2016 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "RGB-D Object Dataset" AND t3.title  =  "Class consistent multi-modal fusion with binary features" AND t3.year  =  2016 AND t4.venuename  =  "CVPR"
ground truth values:  [('dataset.datasetName', 'RGB-D Object Dataset'), ('paper.title', 'Class consistent multi-modal fusion with binary features'), ('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were published at CVPR '16 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "RGB-D Object Dataset" AND t3.title  =  "Class consistent multi-modal fusion with binary features" AND t3.year  =  2016 AND t4.venuename  =  "CVPR"
ground truth values:  [('dataset.datasetName', 'RGB-D Object Dataset'), ('paper.title', 'Class consistent multi-modal fusion with binary features'), ('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers are in deep learning ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning"
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers are about deep learning ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning"
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers about deep learning ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning"
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers are related to deep learning ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning"
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers has Christopher D. Manning written ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does Christopher D. Manning have ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers has Christopher D. Manning ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers has Christopher D. Manning published ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers has Christopher D. Manning written ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  Has Christopher D. Manning published any papers ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers has Christopher D. Manning published ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers does Christopher D. Manning have ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many paper does Christopher D. Manning have ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many publications does Christopher D. Manning have ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does Christopher D. Manning have
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:   15%|█▌        | 113/750 [00:05<00:33, 19.25it/s] 16%|█▌        | 118/750 [00:05<00:28, 21.97it/s] 16%|█▋        | 122/750 [00:05<00:25, 24.39it/s] 17%|█▋        | 126/750 [00:05<00:22, 27.52it/s]number of papers written by Christopher D. Manning
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning"
ground truth values:  [('author.authorName', 'Christopher D. Manning')]
matched values OrderedDict()
--------------------
--------------------
text:  what kind of papers does Luke Zettlemoyer publish
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  Keyphrases used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  What keywords are in papers by Luke Zettlemoyer ?
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  keywords used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  what keywords are used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  give me the keywords used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  What topic does Luke Zettlemoyer write about ?
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  what topics does Luke Zettlemoyer publish in
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  keywords in the papers written by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases used by Luke Zettlemoyer .
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  topics used by Luke Zettlemoyer
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer"
ground truth values:  [('author.authorName', 'Luke Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  What conference does Daniella Coelho publish in ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  conferences that Daniella Coelho has published in
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  In which conferences does Daniella Coelho typically publish ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  in what conferences does Daniella Coelho publish ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:   17%|█▋        | 131/750 [00:05<00:19, 31.75it/s] 18%|█▊        | 136/750 [00:05<00:18, 33.51it/s] 19%|█▉        | 141/750 [00:06<00:49, 12.20it/s] 19%|█▉        | 144/750 [00:06<00:41, 14.61it/s][('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  What conferences does Daniella Coelho publish in ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  At which conferences does Daniella Coelho publish ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  What conferences does Daniella Coelho submit to ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho"
ground truth values:  [('author.authorName', 'Daniella Coelho')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers by Ed Desmond contain the keyphrases Semantic Parsing ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing"
ground truth values:  [('author.authorName', 'Ed Desmond'), ('keyphrase.keyphraseName', 'Semantic Parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does Ed Desmond have in Semantic Parsing area ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing"
ground truth values:  [('author.authorName', 'Ed Desmond'), ('keyphrase.keyphraseName', 'Semantic Parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  How many Semantic Parsing papers has Ed Desmond written ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing"
ground truth values:  [('author.authorName', 'Ed Desmond'), ('keyphrase.keyphraseName', 'Semantic Parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  How many paper has Ed Desmond written about Semantic Parsing ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing"
ground truth values:  [('author.authorName', 'Ed Desmond'), ('keyphrase.keyphraseName', 'Semantic Parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  What conferences did li dong submit to in 2016 ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'li dong')]
matched values OrderedDict()
--------------------
--------------------
text:  Where did li dong publish in 2016
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'li dong')]
matched values OrderedDict()
--------------------
--------------------
text:  What conferences did li dong publish in in 2016 ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'li dong')]
matched values OrderedDict()
--------------------
--------------------
text:  Where did li dong publish in 2016 ?
sql:  SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'li dong')]
matched values OrderedDict()
--------------------
--------------------
text:  acl papers in 2012 on Parsing
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were published in acl in 2012 about Parsing ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  papers on Parsing appeared at acl last year
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  Parsing papers from acl 2012
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about Parsing in acl 2012
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  acl papers in 2012 in Parsing
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  acl papers in 2012 about Parsing
sql:   20%|█▉        | 147/750 [00:06<00:35, 17.10it/s] 20%|██        | 150/750 [00:07<00:30, 19.42it/s] 20%|██        | 153/750 [00:07<00:27, 21.46it/s] 21%|██        | 158/750 [00:07<00:22, 25.82it/s] 22%|██▏       | 163/750 [00:07<00:19, 30.18it/s]SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were published at acl in 2012 were about Parsing ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  papers on Parsing appeared at acl in 2012
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  how many Parsing papers did acl 2012 have ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  who published Parsing papers at acl 2012
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  which papers in acl 2012 had Parsing in them ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  what were some Parsing based papers in acl 2012 ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl"
ground truth values:  [('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  List the popular publications on dependent types
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types"
ground truth values:  [('keyphrase.keyphraseName', 'dependent types')]
matched values OrderedDict()
--------------------
--------------------
text:  Which paper should I read about dependent types ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types"
ground truth values:  [('keyphrase.keyphraseName', 'dependent types')]
matched values OrderedDict()
--------------------
--------------------
text:  top dependent types papers
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types"
ground truth values:  [('keyphrase.keyphraseName', 'dependent types')]
matched values OrderedDict()
--------------------
--------------------
text:  List papers that has a keyword Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Question Answering research papers
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers on Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers related to Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers about Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers published in the area of Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Question Answering experiments
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Show me the papers on Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
 22%|██▏       | 168/750 [00:07<00:17, 34.11it/s] 23%|██▎       | 173/750 [00:07<00:15, 37.41it/s] 24%|██▎       | 178/750 [00:07<00:14, 40.22it/s] 24%|██▍       | 183/750 [00:09<00:55, 10.13it/s]ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers that used Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers that mention Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Question Answering papers
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Show me Question Answering papers .
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Question Answering publications
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Fetch me some papers on Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers on Question Answering experiments
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers talk about Question Answering ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the paper about Question Answering ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Which papers are about about Question Answering ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  list papers that used Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers for Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  List papers that has keyword Question Answering
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  papers with Question Answering in keyphrases
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering"
ground truth values:  [('keyphrase.keyphraseName', 'Question Answering')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases used by Luke S Zettlemoyer for each year
sql:  SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Luke S Zettlemoyer" ORDER BY t3.year  ,  t2.keyphraseid
ground truth values:  [('author.authorName', 'Luke S Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  recent research interests of sanjeev arora
sql:  SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'sanjeev arora')]
matched values OrderedDict()
--------------------
--------------------
text:  recent papers by sanjeev arora
sql:  SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'sanjeev arora')]
matched values OrderedDict()
--------------------
--------------------
text:  recent papers written by sanjeev arora
sql:  SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'sanjeev arora')]
matched values OrderedDict()
--------------------
--------------------
text:  list papers published by balakrishnan prabhakaran
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "balakrishnan prabhakaran"
ground truth values:  [('author.authorName', 'balakrishnan prabhakaran')]
matched values  25%|██▌       | 188/750 [00:09<00:42, 13.27it/s] 26%|██▌       | 192/750 [00:09<00:34, 16.07it/s] 26%|██▌       | 196/750 [00:09<00:30, 18.25it/s] 27%|██▋       | 200/750 [00:09<00:27, 20.02it/s]OrderedDict()
--------------------
--------------------
text:  citation count of zachary tatlock 's papers
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "zachary tatlock"
ground truth values:  [('author.authorName', 'zachary tatlock')]
matched values OrderedDict()
--------------------
--------------------
text:  subhasis chaudhuri
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri"
ground truth values:  [('author.authorName', 'subhasis chaudhuri')]
matched values OrderedDict()
--------------------
--------------------
text:  list papers by subhasis chaudhuri
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri"
ground truth values:  [('author.authorName', 'subhasis chaudhuri')]
matched values OrderedDict()
--------------------
--------------------
text:  List of papers by subhasis chaudhuri
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri"
ground truth values:  [('author.authorName', 'subhasis chaudhuri')]
matched values OrderedDict()
--------------------
--------------------
text:  conference papers of subhasis chaudhuri
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri"
ground truth values:  [('author.authorName', 'subhasis chaudhuri')]
matched values OrderedDict()
--------------------
--------------------
text:  how many parsing papers in ACL 2014
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL"
ground truth values:  [('keyphrase.keyphraseName', 'parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  how many parsing papers appeared in the proceeeding of ACL 2014 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL"
ground truth values:  [('keyphrase.keyphraseName', 'parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  how many parsing papers were published at ACL 2014 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL"
ground truth values:  [('keyphrase.keyphraseName', 'parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  brian curless convolution paper
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  convolution by brian curless
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by brian curless about convolution
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  brian curless 's paper about convolution
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the papers of brian curless in convolution ?
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  papers brian curless wrote about convolution
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  brian curless 's papers on convolution
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the paper about convolution from brian curless ?
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:   27%|██▋       | 204/750 [00:09<00:25, 21.64it/s] 28%|██▊       | 207/750 [00:09<00:23, 22.99it/s] 28%|██▊       | 211/750 [00:09<00:20, 26.31it/s] 29%|██▊       | 215/750 [00:10<00:18, 29.26it/s]papers by brian curless in convolution topic
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  I want the papers on keyphrase0 by brian curless
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  convolution papers by brian curless
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has brian curless written on convolution ?
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has brian curless written about convolution ?
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  convolution paper by brian curless
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  Does brian curless do convolution ?
sql:  SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution"
ground truth values:  [('author.authorName', 'brian curless'), ('keyphrase.keyphraseName', 'convolution')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has Liwen Xiong written in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  What did Liwen Xiong published in 2015 ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers written by Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the papers of Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by Liwen Xiong from 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers published in 2015 by Liwen Xiong
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  what has Liwen Xiong done in the past year
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers did Liwen Xiong publish last year ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  papers published in 2015 by Liwen Xiong
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Liwen Xiong 's papers in 2015 ?
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:   29%|██▉       | 219/750 [00:10<00:16, 31.76it/s] 30%|██▉       | 223/750 [00:10<00:15, 33.82it/s] 30%|███       | 227/750 [00:11<01:11,  7.33it/s] 31%|███       | 231/750 [00:11<00:54,  9.56it/s] 31%|███▏      | 235/750 [00:12<00:42, 12.15it/s][('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Liwen Xiong 's papers in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Liwen Xiong publication 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers authored by Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers from Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers are published by Liwen Xiong in 2015
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015
ground truth values:  [('author.authorName', 'Liwen Xiong')]
matched values OrderedDict()
--------------------
--------------------
text:  What TAIL paper published in NIPS ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  List the papers on TAIL that were published in NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  what are the papers in NIPS about TAIL ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers about TAIL in NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  papers at NIPS related to TAIL
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about TAIL published at NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  TAIL papers in NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  papers on TAIL NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  TAIL papers used in NIPS
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'TAIL'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many co-authors has Mark Steedman had ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != "Mark Steedman" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Mark Steedman" )
ground truth values:  [('author.authorName', 'Mark Steedman'), ('author.authorName', 'Mark Steedman')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases used by Christof Dallermassl in 2000
sql:  SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000
ground truth values:  [('author.authorName', 'Christof Dallermassl')]
matched values OrderedDict()
--------------------
--------------------
text:  Keyphrases used by Christof Dallermassl in 2000
sql:  SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000
ground truth values:  [('author.authorName', 'Christof Dallermassl')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases Christof Dallermassl used in papers written last year
sql:  SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000
ground truth values:  [('author.authorName', 'Christof Dallermassl')]
matched values OrderedDict()
--------------------
-------------------- 32%|███▏      | 239/750 [00:12<00:33, 15.23it/s] 32%|███▏      | 243/750 [00:12<00:27, 18.43it/s] 33%|███▎      | 248/750 [00:12<00:22, 22.00it/s] 34%|███▎      | 253/750 [00:12<00:19, 25.72it/s] 34%|███▍      | 258/750 [00:12<00:16, 30.00it/s]
text:  What are keyphrases by Christof Dallermassl in 2000 ?
sql:  SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000
ground truth values:  [('author.authorName', 'Christof Dallermassl')]
matched values OrderedDict()
--------------------
--------------------
text:  journal articles by mohammad rastegari
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mohammad rastegari" AND t3.journalid  >=  0
ground truth values:  [('author.authorName', 'mohammad rastegari')]
matched values OrderedDict()
--------------------
--------------------
text:  Journal Papers by mohammad rastegari
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mohammad rastegari" AND t3.journalid  >=  0
ground truth values:  [('author.authorName', 'mohammad rastegari')]
matched values OrderedDict()
--------------------
--------------------
text:  best paper in TACL 2014 ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  "TACL" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'TACL')]
matched values OrderedDict()
--------------------
--------------------
text:  What was the best paper at TACL 2014 ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  "TACL" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'TACL')]
matched values OrderedDict()
--------------------
--------------------
text:  who published at acl 2016 ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  acl 2016 authors
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  authors of acl 2016 papers
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  List of authors acl 2016
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  author published acl 2016
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  who had papers at acl 2016 ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  List of authors in acl 2016
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl"
ground truth values:  [('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were written on Multiuser Receiver in the Decision Feedback this year ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Multiuser Receiver in the Decision Feedback" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1
ground truth values:  [('keyphrase.keyphraseName', 'Multiuser Receiver in the Decision Feedback')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers did Mirella Lapata cite ?
sql:  SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata"
ground truth values:  [('author.authorName', 'Mirella Lapata')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers does Mirella Lapata cite
sql:  SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata"
ground truth values:  [('author.authorName', 'Mirella Lapata')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers has Mirella Lapata cited ?
sql:  SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata"
ground truth values:  [('author.authorName', 'Mirella Lapata')]
matched values OrderedDict()
--------------------
--------------------
text:  When does Michael Stonebraker publish the first VLDB paper ?
sql:  SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t4.venuename  =  "VLDB" ORDER BY t3.year
ground truth values:  [('author.authorName', 'Michael Stonebraker'), ('venue.venueName', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  semantic parsing dataset
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  data sets for semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  list datasets for semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:   35%|███▌      | 263/750 [00:12<00:15, 31.87it/s] 36%|███▌      | 267/750 [00:12<00:14, 33.70it/s] 36%|███▌      | 271/750 [00:12<00:13, 35.19it/s] 37%|███▋      | 275/750 [00:13<00:13, 35.88it/s] 37%|███▋      | 280/750 [00:13<00:11, 39.17it/s][('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets for semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  Datasets with semantic parsing information
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets used by semantic parsing papers
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets in semantic parsing papers
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  semantic parsing datasets
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets in papers about semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets used for semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  large-scale datasets used in semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets with semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets used for evaluating semantic parsing
sql:  SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing"
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  where does Peter Mertens publish ?
sql:  SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens"
ground truth values:  [('author.authorName', 'Peter Mertens')]
matched values OrderedDict()
--------------------
--------------------
text:  in what venues does Peter Mertens publish ?
sql:  SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens"
ground truth values:  [('author.authorName', 'Peter Mertens')]
matched values OrderedDict()
--------------------
--------------------
text:  Where does Peter Mertens publish ?
sql:  SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens"
ground truth values:  [('author.authorName', 'Peter Mertens')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers appeared at nature communications last year
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were at nature communications 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers accepted in nature communications 2015
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were published in nature communications in 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers on nature communications in 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers in nature communications 2015
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values  38%|███▊      | 285/750 [00:13<00:11, 41.80it/s] 39%|███▊      | 290/750 [00:13<00:11, 40.44it/s] 39%|███▉      | 295/750 [00:15<01:00,  7.54it/s]OrderedDict()
--------------------
--------------------
text:  How many papers were accepted at nature communications 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers are presented in nature communications 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers published in nature communications in 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers published in nature communications 2015 ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were published in nature communications 2015 conference ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers was published in nature communications in 2015
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications"
ground truth values:  [('venue.venueName', 'nature communications')]
matched values OrderedDict()
--------------------
--------------------
text:  what was the first deep learning paper ?
sql:  SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  "deep learning" ORDER BY t4.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  what year was the first deep learning paper published ?
sql:  SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  "deep learning" ORDER BY t4.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets mentioned at ACL
sql:  SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  what datasets do papers at ACL use most ?
sql:  SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  the papers on semantic parsing by li dong at acl in 2016
sql:  SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "li dong" AND t3.keyphrasename  =  "semantic parsing" AND t2.year  =  2016 AND t6.venuename  =  "acl"
ground truth values:  [('author.authorName', 'li dong'), ('keyphrase.keyphraseName', 'semantic parsing'), ('venue.venueName', 'acl')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were written on convolutional neural networks in the past year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'convolutional neural networks')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were published on convolutional neural networks in 2016 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'convolutional neural networks')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were written on convolutional neural networks in 2016 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'convolutional neural networks')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were written on the convolutional neural networks this year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'convolutional neural networks')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers on convolutional neural networks have been published in the past year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'convolutional neural networks')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were written on question answering this year ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'question answering')]
matched values OrderedDict()
--------------------
--------------------
text:  which year had the most NIPS papers ?
sql:  SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
 40%|████      | 300/750 [00:15<00:44, 10.02it/s] 41%|████      | 305/750 [00:15<00:34, 12.97it/s] 41%|████      | 309/750 [00:15<00:27, 16.25it/s] 42%|████▏     | 313/750 [00:15<00:22, 19.77it/s] 42%|████▏     | 317/750 [00:15<00:18, 23.28it/s]--------------------
--------------------
text:  what year had the most NIPS papers ?
sql:  SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  what year had the most number of NIPS papers ?
sql:  SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  when were most NIPS papers published ?
sql:  SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  who writes papers with Noah A Smith ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Who is a coauthor with Noah A Smith ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Who are Noah A Smith 's co-authors
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Who has coauthored with Noah A Smith ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  co-authors of Noah A Smith
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  author who wrote papers with Noah A Smith
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  authors who collaborated with Noah A Smith
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  who does Noah A Smith author with ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Who are Noah A Smith 's coauthors
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  who are all the co-authors of Noah A Smith ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  who does Noah A Smith work with ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  who does Noah A Smith collaborate with ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Who are Noah A Smith 's coauthors ?
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  coauthors of Noah A Smith
sql:  SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith"
ground truth values:  [('author.authorName', 'Noah A Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  what datasets did jitendra malik use ?
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  what datasets are used in papers by jitendra malik
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  what datasets did jitendra malik use in his papers ?
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
 43%|████▎     | 321/750 [00:15<00:16, 26.56it/s] 43%|████▎     | 326/750 [00:16<00:14, 29.74it/s] 44%|████▍     | 331/750 [00:16<00:12, 32.64it/s] 45%|████▍     | 336/750 [00:16<00:11, 35.29it/s]--------------------
--------------------
text:  what datasets were used by jitendra malik ?
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  datasets used in papers written by jitendra malik ?
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  Datasets by jitendra malik
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  What datasets have jitendra malik used
sql:  SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik"
ground truth values:  [('author.authorName', 'jitendra malik')]
matched values OrderedDict()
--------------------
--------------------
text:  recent deep learning papers
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  new deep learning papers
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the latest publications on deep learning ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  Most recent deep learning conference ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  Show me some recent papers on deep learning ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What are some recent papers written in deep learning ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the most recent paper of deep learning ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What are recent papers on deep learning ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  Current research on deep learning
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  latest deep learning papers
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  newest deep learning papers
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What years did Pedro Domingos publish papers in ?
sql:  SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Pedro Domingos" GROUP BY t3.year
ground truth values:  [('author.authorName', 'Pedro Domingos')]
matched values OrderedDict()
--------------------
--------------------
text:  In what years did Pedro Domingos publish a paper ?
sql:  SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Pedro Domingos" GROUP BY t3.year
ground truth values:  [('author.authorName', 'Pedro Domingos')]
matched values OrderedDict()
--------------------
--------------------
text:  jamie callan 's publications by year
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "jamie callan" ORDER BY t3.year
ground truth values:  [('author.authorName', 'jamie callan')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does jamie callan publish each year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "jamie callan" GROUP BY t3.year
ground truth values:  [('author.authorName', 'jamie callan')]
matched values OrderedDict()
--------------------
--------------------
text:  number of papers by year from jamie callan
sql:   45%|████▌     | 341/750 [00:16<00:11, 37.02it/s] 46%|████▌     | 346/750 [00:16<00:10, 37.80it/s] 47%|████▋     | 351/750 [00:16<00:11, 34.98it/s] 47%|████▋     | 355/750 [00:16<00:10, 36.21it/s]SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "jamie callan" GROUP BY t3.year
ground truth values:  [('author.authorName', 'jamie callan')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers jamie callan published each year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "jamie callan" GROUP BY t3.year
ground truth values:  [('author.authorName', 'jamie callan')]
matched values OrderedDict()
--------------------
--------------------
text:  who does oren etzioni cite
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni"
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers does oren etzioni cite
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni"
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  papers citing Daniel Jurafsky
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky"
ground truth values:  [('author.authorName', 'Daniel Jurafsky')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers cite Daniel Jurafsky ?
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky"
ground truth values:  [('author.authorName', 'Daniel Jurafsky')]
matched values OrderedDict()
--------------------
--------------------
text:  Which papers cite Daniel Jurafsky ?
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky"
ground truth values:  [('author.authorName', 'Daniel Jurafsky')]
matched values OrderedDict()
--------------------
--------------------
text:  citations for Daniel Jurafsky
sql:  SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky"
ground truth values:  [('author.authorName', 'Daniel Jurafsky')]
matched values OrderedDict()
--------------------
--------------------
text:  journal papers for instance segmentation
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "instance segmentation" AND t3.journalid  >=  0
ground truth values:  [('keyphrase.keyphraseName', 'instance segmentation')]
matched values OrderedDict()
--------------------
--------------------
text:  who has the most papers in semantic parsing after 2005 ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "semantic parsing" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who has written the most papers on semantic parsing since 2005 ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "semantic parsing" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  who published the most in semantic parsing after 2005 ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "semantic parsing" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citations does Dan Makumbi 's Genetic Identity paper have ?
sql:  SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Dan Makumbi" AND t3.keyphrasename  =  "Genetic Identity"
ground truth values:  [('author.authorName', 'Dan Makumbi'), ('keyphrase.keyphraseName', 'Genetic Identity')]
matched values OrderedDict()
--------------------
--------------------
text:  character recognition papers earlier than 2010
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "character recognition" AND t3.year  <  2010
ground truth values:  [('keyphrase.keyphraseName', 'character recognition')]
matched values OrderedDict()
--------------------
--------------------
text:  papers before 2010 about character recognition
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "character recognition" AND t3.year  <  2010
ground truth values:  [('keyphrase.keyphraseName', 'character recognition')]
matched values OrderedDict()
--------------------
--------------------
text:  character recognition papers from before 2010
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "character recognition" AND t3.year  <  2010
ground truth values:  [('keyphrase.keyphraseName', 'character recognition')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about character recognition from before 2010
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "character recognition" AND t3.year  <  2010
ground truth values:  [('keyphrase.keyphraseName', 'character recognition')]
matched values OrderedDict()
--------------------
--------------------
text:  character recognition papers before 2010
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "character recognition" AND t3.year  <  2010
ground truth values:  [('keyphrase.keyphraseName', 'character recognition')]
matched values OrderedDict()
--------------------
 48%|████▊     | 359/750 [00:16<00:11, 35.07it/s] 48%|████▊     | 363/750 [00:17<00:11, 34.26it/s] 49%|████▉     | 367/750 [00:17<00:11, 33.40it/s] 49%|████▉     | 371/750 [00:17<00:11, 33.48it/s]--------------------
text:  what topics does oren etzioni write about most ?
sql:  SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC
ground truth values:  [('author.authorName', 'oren etzioni')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers related to deep learning cited the dataset ImageNet ?
sql:  SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  "ImageNet" AND t5.keyphrasename  =  "deep learning"
ground truth values:  [('dataset.datasetName', 'ImageNet'), ('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  most cited papers on parsing
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  parsing top papers
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  List top papers for parsing
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  parsing papers that have the most citations
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the paper about parsing of the most citation ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  Paper on parsing with most citations
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  parsing papers with most citations
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  most cited parsing papers
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  what are the parsing papers that have the most citations ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  highly cited parsing papers
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  most cited papers for parsing
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  Most cited papers on parsing
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the most cited paper by ohad shamir ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the highest cited paper by ohad shamir ?
sql:   50%|█████     | 375/750 [00:17<00:11, 33.22it/s] 51%|█████     | 379/750 [00:19<01:16,  4.82it/s] 51%|█████     | 384/750 [00:20<00:55,  6.56it/s] 52%|█████▏    | 388/750 [00:20<00:41,  8.64it/s]SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the most cited paper of ohad shamir ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  What is ohad shamir 's highest cited paper ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  What paper by ohad shamir has the most citation ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  what is the most cited paper of ohad shamir ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  what is ohad shamir 's most cited paper ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC
ground truth values:  [('author.authorName', 'ohad shamir')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers did michael i. jordan publish in 2016 ?
sql:  SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "michael i. jordan" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'michael i. jordan')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does michael i. jordan have in 2016 ?
sql:  SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "michael i. jordan" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'michael i. jordan')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers did michael i. jordan publish in 2016
sql:  SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "michael i. jordan" AND t3.year  =  2016
ground truth values:  [('author.authorName', 'michael i. jordan')]
matched values OrderedDict()
--------------------
--------------------
text:  count of ACL papers by author
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "ACL" GROUP BY t1.authorid
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  how many ACL papers by author
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "ACL" GROUP BY t1.authorid
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  number of ACL papers by author
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "ACL" GROUP BY t1.authorid
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  who wrote the most papers for CVPR 2007
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  who published papers in CVPR 2007
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  who wrote the most CVPR papers in 2007
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  most published author at CVPR 2007
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  who published the most papers in CVPR 2007
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  Who published the most papers in 2007 at CVPR ?
sql:  SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers in ACL 2015 ?
sql:   52%|█████▏    | 392/750 [00:20<00:31, 11.29it/s] 53%|█████▎    | 397/750 [00:20<00:24, 14.58it/s] 53%|█████▎    | 401/750 [00:20<00:19, 17.54it/s] 54%|█████▍    | 405/750 [00:20<00:17, 20.07it/s] 55%|█████▍    | 409/750 [00:20<00:15, 21.96it/s]SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  number of papers published in ACL 2015
sql:  SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers does Richard Ladner have in chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  what paper has Richard Ladner published in chi journal ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  what paper has Richard Ladner published in chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers by Richard Ladner published at chi
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Does Richard Ladner publish in chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  What has Richard Ladner published at chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers has Richard Ladner written at chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Which paper did Richard Ladner present at chi ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi"
ground truth values:  [('author.authorName', 'Richard Ladner'), ('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the paper with the most citation about Artificial Intelligence ?
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "Artificial Intelligence" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'Artificial Intelligence')]
matched values OrderedDict()
--------------------
--------------------
text:  Fetch me the most cited publications for Artificial Intelligence
sql:  SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "Artificial Intelligence" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'Artificial Intelligence')]
matched values OrderedDict()
--------------------
--------------------
text:  topics at ACL 2014
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  "ACL" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  most common topics at NIPS 2015
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  most popular topics at NIPS 2015
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  hot topics at NIPS 2015
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  popular topics at NIPS 2015
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  which topics were most popular at NIPS 2015
sql:  55%|█████▌    | 413/750 [00:20<00:13, 24.41it/s] 56%|█████▌    | 418/750 [00:20<00:11, 28.69it/s] 57%|█████▋    | 424/750 [00:21<00:10, 32.35it/s] 57%|█████▋    | 428/750 [00:21<00:10, 30.47it/s] SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  topics popular at NIPS 2015
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers related to deep reinforcement learning in nips ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "deep reinforcement learning" AND t4.venuename  =  "nips"
ground truth values:  [('keyphrase.keyphraseName', 'deep reinforcement learning'), ('venue.venueName', 'nips')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers on WebKB
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  which papers used WebKB ?
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about WebKB
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  List the papers that used WebKB dataset
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  papers using WebKB
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  papers that use WebKB
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  WebKB papers
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  papers that used WebKB
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers that use the WebKB dataset
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB"
ground truth values:  [('dataset.datasetName', 'WebKB')]
matched values OrderedDict()
--------------------
--------------------
text:  how is the most cited author in CVPR ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  who is the most cited author at CVPR ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  what are some syntactic parsing papers that chris dyer did not write ?
sql:  SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing"
ground truth values:  [('author.authorName', 'chris dyer'), ('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  are there any syntactic parsing papers not written by chris dyer ?
sql:  SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing"
ground truth values:  [('author.authorName', 'chris dyer'), ('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  what are syntactic parsing papers not written by chris dyer
sql:  SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing"
ground truth values:  [('author.authorName', 'chris dyer'), ('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  syntactic parsing papers not written by chris dyer
sql:  SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing"
ground truth values:  [('author.authorName', 'chris dyer'), ('keyphrase.keyphraseName', 'syntactic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  When was benjamin mako hill 's first publication ?
sql:   58%|█████▊    | 433/750 [00:21<00:09, 33.38it/s] 59%|█████▊    | 439/750 [00:21<00:08, 37.29it/s] 59%|█████▉    | 444/750 [00:21<00:08, 37.93it/s] 60%|██████    | 450/750 [00:21<00:07, 41.00it/s]SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "benjamin mako hill" GROUP BY t3.year ORDER BY t3.year
ground truth values:  [('author.authorName', 'benjamin mako hill')]
matched values OrderedDict()
--------------------
--------------------
text:  When was benjamin mako hill 's first paper written ?
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "benjamin mako hill" GROUP BY t3.year ORDER BY t3.year
ground truth values:  [('author.authorName', 'benjamin mako hill')]
matched values OrderedDict()
--------------------
--------------------
text:  When did ameet soni publish ?
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "ameet soni" GROUP BY t3.year ORDER BY t3.year
ground truth values:  [('author.authorName', 'ameet soni')]
matched values OrderedDict()
--------------------
--------------------
text:  Who cites Daniel A Reed the most
sql:  SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  "Daniel A Reed" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC
ground truth values:  [('author.authorName', 'Daniel A Reed')]
matched values OrderedDict()
--------------------
--------------------
text:  Who cites Daniel A Reed most ?
sql:  SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  "Daniel A Reed" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC
ground truth values:  [('author.authorName', 'Daniel A Reed')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers are in sigir ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "sigir"
ground truth values:  [('venue.venueName', 'sigir')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers does sigir have ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "sigir"
ground truth values:  [('venue.venueName', 'sigir')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers are published in sigir ?
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "sigir"
ground truth values:  [('venue.venueName', 'sigir')]
matched values OrderedDict()
--------------------
--------------------
text:  number of papers in sigir conference
sql:  SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "sigir"
ground truth values:  [('venue.venueName', 'sigir')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers have fewer than 5 citations by ACL papers ?
sql:  SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  ACL papers with less than 5 citations
sql:  SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  what ACL papers have less than 5 citations ?
sql:  SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers have fewer than 5 citations by ACL papers
sql:  SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the 5 most recent papers of Mirella Lapata ?
sql:  SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Mirella Lapata" ORDER BY t3.year DESC LIMIT 5
ground truth values:  [('author.authorName', 'Mirella Lapata')]
matched values OrderedDict()
--------------------
--------------------
text:  What were the papers published at pldi 2015 ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers from pldi 2015 conference
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers published at pldi 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the papers from pldi 2015 ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  Papers from pldi 2015 ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  Which papers were accepted in pldi 2015 ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were published during the conference pldi 2015 ?
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers in pldi 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  List of papers in pldi 2015
sql:   61%|██████    | 456/750 [00:21<00:06, 43.44it/s] 62%|██████▏   | 462/750 [00:21<00:06, 46.59it/s] 62%|██████▏   | 467/750 [00:22<00:06, 43.85it/s] 63%|██████▎   | 472/750 [00:22<00:07, 39.44it/s] 64%|██████▎   | 477/750 [00:22<00:07, 38.28it/s]SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  pldi papers in 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers are published in pldi 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  papers from pldi 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  pldi papers 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  pldi 2015 conference
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  pldi best paper award 2015
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  pldi 2015 list of papers
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi"
ground truth values:  [('venue.venueName', 'pldi')]
matched values OrderedDict()
--------------------
--------------------
text:  ACL papers in 2016 with neural attention in the title
sql:  SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE "neural attention" AND t1.year  =  2016 AND t2.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  Who writes a lot of papers in Machine Learning ?
sql:  SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  "Machine Learning" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'Machine Learning')]
matched values OrderedDict()
--------------------
--------------------
text:  how many papers by dan klein are cited by michael i. jordan
sql:  SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "michael i. jordan" AND t1.authorname  =  "dan klein"
ground truth values:  [('author.authorName', 'michael i. jordan'), ('author.authorName', 'dan klein')]
matched values OrderedDict()
--------------------
--------------------
text:  how many of dan klein 's papers cite michael i. jordan
sql:  SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "michael i. jordan" AND t1.authorname  =  "dan klein"
ground truth values:  [('author.authorName', 'michael i. jordan'), ('author.authorName', 'dan klein')]
matched values OrderedDict()
--------------------
--------------------
text:  who else was on the paper with Ameet Soni and Ras Bodik ?
sql:  SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Ameet Soni" AND t1.authorname  =  "Ras Bodik"
ground truth values:  [('author.authorName', 'Ameet Soni'), ('author.authorName', 'Ras Bodik')]
matched values OrderedDict()
--------------------
--------------------
text:  2014 papers using ImageNet
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014
ground truth values:  [('dataset.datasetName', 'ImageNet')]
matched values OrderedDict()
--------------------
--------------------
text:  What journals are Takashi Matsumoto 's articles published in ?
sql:  SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid
ground truth values:  [('author.authorName', 'Takashi Matsumoto')]
matched values OrderedDict()
--------------------
--------------------
text:  What journals has Takashi Matsumoto published in ?
sql:  SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid
ground truth values:  [('author.authorName', 'Takashi Matsumoto')]
matched values OrderedDict()
--------------------
--------------------
text:  In what scholarly journals does Takashi Matsumoto publish ?
sql:  SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid
ground truth values:  [('author.authorName', 'Takashi Matsumoto')]
matched values OrderedDict()
--------------------
--------------------
text:  What authors wrote papers about Bacterial Wilt in 2016 ?
sql:  SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  "Bacterial Wilt" AND t4.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'Bacterial Wilt')]
matched values OrderedDict()
--------------------
--------------------
text:  Who wrote on the topic of Bacterial Wilt in 2016 ?
sql:  SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  "Bacterial Wilt" AND t4.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'Bacterial Wilt')]
matched values OrderedDict()
--------------------
--------------------
text:  When did Luke S Zettlemoyer publish ?
sql:  SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Luke S Zettlemoyer" ORDER BY t3.year
ground truth values:  [('author.authorName', 'Luke S Zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  question answering 2016 papers
sql:   64%|██████▍   | 482/750 [00:22<00:06, 39.71it/s] 65%|██████▍   | 487/750 [00:25<00:52,  5.00it/s] 65%|██████▌   | 490/750 [00:25<00:39,  6.66it/s]SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'question answering')]
matched values OrderedDict()
--------------------
--------------------
text:  What papers were written on question answering in 2016 ?
sql:  SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  =  2016
ground truth values:  [('keyphrase.keyphraseName', 'question answering')]
matched values OrderedDict()
--------------------
--------------------
text:  Find journals about Temporal Data .
sql:  SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Temporal Data" GROUP BY t3.journalid
ground truth values:  [('keyphrase.keyphraseName', 'Temporal Data')]
matched values OrderedDict()
--------------------
--------------------
text:  List the journals related to Temporal Data
sql:  SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Temporal Data" GROUP BY t3.journalid
ground truth values:  [('keyphrase.keyphraseName', 'Temporal Data')]
matched values OrderedDict()
--------------------
--------------------
text:  which ACL 2014 papers about Parsing used Jeopardy! Questions ?
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL"
ground truth values:  [('dataset.datasetName', 'Jeopardy! Questions'), ('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  Parsing papers using Jeopardy! Questions published at ACL 2014
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL"
ground truth values:  [('dataset.datasetName', 'Jeopardy! Questions'), ('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  Parsing papers from ACL 2014 using Jeopardy! Questions
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL"
ground truth values:  [('dataset.datasetName', 'Jeopardy! Questions'), ('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  Parsing papers from ACL 2014 that used Jeopardy! Questions
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL"
ground truth values:  [('dataset.datasetName', 'Jeopardy! Questions'), ('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  papers about Parsing that used Jeopardy! Questions and were published at ACL 2014
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL"
ground truth values:  [('dataset.datasetName', 'Jeopardy! Questions'), ('keyphrase.keyphraseName', 'Parsing'), ('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  in what journals does linda shapiro publish ?
sql:  SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "linda shapiro"
ground truth values:  [('author.authorName', 'linda shapiro')]
matched values OrderedDict()
--------------------
--------------------
text:  Which journals did linda shapiro submit papers to ?
sql:  SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "linda shapiro"
ground truth values:  [('author.authorName', 'linda shapiro')]
matched values OrderedDict()
--------------------
--------------------
text:  NIPS authors
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS"
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  who are the authors at NIPS ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS"
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  who authored papers at NIPS ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS"
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  who publishes in NIPS ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS"
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  who has papers at NIPS ?
sql:  SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS"
ground truth values:  [('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  which venue publishes the most papers about deep learning
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC
ground truth values:  66%|██████▌   | 496/750 [00:25<00:28,  8.96it/s] 67%|██████▋   | 500/750 [00:25<00:21, 11.62it/s] 67%|██████▋   | 504/750 [00:26<00:17, 14.36it/s] 68%|██████▊   | 508/750 [00:26<00:13, 17.77it/s] 68%|██████▊   | 513/750 [00:26<00:10, 21.58it/s] [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  How many publications were added to the Cell journal this year ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  "Cell" AND t3.year  =  2015
ground truth values:  [('journal.journalName', 'Cell')]
matched values OrderedDict()
--------------------
--------------------
text:  How many articles were published in the Cell journal in 2015 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  "Cell" AND t3.year  =  2015
ground truth values:  [('journal.journalName', 'Cell')]
matched values OrderedDict()
--------------------
--------------------
text:  What are all the publication titles by Donald E Knuth ?
sql:  SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Donald E Knuth"
ground truth values:  [('author.authorName', 'Donald E Knuth')]
matched values OrderedDict()
--------------------
--------------------
text:  papers published in eccv 2016 by ali farhadi
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ali farhadi" AND t3.year  =  2016 AND t4.venuename  =  "eccv"
ground truth values:  [('author.authorName', 'ali farhadi'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  Does ali farhadi have a paper in eccv in 2016 ?
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ali farhadi" AND t3.year  =  2016 AND t4.venuename  =  "eccv"
ground truth values:  [('author.authorName', 'ali farhadi'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  papers of ali farhadi in eccv 2016
sql:  SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ali farhadi" AND t3.year  =  2016 AND t4.venuename  =  "eccv"
ground truth values:  [('author.authorName', 'ali farhadi'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  What are some papers dealing with Semantic Data in YAGO ?
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  "YAGO" AND t4.keyphrasename  =  "Semantic Data"
ground truth values:  [('dataset.datasetName', 'YAGO'), ('keyphrase.keyphraseName', 'Semantic Data')]
matched values OrderedDict()
--------------------
--------------------
text:  Who has published more papers in chi ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  Who has written the most papers at chi ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  how is the most prolific author in chi ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  who published the most at chi
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC
ground truth values:  [('venue.venueName', 'chi')]
matched values OrderedDict()
--------------------
--------------------
text:  conferences that mention ImageNet
sql:  SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "ImageNet"
ground truth values:  [('dataset.datasetName', 'ImageNet')]
matched values OrderedDict()
--------------------
--------------------
text:  first deep learning paper
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  What was the first paper on deep learning written ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  When was deep learning proposed ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  when was the first deep learning paper published ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC
ground truth values:  [('keyphrase.keyphraseName', 'deep learning')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers were published in Academic radiology in 1995 ?
sql:  SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  "Academic radiology" AND t2.year  =  1995
ground truth values:  [('journal.journalName', 'Academic radiology')]
matched values OrderedDict()
--------------------
--------------------
text:  what papers do parsing papers typically cite ?
sql:  SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  "parsing"
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  papers typically cited by parsing papers
sql:   69%|██████▉   | 518/750 [00:26<00:09, 25.45it/s] 70%|██████▉   | 523/750 [00:26<00:07, 28.97it/s] 70%|███████   | 528/750 [00:26<00:06, 32.92it/s] 71%|███████   | 533/750 [00:26<00:06, 33.65it/s] 72%|███████▏  | 538/750 [00:26<00:06, 33.68it/s]SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  "parsing"
ground truth values:  [('keyphrase.keyphraseName', 'parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  venue for Trophic Cascade
sql:  SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade"
ground truth values:  [('keyphrase.keyphraseName', 'Trophic Cascade')]
matched values OrderedDict()
--------------------
--------------------
text:  conferences for Trophic Cascade
sql:  SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade"
ground truth values:  [('keyphrase.keyphraseName', 'Trophic Cascade')]
matched values OrderedDict()
--------------------
--------------------
text:  what conferences are related to Trophic Cascade
sql:  SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade"
ground truth values:  [('keyphrase.keyphraseName', 'Trophic Cascade')]
matched values OrderedDict()
--------------------
--------------------
text:  What was the conference name that approved Trophic Cascade ?
sql:  SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade"
ground truth values:  [('keyphrase.keyphraseName', 'Trophic Cascade')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers were written on question answering in 2011 through 2016 ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  >=  2011
ground truth values:  [('keyphrase.keyphraseName', 'question answering')]
matched values OrderedDict()
--------------------
--------------------
text:  What are the best NLP conferences ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "NLP" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'NLP')]
matched values OrderedDict()
--------------------
--------------------
text:  ACL papers by author
sql:  SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "ACL"
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  what keyphrase does Brian DeRenzi write about that gets most citations ?
sql:  SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Brian DeRenzi" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC
ground truth values:  [('author.authorName', 'Brian DeRenzi')]
matched values OrderedDict()
--------------------
--------------------
text:  main topics of work by Brian DeRenzi
sql:  SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Brian DeRenzi" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC
ground truth values:  [('author.authorName', 'Brian DeRenzi')]
matched values OrderedDict()
--------------------
--------------------
text:  When was Michael Stonebraker GIS Database published ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database"
ground truth values:  [('author.authorName', 'Michael Stonebraker'), ('keyphrase.keyphraseName', 'GIS Database')]
matched values OrderedDict()
--------------------
--------------------
text:  When did Michael Stonebraker publish his GIS Database paper ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database"
ground truth values:  [('author.authorName', 'Michael Stonebraker'), ('keyphrase.keyphraseName', 'GIS Database')]
matched values OrderedDict()
--------------------
--------------------
text:  When does Michael Stonebraker publish the GIS Database paper ?
sql:  SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database"
ground truth values:  [('author.authorName', 'Michael Stonebraker'), ('keyphrase.keyphraseName', 'GIS Database')]
matched values OrderedDict()
--------------------
--------------------
text:  In 2010 what journal published an article about Trophic Cascade ?
sql:  SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade" AND t3.year  =  2010 GROUP BY t3.journalid
ground truth values:  [('keyphrase.keyphraseName', 'Trophic Cascade')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the most popular paper this year in CVPR ?
sql:  SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  "CVPR" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'CVPR')]
matched values OrderedDict()
--------------------
--------------------
text:  How many citations does luke zettlemoyer have per year
sql:  SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "luke zettlemoyer" GROUP BY t3.year
ground truth values:  [('author.authorName', 'luke zettlemoyer')]
matched values OrderedDict()
--------------------
--------------------
text:  authors working on ImageNet
sql:  SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  "ImageNet" GROUP BY t2.paperid
ground truth values:  [('dataset.datasetName', 'ImageNet')]
matched values OrderedDict()
--------------------
--------------------
text:  Eric C. Kerrigan 's Liquid Automatica paper
sql:   72%|███████▏  | 542/750 [00:26<00:06, 33.19it/s] 73%|███████▎  | 546/750 [00:27<00:06, 31.52it/s] 73%|███████▎  | 550/750 [00:27<00:06, 30.72it/s] 74%|███████▍  | 554/750 [00:27<00:06, 29.85it/s]SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  "Eric C. Kerrigan" AND t3.keyphrasename  =  "Liquid" AND t6.venuename  =  "Automatica"
ground truth values:  [('author.authorName', 'Eric C. Kerrigan'), ('keyphrase.keyphraseName', 'Liquid'), ('venue.venueName', 'Automatica')]
matched values OrderedDict()
--------------------
--------------------
text:  Where did sergey levine publish his last paper ?
sql:  SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "sergey levine" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'sergey levine')]
matched values OrderedDict()
--------------------
--------------------
text:  keyphrases used by dan klein in his emnlp papers
sql:  SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  "dan klein" AND t4.venuename  =  "emnlp"
ground truth values:  [('author.authorName', 'dan klein'), ('venue.venueName', 'emnlp')]
matched values OrderedDict()
--------------------
--------------------
text:  Who are the prominent researchers in Neutralizing Antibody in 2012 ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "Neutralizing Antibody" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('keyphrase.keyphraseName', 'Neutralizing Antibody')]
matched values OrderedDict()
--------------------
--------------------
text:  the papers at eccv in 2014 using ImageNet dataset
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv"
ground truth values:  [('dataset.datasetName', 'ImageNet'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  which papers in eccv 2014 use ImageNet ?
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv"
ground truth values:  [('dataset.datasetName', 'ImageNet'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  eccv 2014 papers using ImageNet
sql:  SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv"
ground truth values:  [('dataset.datasetName', 'ImageNet'), ('venue.venueName', 'eccv')]
matched values OrderedDict()
--------------------
--------------------
text:  Euclidean Distance papers citing NIPS papers
sql:  SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Euclidean Distance" AND t4.venuename  =  "NIPS"
ground truth values:  [('keyphrase.keyphraseName', 'Euclidean Distance'), ('venue.venueName', 'NIPS')]
matched values OrderedDict()
--------------------
--------------------
text:  top authors working on ImageNet ?
sql:  SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  "ImageNet" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC
ground truth values:  [('dataset.datasetName', 'ImageNet')]
matched values OrderedDict()
--------------------
--------------------
text:  how many ACL 2012 papers have more than 7 citations ?
sql:  SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  "ACL" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  What was the topic of best paper in 2012 EMNLP-CoNLL ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  "EMNLP-CoNLL" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'EMNLP-CoNLL')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers has Noah Smith co-authored since 2009 ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != "Noah Smith" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE "Noah Smith" )
ground truth values:  [('author.authorName', 'Noah Smith')]
matched values OrderedDict()
--------------------
--------------------
text:  Number of ACL papers with more than 2 citations
sql:  SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2
ground truth values:  [('venue.venueName', 'ACL')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the name of Eric C. Kerrigan 's Liquid Automatica paper ?
sql:  SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE "Eric C. Kerrigan" AND t3.keyphrasename  =  "Liquid" AND t6.venuename  =  "Automatica"
ground truth values:  [('keyphrase.keyphraseName', 'Liquid'), ('venue.venueName', 'Automatica')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers used ImageNet datasets in cvpr ?
sql:  SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t4.venuename  =  "cvpr"
ground truth values:  [('dataset.datasetName', 'ImageNet'), ('venue.venueName', 'cvpr')]
matched values OrderedDict()
--------------------
--------------------
text:  What venues are for Neuroscience ?
sql:  SELECT DISTINCT venueid FROM venue WHERE venuename  =  "Neuroscience"
ground truth values:  [('venue.venueName', 'Neuroscience')]
matched values OrderedDict()
--------------------
 74%|███████▍  | 558/750 [00:27<00:05, 32.20it/s] 75%|███████▌  | 563/750 [00:27<00:05, 36.00it/s] 76%|███████▌  | 568/750 [00:27<00:04, 38.35it/s] 77%|███████▋  | 575/750 [00:27<00:03, 43.97it/s]--------------------
text:  When was the last time Mary Crainie published a paper ?
sql:  SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Mary Crainie"
ground truth values:  [('author.authorName', 'Mary Crainie')]
matched values OrderedDict()
--------------------
--------------------
text:  I want the co-authors of papers on Machine Translation Output with Philipp Koehn
sql:  SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  "Philipp Koehn" AND t3.keyphrasename  =  "Machine Translation Output"
ground truth values:  [('author.authorName', 'Philipp Koehn'), ('keyphrase.keyphraseName', 'Machine Translation Output')]
matched values OrderedDict()
--------------------
--------------------
text:  How many papers does Samuel Madden publish outside of PVLDB area ?
sql:  SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Samuel Madden" AND t4.venuename != "PVLDB"
ground truth values:  [('author.authorName', 'Samuel Madden'), ('venue.venueName', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  which journal did Donald E Knuth publish his last paper ?
sql:  SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Donald E Knuth" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC
ground truth values:  [('author.authorName', 'Donald E Knuth')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the venue of Fracture of acrylic bone cement ?
sql:  SELECT DISTINCT venueid FROM paper WHERE title  =  "Fracture of acrylic bone cement"
ground truth values:  [('paper.title', 'Fracture of acrylic bone cement')]
matched values OrderedDict()
--------------------
--------------------
text:  How many authors published at sigcse in 2010 ?
sql:  SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  "sigcse"
ground truth values:  [('venue.venueName', 'sigcse')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the year of publication of " A Switching Architecture For ISDN " ?
sql:  SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  "A Switching Architecture For ISDN"
ground truth values:  [('paper.title', 'A Switching Architecture For ISDN')]
matched values OrderedDict()
--------------------
--------------------
text:  what keywords are used by papers at uist
sql:  SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  "uist"
ground truth values:  [('venue.venueName', 'uist')]
matched values OrderedDict()
--------------------
--------------------
text:  Give me the papers written by Su-In Lee before 2012 .
sql:  SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Su-In Lee" AND t3.year  <  2012
ground truth values:  [('author.authorName', 'Su-In Lee')]
matched values OrderedDict()
--------------------
--------------------
text:  papers in semantic parsing for each year
sql:  SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "semantic parsing" GROUP BY t3.year ORDER BY t3.year DESC
ground truth values:  [('keyphrase.keyphraseName', 'semantic parsing')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the most cited paper at sigcomm ?
sql:  SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "sigcomm" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC
ground truth values:  [('venue.venueName', 'sigcomm')]
matched values OrderedDict()
--------------------
--------------------
text:  What is the name of Ranjit Jhala 's Liquid Haskell paper ?
sql:  SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE "Ranjit Jhala" AND t5.keyphrasename  =  "Liquid Haskell"
ground truth values:  [('keyphrase.keyphraseName', 'Liquid Haskell')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the homepage of PVLDB .
sql:  SELECT homepage FROM journal WHERE name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the homepage of " H. V. Jagadish " .
sql:  SELECT homepage FROM author WHERE name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the abstract of " Making database systems usable " .
sql:  SELECT abstract FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the year of " Making database systems usable "
sql:  SELECT YEAR FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the year of " Making database systems usable " .
sql:  SELECT YEAR FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the homepage of the VLDB conference .
sql:  SELECT homepage FROM conference WHERE name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the organizations in " North America " .
sql:  SELECT name FROM organization WHERE continent  =  "North America"
ground truth values:  [('organization.continent', 'North America')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the homepage of " University of Michigan " .
sql:  SELECT homepage FROM organization WHERE name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of references of " Making database systems usable " .
sql:  SELECT reference_num FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the references of " Making database systems usable " .
sql:  SELECT reference_num FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:   78%|███████▊  | 586/750 [00:27<00:03, 52.12it/s] 79%|███████▉  | 593/750 [00:28<00:03, 46.67it/s] 80%|███████▉  | 599/750 [00:28<00:03, 46.77it/s] 81%|████████  | 605/750 [00:28<00:03, 46.43it/s]return me the number of citations of " Making database systems usable " .
sql:  SELECT citation_num FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the citations of " Making database systems usable " .
sql:  SELECT citation_num FROM publication WHERE title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in PVLDB 2010 .
sql:  SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB" AND t4.year  =  2010
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in PVLDB after 2010 .
sql:  SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB" AND t4.year  >  2010
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in VLDB conference in 2002 .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB" AND t4.year  =  2002
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in VLDB conference before 2002 .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB" AND t4.year  <  2002
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in VLDB conference before 2002 after 1995 .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB" AND t4.year  <  2002 AND t4.year  >  1995
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the area of PVLDB .
sql:  SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in PVLDB .
sql:  SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the organization " H. V. Jagadish " is in .
sql:  SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conferences, which have papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journals, which have papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the domain where " H. V. Jagadish " is focused .
sql:  SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors of " Making database systems usable " .
sql:  SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conference, which published " Making database systems usable " .
sql:  SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " .
sql:  SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers on VLDB conference .
sql:  SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers on PVLDB .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers on PVLDB after 2000 .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  >  2000
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers on VLDB conference after 2000 .
sql:  SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  >  2000
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on PVLDB .
sql:  SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "PVLDB"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on VLDB conference .
sql:  SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "VLDB"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " after 2000 .
sql:   81%|████████▏ | 611/750 [00:28<00:03, 42.95it/s] 82%|████████▏ | 616/750 [00:28<00:03, 42.14it/s] 83%|████████▎ | 621/750 [00:32<00:31,  4.12it/s]SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish" AND t3.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on PVLDB after 2000 .
sql:  SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "PVLDB" AND t4.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on VLDB conference after 2000 .
sql:  SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "VLDB" AND t4.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the area of the VLDB conference .
sql:  SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers in the VLDB conference .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the keywords in Databases area .
sql:  SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  "Databases"
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers, which contain the keyword " Natural Language " .
sql:  SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  "Natural Language"
ground truth values:  [('keyword.keyword', 'Natural Language')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords of " Making database systems usable " .
sql:  SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords related to " H. V. Jagadish " .
sql:  SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords in VLDB conference .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords in PVLDB .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords in the papers of " University of Michigan " .
sql:  SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers of " H. V. Jagadish " containing keyword " User Study " .
sql:  SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.keyword  =  "User Study"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('keyword.keyword', 'User Study')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers in PVLDB containing keyword " Keyword search " .
sql:  SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t1.keyword  =  "Keyword search"
ground truth values:  [('journal.name', 'PVLDB'), ('keyword.keyword', 'Keyword search')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers in VLDB conference containing keyword " Information Retrieval " .
sql:  SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  "VLDB" AND t1.keyword  =  "Information Retrieval"
ground truth values:  [('conference.name', 'VLDB'), ('keyword.keyword', 'Information Retrieval')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  "Relational Database"
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the organizations in Databases area .
sql:  SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases"
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the organizations in Databases area located in " North America " .
sql:  SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.continent  =  "North America"
ground truth values:  [('domain.name', 'Databases'), ('organization.continent', 'North America')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the researchers in " University of Michigan " .
sql:  SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the researchers in Databases area in " University of Michigan " .
sql:   83%|████████▎ | 625/750 [00:32<00:22,  5.63it/s] 84%|████████▍ | 629/750 [00:32<00:16,  7.46it/s] 84%|████████▍ | 633/750 [00:32<00:11,  9.83it/s] 85%|████████▍ | 637/750 [00:32<00:08, 12.56it/s] 85%|████████▌ | 641/750 [00:33<00:06, 15.71it/s]SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.name  =  "University of Michigan"
ground truth values:  [('domain.name', 'Databases'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers in " University of Michigan " .
sql:  SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers after 2000 in " University of Michigan " .
sql:  SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" AND t4.year  >  2000
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers in VLDB conference in " University of Michigan " .
sql:  SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  "VLDB" AND t3.name  =  "University of Michigan"
ground truth values:  [('conference.name', 'VLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers in PVLDB in " University of Michigan " .
sql:  SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan"
ground truth values:  [('journal.name', 'PVLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me all the papers in PVLDB after 2000 in " University of Michigan " .
sql:  SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan" AND t5.year  >  2000
ground truth values:  [('journal.name', 'PVLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in Databases area with more than 200 citations .
sql:  SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  "Databases" AND t3.citation_num  >  200
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in PVLDB with more than 200 citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.citation_num  >  200
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in VLDB conference with more than 200 citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.citation_num  >  200
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper by " H. V. Jagadish " with more than 200 citations .
sql:  SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish" AND t3.citation_num  >  200
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on PVLDB with more than 200 citations .
sql:  SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "PVLDB" AND t4.citation_num  >  200
ground truth values:  [('author.name', 'H. V. Jagadish'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers by " H. V. Jagadish " on VLDB conference with more than 200 citations .
sql:  SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "VLDB" AND t4.citation_num  >  200
ground truth values:  [('author.name', 'H. V. Jagadish'), ('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in Databases area with more than 200 citations .
sql:  SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  "Databases" AND t3.citation_num  >  200 AND t3.year  >  2000
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in PVLDB with more than 200 citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.citation_num  >  200 AND t2.year  >  2000
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in VLDB conference with more than 200 citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.citation_num  >  200 AND t2.year  >  2000
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of conferences which have papers by " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of journals which have papers by " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers written by " H. V. Jagadish " in each year .
sql:  SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t3.year
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of authors of " Making database systems usable " .
sql:  SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
 86%|████████▌ | 646/750 [00:33<00:05, 19.57it/s] 87%|████████▋ | 652/750 [00:33<00:04, 24.36it/s] 88%|████████▊ | 657/750 [00:33<00:03, 26.20it/s] 88%|████████▊ | 663/750 [00:33<00:02, 30.46it/s]--------------------
text:  return me the number of citations of " Making database systems usable " in each year .
sql:  SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  "Making database systems usable" GROUP BY YEAR
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of citations of " Making database systems usable " before 2010 .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  "Making database systems usable" AND t2.year  <  2010
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers on VLDB conference .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers on PVLDB .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers on PVLDB after 2000 .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  >  2000
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers on VLDB conference after 2000 .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  >  2000
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " on PVLDB .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "PVLDB"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " on VLDB conference .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "VLDB"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " after 2000 .
sql:  SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish" AND t3.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " on PVLDB after 2000 .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "PVLDB" AND t4.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers by " H. V. Jagadish " on VLDB conference after 2000 .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t2.name  =  "VLDB" AND t4.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of keywords in Databases area .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  "Databases"
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers which contain the keyword " Natural Language " .
sql:  SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  "Natural Language"
ground truth values:  [('keyword.keyword', 'Natural Language')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of the keywords of " Making database systems usable " .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  "Making database systems usable"
ground truth values:  [('publication.title', 'Making database systems usable')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of the keywords related to " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of keywords in VLDB conference .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of keywords in PVLDB .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of keywords in the papers of " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of the papers of " H. V. Jagadish " containing keyword " User Study " .
sql:   89%|████████▉ | 668/750 [00:33<00:02, 30.67it/s] 90%|████████▉ | 674/750 [00:33<00:02, 34.51it/s] 91%|█████████ | 679/750 [00:33<00:02, 32.95it/s]SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.keyword  =  "User Study"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('keyword.keyword', 'User Study')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in PVLDB containing keyword " Keyword search " .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t1.keyword  =  "Keyword search"
ground truth values:  [('journal.name', 'PVLDB'), ('keyword.keyword', 'Keyword search')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in VLDB conference containing keyword " Information Retrieval " .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  "VLDB" AND t1.keyword  =  "Information Retrieval"
ground truth values:  [('conference.name', 'VLDB'), ('keyword.keyword', 'Information Retrieval')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of authors who have papers containing keyword " Relational Database " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  "Relational Database"
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of the papers containing keyword " Natural Language "
sql:  SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  "Natural Language"
ground truth values:  [('keyword.keyword', 'Natural Language')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of the organizations in " North America " .
sql:  SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  "North America"
ground truth values:  [('organization.continent', 'North America')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of organizations in Databases area .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases"
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of organizations in Databases area located in " North America " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.continent  =  "North America"
ground truth values:  [('domain.name', 'Databases'), ('organization.continent', 'North America')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in " University of Michigan " in Databases area .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  "Databases" AND t5.name  =  "University of Michigan"
ground truth values:  [('domain.name', 'Databases'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers after 2000 in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" AND t4.year  >  2000
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in VLDB conference in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  "VLDB" AND t3.name  =  "University of Michigan"
ground truth values:  [('conference.name', 'VLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in PVLDB in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan"
ground truth values:  [('journal.name', 'PVLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers in PVLDB after 2000 in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan" AND t5.year  >  2000
ground truth values:  [('journal.name', 'PVLDB'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of the papers in " University of Michigan " .
sql:  SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of researchers in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  "University of Michigan"
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of researchers in Databases area in " University of Michigan " .
sql:  SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.name  =  "University of Michigan"
ground truth values:  [('domain.name', 'Databases'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
 91%|█████████ | 683/750 [00:34<00:01, 33.59it/s] 92%|█████████▏| 688/750 [00:34<00:01, 36.73it/s] 93%|█████████▎| 694/750 [00:34<00:01, 40.83it/s] 93%|█████████▎| 700/750 [00:34<00:01, 41.50it/s]--------------------
text:  return me the number of authors who have papers in PVLDB .
sql:  SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of authors who have papers in the VLDB conference .
sql:  SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers published on PVLDB before 2000 .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  <  2000
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers published in the VLDB conference before 2000 .
sql:  SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  <  2000
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of all the papers in PVLDB .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the citations of each paper in PVLDB .
sql:  SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB"
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in PVLDB in 2005 .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  =  2005
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in PVLDB before 2005 .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  <  2005
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in PVLDB in each year .
sql:  SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" GROUP BY t2.year
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers published in PVLDB in each year .
sql:  SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" GROUP BY t2.year
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of all the papers in the VLDB conference .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the citations of each paper in the VLDB conference .
sql:  SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB"
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in the VLDB conference in 2005 .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  =  2005
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in the VLDB conference before 2005 .
sql:  SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  <  2005
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the total citations of papers in the VLDB conference in each year .
sql:  SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" GROUP BY t2.year
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers published in the VLDB conference in each year .
sql:  SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" GROUP BY t2.year
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have cooperated both with " H. V. Jagadish " and " Divesh Srivastava " .
sql:  SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  "H. V. Jagadish" AND t3.name  =  "Divesh Srivastava"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have cooperated with " H. V. Jagadish " after 2000 .
sql:  SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t5.year  >  2000
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " .
sql:  SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Divesh Srivastava"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Yunyao Li " after 2005 .
sql:  SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Yunyao Li" AND t5.year  >  2005
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Yunyao Li')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB .
sql:  SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Yunyao Li" AND t4.name  =  "PVLDB"
ground truth values:   94%|█████████▍| 705/750 [00:34<00:01, 34.04it/s] 95%|█████████▍| 709/750 [00:34<00:01, 31.65it/s] 95%|█████████▌| 713/750 [00:34<00:01, 29.18it/s] 96%|█████████▌| 717/750 [00:35<00:01, 28.79it/s][('author.name', 'H. V. Jagadish'), ('author.name', 'Yunyao Li'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB after 2005 .
sql:  SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Yunyao Li" AND t4.name  =  "PVLDB" AND t6.year  >  2005
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Yunyao Li'), ('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have cooperated with " H. V. Jagadish " .
sql:  SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 .
sql:  SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Divesh Srivastava" AND t5.year  <  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have cited the papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " .
sql:  SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Divesh Srivastava"
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 .
sql:  SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Divesh Srivastava" AND t5.year  <  2000
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of papers written by " H. V. Jagadish " , " Yunyao Li " , and " Cong Yu " .
sql:  SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  "Cong Yu" AND t1.name  =  "H. V. Jagadish" AND t3.name  =  "Yunyao Li"
ground truth values:  [('author.name', 'Cong Yu'), ('author.name', 'H. V. Jagadish'), ('author.name', 'Yunyao Li')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of authors who have cooperated with " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the number of authors who have cited the papers by " H. V. Jagadish " .
sql:  SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish"
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with more than 200 citations .
sql:  SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "H. V. Jagadish" AND t1.name  =  "Divesh Srivastava" AND t5.citation_num  >  200
ground truth values:  [('author.name', 'H. V. Jagadish'), ('author.name', 'Divesh Srivastava')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author who has the most number of papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conference that has the most number of papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conference, which has the most number of papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journal that has the most number of papers containing keyword " Relational Database " .
sql:  SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  "Relational Database" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journal, which has the most number of papers containing keyword " Relational Database " .
sql:   96%|█████████▌| 721/750 [00:35<00:00, 29.41it/s] 97%|█████████▋| 725/750 [00:35<00:00, 28.08it/s] 97%|█████████▋| 728/750 [00:35<00:00, 28.54it/s] 98%|█████████▊| 733/750 [00:35<00:00, 32.28it/s]SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  "Relational Database" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keyword, which have been contained by the most number of papers in VLDB conference .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  "VLDB" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keyword, which have been contained by the most number of papers in PVLDB .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keyword, which have been contained by the most number of papers by " H. V. Jagadish " .
sql:  SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author in the " University of Michigan " whose papers have the most total citations .
sql:  SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author in the " University of Michigan " whose papers in Databases area have the most total citations .
sql:  SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  "Databases" AND t6.name  =  "University of Michigan" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1
ground truth values:  [('domain.name', 'Databases'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with the most number of citations .
sql:  SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "Divesh Srivastava" AND t1.name  =  "H. V. Jagadish" ORDER BY t5.citation_num DESC LIMIT 1
ground truth values:  [('author.name', 'Divesh Srivastava'), ('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conferences, which have more than 10 papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conference, which have the most number of papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journals, which have more than 10 papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journal, which have the most number of papers by " H. V. Jagadish " .
sql:  SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in Databases area with the most citations .
sql:  SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  "Databases" ORDER BY t3.citation_num DESC LIMIT 1
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in PVLDB with the most citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" ORDER BY t2.citation_num DESC LIMIT 1
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper in VLDB conference with the most citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" ORDER BY t2.citation_num DESC LIMIT 1
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper by " H. V. Jagadish " with the most citations .
sql:  SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  "H. V. Jagadish" ORDER BY t3.citation_num DESC LIMIT 1
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in Databases area with the most citations .
sql:  SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  "Databases" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1
ground truth values:  [('domain.name', 'Databases')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in PVLDB with the most citations .
sql:  SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the paper after 2000 in VLDB conference with the most citations .
sql:   98%|█████████▊| 738/750 [00:35<00:00, 34.57it/s] 99%|█████████▉| 742/750 [00:35<00:00, 33.07it/s] 99%|█████████▉| 746/750 [00:35<00:00, 32.02it/s]100%|██████████| 750/750 [00:36<00:00, 30.64it/s]
SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  "VLDB" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have more than 10 papers in PVLDB .
sql:  SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have the most number of papers in PVLDB .
sql:  SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "PVLDB" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have more than 10 papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the conferences, which have more than 60 papers containing keyword " Relational Database " .
sql:  SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the journals, which have more than 60 papers containing keyword " Relational Database " .
sql:  SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  "Relational Database" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60
ground truth values:  [('keyword.keyword', 'Relational Database')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords, which have been contained by more than 100 papers in VLDB conference .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  "VLDB" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords, which have been contained by more than 100 papers in PVLDB .
sql:  SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100
ground truth values:  [('journal.name', 'PVLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the keywords, which have been contained by more than 10 papers of " H. V. Jagadish " .
sql:  SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10
ground truth values:  [('author.name', 'H. V. Jagadish')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the authors who have more than 10 papers in the VLDB conference .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author who has the most number of papers in the VLDB conference .
sql:  SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  "VLDB" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1
ground truth values:  [('conference.name', 'VLDB')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author in the " University of Michigan " whose papers have more than 5000 total citations .
sql:  SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000
ground truth values:  [('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
--------------------
text:  return me the author in the " University of Michigan " in Databases area whose papers have more than 5000 total citations .
sql:  SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  "Databases" AND t5.name  =  "University of Michigan" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000
ground truth values:  [('domain.name', 'Databases'), ('organization.name', 'University of Michigan')]
matched values OrderedDict()
--------------------
********** dev Data Statistics ***********
OOV observed in 0/750 examples
Denormalization skipped for 0/750 examples
Schema truncated for 0/750 examples
Token restored for 750/750 examples
+ text sizes
# text tokens (avg) = 11.164
# text tokens (min) = 1
# text tokens (max) = 32
+ input sizes
input size (avg) = 131.128
input size (min) = 113 
input size (max) = 177
+ program sizes
# program tokens (avg) = 35.38666666666666	# program whole field tokens = 35.38666666666666 (avg)	
# program tokens (min) = 6	# program whole field tokens = 6 (min)	
# program tokens (max) = 75	# program whole field tokens = 75 (max)	
max pointer span size = 0
---  value extraction performance ---
micro precision = 0.05333333333333334
micro recall = 0.05333333333333334
micro F1 = 0.05333333333333334
Processed data dumped to data/spider/spider.bridge.question-split.ppl-0.85.2.dn.eo.bert.pkl
