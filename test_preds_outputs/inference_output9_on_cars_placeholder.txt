run python3 -m src.experiments     --inference     --data_dir data/spider     --db_dir data/spider/database     --dataset_name spider     --question_split          --question_only               --denormalize_sql               --table_shuffling     --use_lstm_encoder     --use_meta_data_encoding          --sql_consistency_check          --use_picklist     --anchor_text_match_threshold 0.85               --top_k_picklist_matches 2     --process_sql_in_execution_order               --num_random_tables_added 0                         --save_best_model_only     --schema_augmentation_factor 1          --data_augmentation_factor 1          --vocab_min_freq 0     --text_vocab_min_freq 0     --program_vocab_min_freq 0     --num_values_per_field 0     --max_in_seq_len 512     --max_out_seq_len 60     --model bridge     --num_steps 100000     --curriculum_interval 0     --num_peek_steps 1000     --num_accumulation_steps 2     --train_batch_size 8     --dev_batch_size 8     --encoder_input_dim 1024     --encoder_hidden_dim 400     --decoder_input_dim 400     --num_rnn_layers 1     --num_const_attn_layers 0     --emb_dropout_rate 0.3     --pretrained_lm_dropout_rate 0     --rnn_layer_dropout_rate 0     --rnn_weight_dropout_rate 0     --cross_attn_dropout_rate 0     --cross_attn_num_heads 8     --res_input_dropout_rate 0.2     --res_layer_dropout_rate 0     --ff_input_dropout_rate 0.4     --ff_hidden_dropout_rate 0.0     --pretrained_transformer bert-large-uncased          --bert_finetune_rate 0.00006     --learning_rate 0.0005     --learning_rate_scheduler inverse-square     --trans_learning_rate_scheduler inverse-square     --warmup_init_lr 0.0005     --warmup_init_ft_lr 0.00003     --num_warmup_steps 4000     --grad_norm 0.3     --decoding_algorithm beam-search     --beam_size 16     --bs_alpha 1.05     --gpu 0     --checkpoint_path /home/shelunts/thesis/TabularSemantingParsing/model/spider.bridge.lstm.meta.ts.ppl-0.85.2.dn.eo.feat.bert-large-uncased.xavier-1024-400-400-8-2-0.0005-inv-sqr-0.0005-4000-6e-05-inv-sqr-3e-05-4000-0.3-0.3-0.0-0.0-1-8-0.0-0.0-res-0.2-0.0-ff-0.4-0.0.220119-195756.tg05/model-best.16.tar
2022-01-22 15:13:01.571513: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
  0%|          | 0/12 [00:00<?, ?it/s]Model directory exists: /home/shelunts/thesis/TabularSemantingParsing/model/spider.bridge.lstm.meta.ts.ppl-0.85.2.dn.eo.feat.bert-large-uncased.xavier-1024-400-400-8-2-0.0005-inv-sqr-0.0005-4000-6e-05-inv-sqr-3e-05-4000-0.3-0.3-0.0-0.0-1-8-0.0-0.0-res-0.2-0.0-ff-0.4-0.0
Visualization directory exists: /home/shelunts/thesis/TabularSemantingParsing/viz/spider.bridge.lstm.meta.ts.ppl-0.85.2.dn.eo.feat.bert-large-uncased.xavier-1024-400-400-8-2-0.0005-inv-sqr-0.0005-4000-6e-05-inv-sqr-3e-05-4000-0.3-0.3-0.0-0.0-1-8-0.0-0.0-res-0.2-0.0-ff-0.4-0.0
* text vocab size = 30522
* program vocab size = 99

pretrained_transformer = bert-large-uncased
fix_pretrained_transformer_parameters = False

bridge module created
loading preprocessed data: data/spider/spider.bridge.question-split.ppl-0.85.2.dn.eo.bert.pkl
92 dev examples loaded
=> loading checkpoint '/home/shelunts/thesis/TabularSemantingParsing/model/spider.bridge.lstm.meta.ts.ppl-0.85.2.dn.eo.feat.bert-large-uncased.xavier-1024-400-400-8-2-0.0005-inv-sqr-0.0005-4000-6e-05-inv-sqr-3e-05-4000-0.3-0.3-0.0-0.0-1-8-0.0-0.0-res-0.2-0.0-ff-0.4-0.0.220119-195756.tg05/model-best.16.tar'
0 pre-computed prediction order reconstruction cached
Example 2
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many countries does each continent have? List the continent id, continent name and the number of countries.'
NL tokens: [b'how', b'many', b'countries', b'does', b'each', b'continent', b'have', b'?', b'list', b'the', b'continent', b'id', b',', b'continent', b'name', b'and', b'the', b'number', b'of', b'countries', b'.']
NL tokens (original): [b'How', b'many', b'countries', b'does', b'each', b'continent', b'have', b'?', b'List', b'the', b'continent', b'id', b',', b'continent', b'name', b'and', b'the', b'number', b'of', b'countries', b'.']
['[CLS]', 'how', 'many', 'countries', 'does', 'each', 'continent', 'have', '?', 'list', 'the', 'continent', 'id', ',', 'continent', 'name', 'and', 'the', 'number', 'of', 'countries', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId'
Target TF-P tokens: from continents join countries on continents.ContId = countries.Continent group by continents.ContId select continents.ContId , continents.Continent , count (*)

[WRONG] [medium] Pred 0:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON countries.Continent = continents.ContId GROUP BY countries.Continent' (-0.133) (length=20)
[WRONG] [medium] Pred 1:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId GROUP BY countries.Continent' (-0.192) (length=20)
[CORRE] [medium] Pred 2:	b'SELECT continents.Continent, countries.Continent, COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId GROUP BY countries.Continent' (-0.949) (length=20)
Error Case 1

ERROR: Join condition does not match with table: ['continents', {'join': 'countries', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['continents', {'join': 'countries', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['continents', {'join': 'countries', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['continents', {'join': 'countries', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
Example 3
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'For each continent, list its id, name, and how many countries it has?'
NL tokens: [b'for', b'each', b'continent', b',', b'list', b'its', b'id', b',', b'name', b',', b'and', b'how', b'many', b'countries', b'it', b'has', b'?']
NL tokens (original): [b'For', b'each', b'continent', b',', b'list', b'its', b'id', b',', b'name', b',', b'and', b'how', b'many', b'countries', b'it', b'has', b'?']
['[CLS]', 'for', 'each', 'continent', ',', 'list', 'its', 'id', ',', 'name', ',', 'and', 'how', 'many', 'countries', 'it', 'has', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId'
Target TF-P tokens: from continents join countries on continents.ContId = countries.Continent group by continents.ContId select continents.ContId , continents.Continent , count (*)

[WRONG] [medium] Pred 0:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.CountryId' (-0.165) (length=20)
[WRONG] [medium] Pred 1:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent' (-0.321) (length=20)
[WRONG] [medium] Pred 2:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent, countries.CountryName' (-0.359) (length=22)
[WRONG] [medium] Pred 3:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent' (-0.735) (length=20)
[WRONG] [medium] Pred 4:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent, countries.CountryId' (-0.886) (length=22)
[WRONG] [medium] Pred 5:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId' (-1.392) (length=20)
[WRONG] [medium] Pred 6:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId GROUP BY countries.Continent' (-1.435) (length=20)
[WRONG] [medium] Pred 7:	b'SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON countries.Continent = continents.ContId GROUP BY countries.Continent' (-1.586) (length=20)
[WRONG] [medium] Pred 8:	b'SELECT continents.Continent, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent, continents.ContId, countries.CountryName' (-1.897) (length=22)
[WRONG] [medium] Pred 9:	b'SELECT continents.Continent, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent, countries.CountryId, countries.CountryName' (-2.344) (length=22)
[WRONG] [medium] Pred 10:	b'SELECT continents.Continent, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent' (-2.788) (length=18)
Error Case 2

Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , car_makers.FullName , count (*) , car_makers.FullName , count (*)
Example 6
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many models does each car maker produce? List maker full name, id and the number.'
NL tokens: [b'how', b'many', b'models', b'does', b'each', b'car', b'maker', b'produce', b'?', b'list', b'maker', b'full', b'name', b',', b'id', b'and', b'the', b'number', b'.']
NL tokens (original): [b'How', b'many', b'models', b'does', b'each', b'car', b'maker', b'produce', b'?', b'List', b'maker', b'full', b'name', b',', b'id', b'and', b'the', b'number', b'.']
['[CLS]', 'how', 'many', 'models', 'does', 'each', 'car', 'maker', 'produce', '?', 'list', 'maker', 'full', 'name', ',', 'id', 'and', 'the', 'number', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id select car_makers.FullName , car_makers.Id , count (*)

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker, car_makers.FullName, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-0.005) (length=20)
[CORRE] [medium] Pred 1:	b'SELECT car_makers.FullName, car_makers.Id, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-1.682) (length=20)
Error Case 3

Example 7
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the full name of each car maker, along with its id and how many models it produces?'
NL tokens: [b'what', b'is', b'the', b'full', b'name', b'of', b'each', b'car', b'maker', b',', b'along', b'with', b'its', b'id', b'and', b'how', b'many', b'models', b'it', b'produces', b'?']
NL tokens (original): [b'What', b'is', b'the', b'full', b'name', b'of', b'each', b'car', b'maker', b',', b'along', b'with', b'its', b'id', b'and', b'how', b'many', b'models', b'it', b'produces', b'?']
['[CLS]', 'what', 'is', 'the', 'full', 'name', 'of', 'each', 'car', 'maker', ',', 'along', 'with', 'its', 'id', 'and', 'how', 'many', 'models', 'it', 'produces', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
/usr/lib/python3/dist-packages/torch/_tensor.py:575: UserWarning: floor_divide is deprecated, and will be removed in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values.
To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor'). (Triggered internally at  ../aten/src/ATen/native/BinaryOps.cpp:461.)
  return torch.floor_divide(self, other)
  8%|▊         | 1/12 [00:04<00:51,  4.68s/it]Target 0: b'SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id select car_makers.FullName , car_makers.Id , count (*)

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker, car_makers.FullName, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-0.466) (length=20)
[CORRE] [medium] Pred 1:	b'SELECT car_makers.FullName, car_makers.Id, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-1.190) (length=20)
Error Case 4

Parsing error: from cars_data yes min (cars_data.Horsepower) order by (cars_data.Horsepower) limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) order by (cars_data.Horsepower) limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) order by (cars_data.Id) limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower limit 1
Parsing error: from cars_data no cars_data.Horsepower order by (cars_data.Horsepower) limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1) order by cars_data.Horsepower limit 1
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1 : the
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1 : the : ? "select cars_data.Horsepower"
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1 : the : the "select cars_data.Horsepower"
Parsing error: from cars_data yes max (cars_data.Horsepower) = (from cars_data select cars_data.Id order by cars_data.Horsepower limit 1 : the : has "select cars_data.Horsepower"
Example 8
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which model of the car has the minimum horsepower?'
NL tokens: [b'which', b'model', b'of', b'the', b'car', b'has', b'the', b'minimum', b'horsepower', b'?']
NL tokens (original): [b'Which', b'model', b'of', b'the', b'car', b'has', b'the', b'minimum', b'horsepower', b'?']
['[CLS]', 'which', 'model', 'of', 'the', 'car', 'has', 'the', 'minimum', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id select car_names.Model order by cars_data.Horsepower asc limit 1

[WRONG] [hard] Pred 0:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data ORDER BY cars_data.Horsepower LIMIT 1' (-6.225) (length=12)
[WRONG] [hard] Pred 1:	b'SELECT MIN(cars_data.Horsepower) FROM cars_data ORDER BY cars_data.Horsepower LIMIT 1' (-6.527) (length=12)
[WRONG] [hard] Pred 2:	b'SELECT SUM(cars_data.Horsepower) FROM cars_data ORDER BY cars_data.Horsepower LIMIT 1' (-6.638) (length=12)
[WRONG] [hard] Pred 3:	b'SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Horsepower LIMIT 1' (-7.205) (length=9)
[WRONG] [hard] Pred 4:	b'SELECT MIN(cars_data.Horsepower) FROM cars_data' (-7.423) (length=8)
Error Case 5

ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower limit 1
Parsing error: from cars_data where cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower limit 1
Parsing error: from cars_data yes min (cars_data.Horsepower) order by (cars_data.Horsepower) limit 1
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data yes min (cars_data.Horsepower) order by (cars_data.Cylinders) limit 1
Parsing error: from cars_data yes min (cars_data.Horsepower) order by (cars_data.Id) limit 1
Parsing error: from cars_data no cars_data.Horsepower order by (cars_data.Horsepower-cars_data.Horsepower) limit 1
Parsing error: from cars_data no cars_data.Horsepower order by (cars_data.Horsepower-cars_data.Cylinders) limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower = limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower desc limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower asc limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Horsepower < limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Cylinders limit 1
Parsing error: from cars_data where cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Cylinders limit 1
Parsing error: from cars_data order by cars_data.Horsepower = (from cars_data select min (cars_data.Horsepower)) order by cars_data.Id limit 1
Example 9
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the model of the car with the smallest amount of horsepower?'
NL tokens: [b'what', b'is', b'the', b'model', b'of', b'the', b'car', b'with', b'the', b'smallest', b'amount', b'of', b'horsepower', b'?']
NL tokens (original): [b'What', b'is', b'the', b'model', b'of', b'the', b'car', b'with', b'the', b'smallest', b'amount', b'of', b'horsepower', b'?']
['[CLS]', 'what', 'is', 'the', 'model', 'of', 'the', 'car', 'with', 'the', 'smallest', 'amount', 'of', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id select car_names.Model order by cars_data.Horsepower asc limit 1

[WRONG] hard Pred 0:	No valid output! (0.000)
Error Case 6

ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select intersect from car_names where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select car_names.Model
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select intersect from car_names group by car_names.Model select car_names.Model
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) having avg (cars_data.Weight)
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) and cars_data.Id in (from cars_data group by cars_data.Id select cars_data.Id
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) having min (cars_data.Weight)
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Example 10
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Find the model of the car whose weight is below the average weight.'
NL tokens: [b'find', b'the', b'model', b'of', b'the', b'car', b'whose', b'weight', b'is', b'below', b'the', b'average', b'weight', b'.']
NL tokens (original): [b'Find', b'the', b'model', b'of', b'the', b'car', b'whose', b'weight', b'is', b'below', b'the', b'average', b'weight', b'.']
['[CLS]', 'find', 'the', 'model', 'of', 'the', 'car', 'whose', 'weight', 'is', 'below', 'the', 'average', 'weight', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select car_names.Model

[WRONG] [extra] Pred 0:	b'SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Weight < (SELECT AVG(cars_data.Weight) FROM cars_data)' (-4.500) (length=20)
Error Case 7

ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select intersect from car_names where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select car_names.Model
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) : cars_data.Id in (from cars_data where cars_data.Weight < (from car_names select avg (cars_data.Weight)) select car_names.Model) select car_names.Model
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data from car_names on cars_data.Id = cars_data.Id where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select car_names.Model
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select intersect from cars_data where cars_data.Weight < (from car_names select avg (cars_data.Weight)) select car_names.Model
Parsing error: from cars_data where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select intersect from car_names where cars_data.Weight < (from car_names select avg (cars_data.Weight)) select car_names.Model
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
Example 11
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the model for the car with a weight smaller than the average?'
NL tokens: [b'what', b'is', b'the', b'model', b'for', b'the', b'car', b'with', b'a', b'weight', b'smaller', b'than', b'the', b'average', b'?']
NL tokens (original): [b'What', b'is', b'the', b'model', b'for', b'the', b'car', b'with', b'a', b'weight', b'smaller', b'than', b'the', b'average', b'?']
['[CLS]', 'what', 'is', 'the', 'model', 'for', 'the', 'car', 'with', 'a', 'weight', 'smaller', 'than', 'the', 'average', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Weight < (from cars_data select avg (cars_data.Weight)) select car_names.Model

[WRONG] extra Pred 0:	No valid output! (0.000)
Error Case 8

ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'car_names.MakeId']}}, {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.Model']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'car_names.MakeId']}}, {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.Model']}}]
Example 12
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Find the name of the makers that produced some cars in the year of 1970?'
NL tokens: [b'find', b'the', b'name', b'of', b'the', b'makers', b'that', b'produced', b'some', b'cars', b'in', b'the', b'year', b'of', b'1970', b'?']
NL tokens (original): [b'Find', b'the', b'name', b'of', b'the', b'makers', b'that', b'produced', b'some', b'cars', b'in', b'the', b'year', b'of', b'1970', b'?']
['[CLS]', 'find', 'the', 'name', 'of', 'the', 'makers', 'that', 'produced', 'some', 'cars', 'in', 'the', 'year', 'of', '1970', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'"
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id where cars_data.Year = "1970" select distinct car_makers.Maker

[WRONG] [extra] Pred 0:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-2.661) (length=15)
[WRONG] [extra] Pred 1:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-3.618) (length=16)
[WRONG] [extra] Pred 2:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Year = 1970' (-3.725) (length=21)
[WRONG] [extra] Pred 3:	b'SELECT car_makers.Maker FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE car_names.Make = 1970' (-3.990) (length=15)
[WRONG] [extra] Pred 4:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Year = 1970' (-4.308) (length=22)
[WRONG] [extra] Pred 5:	b'SELECT car_makers.Maker FROM car_names JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-5.076) (length=15)
[WRONG] [extra] Pred 6:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-5.312) (length=17)
[WRONG] [extra] Pred 7:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Year = 1970 AND car_makers.FullName = year' (-5.330) (length=27)
[WRONG] [extra] Pred 8:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970 INTERSECT SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-5.772) (length=30)
[WRONG] [extra] Pred 9:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Year = 1970' (-5.795) (length=23)
[WRONG] [extra] Pred 10:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN car_names ON car_names.Model = car_names.Model WHERE car_names.Make = 1970' (-5.970) (length=21)
[WRONG] [extra] Pred 11:	b'SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970 ORDER BY car_makers.FullName' (-6.002) (length=17)
[WRONG] [extra] Pred 12:	b'SELECT DISTINCT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-6.089) (length=18)
Error Case 9

ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}]
ERROR: table "car_names" in field expression car_names.Make is not in the current scope
argument of type 'int' is not iterable
argument of type 'int' is not iterable
Example 13
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the name of the different car makers who produced a car in 1970?'
NL tokens: [b'what', b'is', b'the', b'name', b'of', b'the', b'different', b'car', b'makers', b'who', b'produced', b'a', b'car', b'in', b'1970', b'?']
NL tokens (original): [b'What', b'is', b'the', b'name', b'of', b'the', b'different', b'car', b'makers', b'who', b'produced', b'a', b'car', b'in', b'1970', b'?']
['[CLS]', 'what', 'is', 'the', 'name', 'of', 'the', 'different', 'car', 'makers', 'who', 'produced', 'a', 'car', 'in', '1970', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'"
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id where cars_data.Year = "1970" select distinct car_makers.Maker

[WRONG] [extra] Pred 0:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-1.095) (length=16)
[WRONG] [extra] Pred 1:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model WHERE car_names.Make = 1970' (-3.390) (length=16)
[WRONG] [extra] Pred 2:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.Make WHERE car_names.Make = 1970' (-3.495) (length=16)
[WRONG] [extra] Pred 3:	b'SELECT DISTINCT car_makers.Maker FROM car_names JOIN car_makers ON car_names.Make = car_makers.Id WHERE car_names.Make = 1970' (-3.901) (length=16)
[WRONG] [extra] Pred 4:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.MakeId = 1970' (-3.910) (length=16)
[WRONG] [extra] Pred 5:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970 INTERSECT SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-4.124) (length=32)
[WRONG] [extra] Pred 6:	b'SELECT DISTINCT car_makers.Maker FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE car_names.Make = 1970' (-4.608) (length=16)
[WRONG] [extra] Pred 7:	b'SELECT DISTINCT car_makers.Maker FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id WHERE car_names.Make = 1970' (-4.625) (length=16)
[WRONG] [extra] Pred 8:	b'SELECT DISTINCT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970' (-4.861) (length=18)
[WRONG] [extra] Pred 9:	b'SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN car_names ON car_names.Model = car_names.MakeId WHERE car_names.Make = 1970' (-4.935) (length=22)
Error Case 10

ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.MakeId', 'car_names.Model']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.MakeId', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.Model']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
Parsing error: from car_names join cars_data on car_names.Model = cars_data.Id select car_names.Make , cars_data.Year order by cars_data.Year limit ?
Example 14
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Find the make and production time of the cars that were produced in the earliest year?'
NL tokens: [b'find', b'the', b'make', b'and', b'production', b'time', b'of', b'the', b'cars', b'that', b'were', b'produced', b'in', b'the', b'earliest', b'year', b'?']
NL tokens (original): [b'Find', b'the', b'make', b'and', b'production', b'time', b'of', b'the', b'cars', b'that', b'were', b'produced', b'in', b'the', b'earliest', b'year', b'?']
['[CLS]', 'find', 'the', 'make', 'and', 'production', 'time', 'of', 'the', 'cars', 'that', 'were', 'produced', 'in', 'the', 'earliest', 'year', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)'
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where cars_data.Year = (from cars_data select min (cars_data.Year)) select car_names.Make , cars_data.Year

[WRONG] [extra] Pred 0:	b'SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.Model = cars_data.Id ORDER BY cars_data.Year LIMIT 1' (-2.745) (length=17)
[WRONG] [extra] Pred 1:	b'SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON car_names.Model = cars_data.Id ORDER BY cars_data.Year LIMIT 1' (-4.091) (length=17)
[WRONG] [extra] Pred 2:	b'SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year LIMIT 1' (-4.179) (length=17)
[WRONG] [extra] Pred 3:	b'SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.Model = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1' (-5.027) (length=18)
[WRONG] [extra] Pred 4:	b'SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.Model = cars_data.Id ORDER BY cars_data.Year DESC LIMIT 1' (-5.673) (length=18)
[WRONG] [extra] Pred 5:	b'SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.Model = cars_data.Id ORDER BY cars_data.Year LIMIT 1' (-5.711) (length=19)
Error Case 11

ERROR: table "car_names" in field expression car_names.Make is not in the current scope
ERROR: table "car_names" in field expression car_names.Make is not in the current scope
Parsing error: from car_makers join car_names on car_makers.Id = car_names.MakeId where car_names.Make = "carr" and car_names.Make order by car_makers.Maker limit 1
Example 15
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the maker of the carr produced in the earliest year and what year was it?'
NL tokens: [b'what', b'is', b'the', b'maker', b'of', b'the', b'carr', b'produced', b'in', b'the', b'earliest', b'year', b'and', b'what', b'year', b'was', b'it', b'?']
NL tokens (original): [b'What', b'is', b'the', b'maker', b'of', b'the', b'carr', b'produced', b'in', b'the', b'earliest', b'year', b'and', b'what', b'year', b'was', b'it', b'?']
['[CLS]', 'what', 'is', 'the', 'maker', 'of', 'the', 'carr', 'produced', 'in', 'the', 'earliest', 'year', 'and', 'what', 'year', 'was', 'it', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)'
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where cars_data.Year = (from cars_data select min (cars_data.Year)) select car_names.Make , cars_data.Year

[WRONG] [extra] Pred 0:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "carr" AND car_names.Make = "carr"' (-0.200) (length=25)
[WRONG] [extra] Pred 1:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.Maker = "carr" AND car_names.Make = "carr"' (-0.211) (length=25)
[WRONG] [extra] Pred 2:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = "carr" AND car_names.Make = "carr"' (-0.358) (length=25)
[WRONG] [extra] Pred 3:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.Maker = "carr" AND car_makers.FullName = "carr"' (-0.686) (length=25)
[WRONG] [extra] Pred 4:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "carr" AND car_names.Make = "VALUE"' (-0.891) (length=25)
 17%|█▋        | 2/12 [00:44<02:31, 15.16s/it][WRONG] [extra] Pred 5:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = "carr" AND car_names.Make = "VALUE"' (-0.994) (length=25)
[WRONG] [extra] Pred 6:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "carr" AND car_makers.FullName = "carr"' (-1.020) (length=25)
[WRONG] [extra] Pred 7:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.Country = "carr" AND car_names.Make = "carr"' (-1.051) (length=25)
[WRONG] [extra] Pred 8:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "carr" AND car_names.Make = (SELECT car_makers.Maker FROM car_makers WHERE car_makers.FullName = "carr")' (-1.083) (length=34)
[WRONG] [extra] Pred 9:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.Maker = "carr" AND car_names.Make = "VALUE"' (-1.142) (length=25)
[WRONG] [extra] Pred 10:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = "carr" AND car_makers.FullName = "carr"' (-1.182) (length=25)
[WRONG] [extra] Pred 11:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers WHERE car_makers.FullName = "carr" AND car_makers.FullName = "carr"' (-1.186) (length=19)
[WRONG] [extra] Pred 12:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Model = "carr" AND car_names.Make = "carr"' (-1.213) (length=25)
Error Case 12

ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
Parsing error: from model_list and model_list.Model > 1980 select distinct model_list.Model
Parsing error: from model_list on model_list.Model > 1980 select distinct model_list.Model
ERROR: Join condition does not match with table: ['car_names', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
Example 16
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which distinct car models are the produced after 1980?'
NL tokens: [b'which', b'distinct', b'car', b'models', b'are', b'the', b'produced', b'after', b'1980', b'?']
NL tokens (original): [b'Which', b'distinct', b'car', b'models', b'are', b'the', b'produced', b'after', b'1980', b'?']
['[CLS]', 'which', 'distinct', 'car', 'models', 'are', 'the', 'produced', 'after', '1980', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980'
Target TF-P tokens: from model_list join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id where cars_data.Year > 1980 select distinct model_list.Model

[WRONG] [hard] Pred 0:	b'SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Model > 1980' (-5.473) (length=10)
[WRONG] [hard] Pred 1:	b'SELECT DISTINCT car_names.Model FROM car_names WHERE car_names.Make > 1980' (-6.233) (length=10)
[WRONG] [hard] Pred 2:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data ON model_list.Model = cars_data.Id WHERE cars_data.Year > 1980' (-6.238) (length=16)
[WRONG] [hard] Pred 3:	b'SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Maker > 1980' (-6.322) (length=10)
[WRONG] [hard] Pred 4:	b'SELECT DISTINCT car_names.Model FROM car_names WHERE car_names.MakeId > 1980' (-6.831) (length=10)
[WRONG] [hard] Pred 5:	b'SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.ModelId > 1980' (-7.894) (length=10)
[WRONG] [hard] Pred 6:	b'SELECT DISTINCT car_names.Model FROM car_names JOIN model_list ON model_list.Model = car_names.MakeId WHERE car_names.MakeId > 1980' (-8.079) (length=16)
[WRONG] [hard] Pred 7:	b'SELECT DISTINCT car_names.Model FROM car_names JOIN model_list ON model_list.Model = car_names.MakeId WHERE car_names.Make > 1980' (-8.266) (length=16)
[WRONG] [hard] Pred 8:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN model_list ON model_list.Model = model_list.ModelId WHERE model_list.Maker > 1980' (-8.795) (length=16)
Error Case 13

Parsing error: from model_list where cars_data on model_list.Model = cars_data.Id where cars_data.Year > 1980 select distinct model_list.Model
Parsing error: from model_list where cars_data on model_list.Maker = cars_data.Id where cars_data.Year > 1980 select distinct model_list.Model
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['model_list.Model', 'model_list.ModelId']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['model_list.Model', 'cars_data.Id']}}, {'join': 'car_names', 'on': {'eq': ['model_list.Maker', 'cars_data.Id']}}]
Example 17
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the different models for the cards produced after 1980?'
NL tokens: [b'what', b'are', b'the', b'different', b'models', b'for', b'the', b'cards', b'produced', b'after', b'1980', b'?']
NL tokens (original): [b'What', b'are', b'the', b'different', b'models', b'for', b'the', b'cards', b'produced', b'after', b'1980', b'?']
['[CLS]', 'what', 'are', 'the', 'different', 'models', 'for', 'the', 'cards', 'produced', 'after', '1980', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980'
Target TF-P tokens: from model_list join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id where cars_data.Year > 1980 select distinct model_list.Model

[WRONG] [hard] Pred 0:	b'SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Maker > 1980' (-3.944) (length=10)
[WRONG] [hard] Pred 1:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data ON model_list.Model = cars_data.Id WHERE cars_data.Year > 1980' (-4.079) (length=16)
[WRONG] [hard] Pred 2:	b'SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.ModelId > 1980' (-4.997) (length=10)
[CORRE] [hard] Pred 3:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data ON model_list.Model = cars_data.Id JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980' (-5.773) (length=22)
Error Case 14

Parsing error: from car_makers join countries on car_makers.Country = countries.CountryId group by countries.Continent having count (*) , car_makers.Country select countries.CountryName , count (*)
Parsing error: from car_makers join countries on car_makers.Country = countries.CountryId group by countries.Continent having count (*) , countries.Continent select countries.CountryName , count (*)
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
Parsing error: from car_makers join countries on car_makers.Country = countries.CountryId group by countries.Continent having count (*) , car_makers.Country
ERROR: Join condition does not match with table: ['car_makers', {'join': 'countries', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
Parsing error: from car_makers join countries on car_makers.Country = countries.CountryId group by countries.Continent having count (*) , countries.Continent
Example 18
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many car makers are there in each continents? List the continent name and the count.'
NL tokens: [b'how', b'many', b'car', b'makers', b'are', b'there', b'in', b'each', b'continents', b'?', b'list', b'the', b'continent', b'name', b'and', b'the', b'count', b'.']
NL tokens (original): [b'How', b'many', b'car', b'makers', b'are', b'there', b'in', b'each', b'continents', b'?', b'List', b'the', b'continent', b'name', b'and', b'the', b'count', b'.']
['[CLS]', 'how', 'many', 'car', 'makers', 'are', 'there', 'in', 'each', 'continents', '?', 'list', 'the', 'continent', 'name', 'and', 'the', 'count', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent'
Target TF-P tokens: from continents join countries on continents.ContId = countries.Continent join car_makers on countries.CountryId = car_makers.Country group by continents.Continent select continents.Continent , count (*)

[WRONG] [hard] Pred 0:	b'SELECT countries.CountryName, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-0.192) (length=18)
[WRONG] [hard] Pred 1:	b'SELECT countries.CountryName, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country' (-1.693) (length=18)
[WRONG] [hard] Pred 2:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-2.082) (length=18)
[WRONG] [hard] Pred 3:	b'SELECT countries.CountryName, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName' (-3.114) (length=18)
[WRONG] [hard] Pred 4:	b'SELECT countries.CountryName, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-3.542) (length=23)
[WRONG] [hard] Pred 5:	b'SELECT continents.Continent, COUNT(*) FROM continents JOIN car_makers ON continents.ContId = car_makers.Country GROUP BY continents.Continent' (-3.551) (length=18)
[WRONG] [hard] Pred 6:	b'SELECT continents.Continent, COUNT(*) FROM car_makers JOIN continents ON car_makers.Country = continents.ContId GROUP BY continents.Continent' (-3.608) (length=18)
[WRONG] [hard] Pred 7:	b'SELECT countries.CountryName, COUNT(*), 1 FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-3.713) (length=20)
[WRONG] [hard] Pred 8:	b'SELECT countries.CountryName, COUNT(*), * FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-3.868) (length=22)
[WRONG] [hard] Pred 9:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName' (-4.417) (length=18)
Error Case 15

Parsing error: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.Continent having count (*)) select countries.CountryName , count (*)
Parsing error: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.Continent having count (*) , countries.Continent
Example 19
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the name of each continent and how many car makers are there in each one?'
NL tokens: [b'what', b'is', b'the', b'name', b'of', b'each', b'continent', b'and', b'how', b'many', b'car', b'makers', b'are', b'there', b'in', b'each', b'one', b'?']
NL tokens (original): [b'What', b'is', b'the', b'name', b'of', b'each', b'continent', b'and', b'how', b'many', b'car', b'makers', b'are', b'there', b'in', b'each', b'one', b'?']
['[CLS]', 'what', 'is', 'the', 'name', 'of', 'each', 'continent', 'and', 'how', 'many', 'car', 'makers', 'are', 'there', 'in', 'each', 'one', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent'
Target TF-P tokens: from continents join countries on continents.ContId = countries.Continent join car_makers on countries.CountryId = car_makers.Country group by continents.Continent select continents.Continent , count (*)

[WRONG] [hard] Pred 0:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-1.029) (length=18)
[WRONG] [hard] Pred 1:	b'SELECT countries.CountryName, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-2.231) (length=18)
[WRONG] [hard] Pred 2:	b'SELECT continents.Continent, COUNT(*) FROM continents JOIN car_makers ON continents.ContId = car_makers.Country GROUP BY continents.Continent' (-2.480) (length=18)
[WRONG] [hard] Pred 3:	b'SELECT countries.Continent, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-2.961) (length=18)
[WRONG] [hard] Pred 4:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) > 1' (-3.626) (length=25)
[WRONG] [hard] Pred 5:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName' (-3.732) (length=18)
[WRONG] [hard] Pred 6:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) = 1' (-3.938) (length=25)
[WRONG] [hard] Pred 7:	b'SELECT countries.Continent, COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.Continent' (-4.000) (length=18)
[WRONG] [hard] Pred 8:	b'SELECT COUNT(*), countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-4.258) (length=16)
[WRONG] [hard] Pred 9:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.Continent = car_makers.Country GROUP BY countries.Continent' (-4.506) (length=18)
[WRONG] [hard] Pred 10:	b'SELECT countries.CountryName, COUNT(*), countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-4.614) (length=20)
[WRONG] [hard] Pred 11:	b'SELECT countries.CountryName, COUNT(*), car_makers.Country FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-4.944) (length=20)
[WRONG] [hard] Pred 12:	b'SELECT COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-4.952) (length=14)
[WRONG] [hard] Pred 13:	b'SELECT countries.CountryName, COUNT(*), 1 FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent' (-5.230) (length=20)
Error Case 16

Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker group by car_makers.Maker select count (*) , car_makers.FullName
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker group by car_makers.Maker select count (*) , car_makers.Maker
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , car_makers.Maker , count (*) , car_makers.Maker
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , count (*) , car_makers.FullName
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , count (*) , car_makers.Maker
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , car_makers.Maker , count (*) , car_makers.FullName
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Maker , car_makers.Maker = count (*) , car_makers.Maker
Example 22
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many car models are produced by each maker ? Only list the count and the maker full name .'
NL tokens: [b'how', b'many', b'car', b'models', b'are', b'produced', b'by', b'each', b'maker', b'?', b'only', b'list', b'the', b'count', b'and', b'the', b'maker', b'full', b'name', b'.']
NL tokens (original): [b'How', b'many', b'car', b'models', b'are', b'produced', b'by', b'each', b'maker', b'?', b'Only', b'list', b'the', b'count', b'and', b'the', b'maker', b'full', b'name', b'.']
['[CLS]', 'how', 'many', 'car', 'models', 'are', 'produced', 'by', 'each', 'maker', '?', 'only', 'list', 'the', 'count', 'and', 'the', 'maker', 'full', 'name', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id'
Target TF-P tokens: from model_list join car_makers on model_list.Maker = car_makers.Id group by car_makers.Id select count (*) , car_makers.FullName

[WRONG] [medium] Pred 0:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker' (-0.093) (length=18)
[WRONG] [medium] Pred 1:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker' (-0.327) (length=18)
[WRONG] [medium] Pred 2:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-0.775) (length=20)
[WRONG] [medium] Pred 3:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-0.917) (length=20)
[WRONG] [medium] Pred 4:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-1.203) (length=22)
[WRONG] [medium] Pred 5:	b'SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker' (-1.986) (length=20)
[WRONG] [medium] Pred 6:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-2.026) (length=22)
[WRONG] [medium] Pred 7:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker' (-2.313) (length=20)
[WRONG] [medium] Pred 8:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker' (-2.357) (length=20)
Error Case 17

ERROR: Join condition does not match with table: ['car_makers', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.Model']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.Model']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'model_list', 'on': {'eq': ['model_list.Model', 'model_list.Maker']}}]
Example 23
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the number of car models that are produced by each maker and what is the id and full name of each maker?'
NL tokens: [b'what', b'is', b'the', b'number', b'of', b'car', b'models', b'that', b'are', b'produced', b'by', b'each', b'maker', b'and', b'what', b'is', b'the', b'id', b'and', b'full', b'name', b'of', b'each', b'maker', b'?']
NL tokens (original): [b'What', b'is', b'the', b'number', b'of', b'car', b'models', b'that', b'are', b'produced', b'by', b'each', b'maker', b'and', b'what', b'is', b'the', b'id', b'and', b'full', b'name', b'of', b'each', b'maker', b'?']
['[CLS]', 'what', 'is', 'the', 'number', 'of', 'car', 'models', 'that', 'are', 'produced', 'by', 'each', 'maker', 'and', 'what', 'is', 'the', 'id', 'and', 'full', 'name', 'of', 'each', 'maker', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id'
Target TF-P tokens: from model_list join car_makers on model_list.Maker = car_makers.Id group by car_makers.Id select count (*) , car_makers.FullName , car_makers.Id

[WRONG] [medium] Pred 0:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-0.020) (length=18)
[WRONG] [medium] Pred 1:	b'SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-1.068) (length=20)
[WRONG] [medium] Pred 2:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id' (-1.377) (length=18)
[WRONG] [medium] Pred 3:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id' (-1.390) (length=18)
[WRONG] [medium] Pred 4:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON model_list.Model = car_makers.Id GROUP BY car_makers.Id' (-2.212) (length=18)
[WRONG] [medium] Pred 5:	b'SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-2.348) (length=22)
[WRONG] [medium] Pred 6:	b'SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id' (-2.370) (length=20)
[WRONG] [medium] Pred 7:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id' (-2.451) (length=18)
 25%|██▌       | 3/12 [00:55<02:06, 14.06s/it][WRONG] [medium] Pred 8:	b'SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON model_list.Model = car_makers.Id GROUP BY car_makers.Id' (-2.618) (length=20)
[WRONG] [medium] Pred 9:	b'SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-2.758) (length=20)
[WRONG] [medium] Pred 10:	b'SELECT car_makers.Maker, car_makers.FullName, COUNT(*) FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id' (-2.824) (length=20)
[WRONG] [medium] Pred 11:	b'SELECT COUNT(*), car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.FullName' (-2.830) (length=20)
Error Case 18

Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportaboutout)" select car_names.MakeId
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportaboutout ()" select car_names.MakeId
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportaboutout)" select car_names.Model
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId)
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportaboutout)" select car_names.MakeId)
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportaboutout ()" select car_names.MakeId) having count (*)
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportabout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "sw)"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportaboutout ()" and car_names.MakeId = "sw)" and car_names.MakeId = "sw)"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportabout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "amc hornet"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportaboutout ()" and car_names.MakeId = "sw)" and car_names.MakeId = "amc hornet"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportaboutout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "sw"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportabout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "sw ("
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportaboutout ()" and car_names.MakeId = "sw)" and car_names.MakeId = "sw ("
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportaboutout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "amc"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = (from car_names where car_names.Make = "amc hornet sportabout ()" select car_names.MakeId) and car_names.MakeId = "amc hornet sportabout ()" and car_names.MakeId = "sw ()" and car_names.MakeId = "amc sport"
Example 24
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the accelerate of the car make amc hornet sportabout (sw)?'
NL tokens: [b'what', b'is', b'the', b'accelerate', b'of', b'the', b'car', b'make', b'amc', b'hornet', b'sport', b'##ab', b'##out', b'(', b'sw', b')', b'?']
NL tokens (original): [b'What', b'is', b'the', b'accelerate', b'of', b'the', b'car', b'make', b'amc', b'hornet', b'sport', b'##ab', b'##out', b'(', b'sw', b')', b'?']
['[CLS]', 'what', 'is', 'the', 'accelerate', 'of', 'the', 'car', 'make', 'amc', 'hornet', 'sport', '##ab', '##out', '(', 'sw', ')', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'amc', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'amc', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'amc', '[unused51]', 'make', '[unused49]', 'amc', 'hornet', '[unused49]', 'amc', 'hornet', 'sport', '##ab', '##out', '(', 'sw', ')', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'"
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where car_names.Make = "amc hornet sportabout (sw)" select cars_data.Accelerate

[WRONG] medium Pred 0:	No valid output! (0.000)
Error Case 19

Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportabout "select"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE000" and car_names.MakeId = "amc hornet sportabout"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE0000" and car_names.MakeId = "amc hornet sportabout"
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw () "and car_names.MakeId =" amc hornet sportabout ""
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE000" and car_names.MakeId = "amc hornet sportabout)"
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportabout "and"
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportabout) ""
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) ""
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportababout ""
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE000" and car_names.MakeId = "amc hornet sportababout"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE000" and car_names.MakeId = "amc hornet sportaboutout"
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportaboutout ""
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE0000" and car_names.MakeId = "amc sportabout"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE0000" and car_names.MakeId = "amc hornet sportabab"
Parsing error: from car_names where car_names.Make = "amc hornet sportabout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId = limit VALUE000" and car_names.MakeId = "amc hornet sportabout ("
Parsing error: from car_names where car_names.Make = "amc hornet sportaboutout)" and car_names.MakeId = "amc hornet sportabout" and car_names.MakeId = amc sportabout "and car_names.MakeId =" amc hornet sportabout "and car_names.MakeId =" sw) "and car_names.MakeId =" amc hornet sportabout (""
Example 25
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How much does the car accelerate that makes amc hornet sportabout (sw)?'
NL tokens: [b'how', b'much', b'does', b'the', b'car', b'accelerate', b'that', b'makes', b'amc', b'hornet', b'sport', b'##ab', b'##out', b'(', b'sw', b')', b'?']
NL tokens (original): [b'How', b'much', b'does', b'the', b'car', b'accelerate', b'that', b'makes', b'amc', b'hornet', b'sport', b'##ab', b'##out', b'(', b'sw', b')', b'?']
['[CLS]', 'how', 'much', 'does', 'the', 'car', 'accelerate', 'that', 'makes', 'amc', 'hornet', 'sport', '##ab', '##out', '(', 'sw', ')', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'amc', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'amc', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'amc', '[unused51]', 'make', '[unused49]', 'amc', 'hornet', '[unused49]', 'amc', 'hornet', 'sport', '##ab', '##out', '(', 'sw', ')', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'"
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where car_names.Make = "amc hornet sportabout (sw)" select cars_data.Accelerate

[WRONG] medium Pred 0:	No valid output! (0.000)
Error Case 20

ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'cars_data', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}, {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
Parsing error: from countries >= continents on countries.CountryId = countries.Continent where countries.CountryName = "usa" select count (*)
Example 28
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many car models are produced in the usa?'
NL tokens: [b'how', b'many', b'car', b'models', b'are', b'produced', b'in', b'the', b'usa', b'?']
NL tokens (original): [b'How', b'many', b'car', b'models', b'are', b'produced', b'in', b'the', b'usa', b'?']
['[CLS]', 'how', 'many', 'car', 'models', 'are', 'produced', 'in', 'the', 'usa', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused49]', 'usa', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'"
Target TF-P tokens: from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where countries.CountryName = "usa" select count (*)

[WRONG] [hard] Pred 0:	b'SELECT COUNT(*) FROM countries WHERE countries.CountryName = "usa"' (-2.324) (length=14)
[WRONG] [hard] Pred 1:	b'SELECT COUNT(*) FROM countries JOIN continents ON continents.ContId = countries.Continent WHERE countries.CountryName = "usa"' (-2.515) (length=20)
Error Case 21

ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'continents', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'cars_data', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
Example 29
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the count of the car models produced in the United States?'
NL tokens: [b'what', b'is', b'the', b'count', b'of', b'the', b'car', b'models', b'produced', b'in', b'the', b'united', b'states', b'?']
NL tokens (original): [b'What', b'is', b'the', b'count', b'of', b'the', b'car', b'models', b'produced', b'in', b'the', b'United', b'States', b'?']
['[CLS]', 'what', 'is', 'the', 'count', 'of', 'the', 'car', 'models', 'produced', 'in', 'the', 'united', 'states', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
 33%|███▎      | 4/12 [01:20<02:17, 17.13s/it]Target 0: b"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'"
Target TF-P tokens: from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where countries.CountryName = "VALUE" select count (*)

[WRONG] [hard] Pred 0:	b'SELECT COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = "VALUE"' (-2.573) (length=20)
[WRONG] [hard] Pred 1:	b'SELECT COUNT(*) FROM countries JOIN continents ON continents.ContId = countries.Continent WHERE continents.Continent = "VALUE"' (-2.659) (length=20)
[WRONG] [hard] Pred 2:	b'SELECT COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = "VALUE VALUE"' (-2.780) (length=21)
[WRONG] [hard] Pred 3:	b'SELECT COUNT(*) FROM countries WHERE countries.CountryName = "VALUE"' (-4.086) (length=14)
Error Case 22

Parsing error: from cars_data where cars_data.Cylinders = 4 : cars_data.Horsepower = "average" select avg (cars_data.Horsepower)
Parsing error: from cars_data where cars_data.Cylinders = 4 : cars_data.Cylinders = 4 select avg (cars_data.Horsepower)
Parsing error: from cars_data where cars_data.Cylinders = 4 : avg (cars_data.Horsepower)
Parsing error: from cars_data where cars_data.Cylinders = 4 select / (cars_data.Horsepower)
Example 31
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the average miles per gallon of all the cards with 4 cylinders?'
NL tokens: [b'what', b'is', b'the', b'average', b'miles', b'per', b'gallon', b'of', b'all', b'the', b'cards', b'with', b'4', b'cylinders', b'?']
NL tokens (original): [b'What', b'is', b'the', b'average', b'miles', b'per', b'gallon', b'of', b'all', b'the', b'cards', b'with', b'4', b'cylinders', b'?']
['[CLS]', 'what', 'is', 'the', 'average', 'miles', 'per', 'gallon', 'of', 'all', 'the', 'cards', 'with', '4', 'cylinders', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4'
Target TF-P tokens: from cars_data where cars_data.Cylinders = 4 select avg (cars_data.MPG)

[WRONG] [easy] Pred 0:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4' (-0.000) (length=12)
[WRONG] [easy] Pred 1:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Horsepower = "average"' (-3.614) (length=18)
[WRONG] [easy] Pred 2:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 INTERSECT SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4' (-3.633) (length=24)
[WRONG] [easy] Pred 3:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4' (-4.008) (length=17)
[WRONG] [easy] Pred 4:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data JOIN cars_data ON cars_data.Id = cars_data.Id WHERE cars_data.Cylinders = 4' (-4.025) (length=18)
[WRONG] [easy] Pred 5:	b'SELECT AVG(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4' (-4.045) (length=14)
[WRONG] [easy] Pred 6:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Cylinders = 4' (-4.676) (length=16)
[WRONG] [easy] Pred 7:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Horsepower = "?"' (-4.750) (length=18)
[WRONG] [easy] Pred 8:	b'SELECT AVG(cars_data.Horsepower), cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 4' (-4.791) (length=14)
[WRONG] [easy] Pred 9:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 GROUP BY cars_data.Horsepower' (-4.900) (length=14)
[WRONG] [easy] Pred 10:	b'SELECT AVG(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 GROUP BY cars_data.Horsepower' (-4.979) (length=16)
[WRONG] [easy] Pred 11:	b'SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Horsepower = 1' (-5.157) (length=16)
Error Case 23

Example 32
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the smallest weight of the car produced with 8 cylinders on 1974 ?'
NL tokens: [b'what', b'is', b'the', b'smallest', b'weight', b'of', b'the', b'car', b'produced', b'with', b'8', b'cylinders', b'on', b'1974', b'?']
NL tokens (original): [b'What', b'is', b'the', b'smallest', b'weight', b'of', b'the', b'car', b'produced', b'with', b'8', b'cylinders', b'on', b'1974', b'?']
['[CLS]', 'what', 'is', 'the', 'smallest', 'weight', 'of', 'the', 'car', 'produced', 'with', '8', 'cylinders', 'on', '1974', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select min(weight) from cars_data where cylinders  =  8 and year  =  1974'
Target TF-P tokens: from cars_data where cars_data.Cylinders = 8 and cars_data.Year = 1974 select min (cars_data.Weight)

[WRONG] [medium] Pred 0:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Cylinders = 1974' (-0.197) (length=13)
[WRONG] [medium] Pred 1:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974' (-0.517) (length=13)
[WRONG] [medium] Pred 2:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 1974 AND cars_data.Cylinders = 8' (-0.819) (length=13)
[WRONG] [medium] Pred 3:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 8 AND cars_data.Cylinders = 1974' (-0.824) (length=13)
[WRONG] [medium] Pred 4:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 1974 AND cars_data.Cylinders = 8' (-1.047) (length=13)
[WRONG] [medium] Pred 5:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 8 AND cars_data.Year = 1974' (-1.061) (length=13)
[WRONG] [medium] Pred 6:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Cylinders = 8' (-1.196) (length=13)
[WRONG] [medium] Pred 7:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 1974 AND cars_data.Year = 8' (-1.419) (length=13)
[WRONG] [medium] Pred 8:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 1974 AND cars_data.Year = 8' (-1.605) (length=13)
[WRONG] [medium] Pred 9:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 8 AND cars_data.Cylinders = 8' (-1.717) (length=13)
[WRONG] [medium] Pred 10:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Cylinders <= 1974' (-1.836) (length=13)
[WRONG] [medium] Pred 11:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Year = 8' (-1.854) (length=13)
[WRONG] [medium] Pred 12:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 8 AND cars_data.Year = 8' (-2.381) (length=13)
[WRONG] [medium] Pred 13:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Year = 8 AND cars_data.Cylinders <= 1974' (-2.813) (length=13)
[WRONG] [medium] Pred 14:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 1974 ORDER BY cars_data.Weight LIMIT 1' (-2.915) (length=13)
[WRONG] [medium] Pred 15:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 1974 AND cars_data.Cylinders = 1974' (-3.019) (length=13)
Error Case 24

Example 33
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the minimum weight of the car with 8 cylinders produced in 1974 ?'
NL tokens: [b'what', b'is', b'the', b'minimum', b'weight', b'of', b'the', b'car', b'with', b'8', b'cylinders', b'produced', b'in', b'1974', b'?']
NL tokens (original): [b'What', b'is', b'the', b'minimum', b'weight', b'of', b'the', b'car', b'with', b'8', b'cylinders', b'produced', b'in', b'1974', b'?']
['[CLS]', 'what', 'is', 'the', 'minimum', 'weight', 'of', 'the', 'car', 'with', '8', 'cylinders', 'produced', 'in', '1974', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select min(weight) from cars_data where cylinders  =  8 and year  =  1974'
Target TF-P tokens: from cars_data where cars_data.Cylinders = 8 and cars_data.Year = 1974 select min (cars_data.Weight)

[WRONG] [medium] Pred 0:	b'SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Cylinders = 1974' (-0.341) (length=16)
[CORRE] [medium] Pred 1:	b'SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974' (-0.386) (length=16)
Error Case 25

ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: table "car_makers" in field expression car_makers.Maker is not in the current scope
ERROR: table "car_makers" in field expression car_makers.Maker is not in the current scope
Parsing error: from car_makers select car_makers.Maker is from model_list select model_list.Maker
ERROR: table "car_makers" in field expression car_makers.Maker is not in the current scope
Example 34
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are all the makers and models?'
NL tokens: [b'what', b'are', b'all', b'the', b'makers', b'and', b'models', b'?']
NL tokens (original): [b'What', b'are', b'all', b'the', b'makers', b'and', b'models', b'?']
['[CLS]', 'what', 'are', 'all', 'the', 'makers', 'and', 'models', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT Maker ,  Model FROM MODEL_LIST'
Target TF-P tokens: from model_list select model_list.Maker , model_list.Model

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker FROM car_makers UNION SELECT model_list.Maker FROM model_list' (-1.813) (length=10)
[WRONG] [medium] Pred 1:	b'SELECT car_makers.Maker FROM car_makers UNION SELECT model_list.Model FROM model_list' (-2.744) (length=10)
[WRONG] [medium] Pred 2:	b'SELECT car_makers.Maker FROM car_makers INTERSECT SELECT model_list.Maker FROM model_list' (-4.120) (length=10)
[WRONG] [medium] Pred 3:	b'SELECT car_makers.Maker FROM car_makers UNION SELECT model_list.Maker, model_list.Model FROM model_list' (-4.957) (length=12)
[WRONG] [medium] Pred 4:	b'SELECT car_makers.Maker FROM car_makers EXCEPT SELECT model_list.Maker FROM model_list' (-5.189) (length=10)
[WRONG] [medium] Pred 5:	b'SELECT car_makers.Maker FROM car_makers INTERSECT SELECT model_list.Model FROM model_list' (-5.213) (length=10)
[WRONG] [medium] Pred 6:	b'SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker' (-5.676) (length=13)
[WRONG] [medium] Pred 7:	b'SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Model' (-5.861) (length=13)
[WRONG] [medium] Pred 8:	b'SELECT car_makers.Maker FROM car_makers WHERE car_makers.Id = (SELECT model_list.Maker FROM model_list)' (-6.124) (length=14)
[WRONG] [medium] Pred 9:	b'SELECT car_makers.Maker FROM car_makers WHERE car_makers.FullName = "makers VALUE" UNION SELECT car_makers.Maker FROM car_makers' (-6.130) (length=17)
[WRONG] [medium] Pred 10:	b'SELECT car_makers.Maker FROM car_makers' (-6.236) (length=5)
Error Case 26

ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: table "model_list" in field expression model_list.Model is not in the current scope
Example 35
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the makers and models?'
NL tokens: [b'what', b'are', b'the', b'makers', b'and', b'models', b'?']
NL tokens (original): [b'What', b'are', b'the', b'makers', b'and', b'models', b'?']
['[CLS]', 'what', 'are', 'the', 'makers', 'and', 'models', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT Maker ,  Model FROM MODEL_LIST'
Target TF-P tokens: from model_list select model_list.Maker , model_list.Model

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker' (-5.078) (length=13)
[WRONG] [medium] Pred 1:	b'SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Model' (-5.406) (length=13)
[CORRE] [medium] Pred 2:	b'SELECT model_list.Maker, model_list.Model FROM model_list' (-5.734) (length=7)
Error Case 27

Parsing error: from countries join car_makers on countries.CountryId = car_makers.Country where car_makers.Maker = "VALUE distinct countries.CountryName , countries.CountryId"
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
Example 36
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the countries having at least one car maker? List name and id.'
NL tokens: [b'what', b'are', b'the', b'countries', b'having', b'at', b'least', b'one', b'car', b'maker', b'?', b'list', b'name', b'and', b'id', b'.']
NL tokens (original): [b'What', b'are', b'the', b'countries', b'having', b'at', b'least', b'one', b'car', b'maker', b'?', b'List', b'name', b'and', b'id', b'.']
['[CLS]', 'what', 'are', 'the', 'countries', 'having', 'at', 'least', 'one', 'car', 'maker', '?', 'list', 'name', 'and', 'id', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1'
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) >= 1 select countries.CountryName , countries.CountryId

[WRONG] [medium] Pred 0:	b'SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-0.022) (length=14)
[WRONG] [medium] Pred 1:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-0.898) (length=13)
[WRONG] [medium] Pred 2:	b'SELECT DISTINCT countries.CountryName, countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-1.356) (length=14)
[WRONG] [medium] Pred 3:	b'SELECT countries.CountryName, countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-2.460) (length=13)
[WRONG] [medium] Pred 4:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "VALUE"' (-2.852) (length=19)
 42%|████▏     | 5/12 [01:29<01:43, 14.76s/it][WRONG] [medium] Pred 5:	b'SELECT countries.CountryName, car_makers.Maker FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-2.891) (length=13)
[WRONG] [medium] Pred 6:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "VALUE VALUE"' (-3.112) (length=20)
[WRONG] [medium] Pred 7:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN (SELECT car_makers.Country FROM car_makers)' (-3.308) (length=22)
[WRONG] [medium] Pred 8:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker LIKE "% VALUE %"' (-3.349) (length=21)
[WRONG] [medium] Pred 9:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId' (-3.492) (length=15)
[WRONG] [medium] Pred 10:	b'SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "VALUE"' (-3.670) (length=20)
[WRONG] [medium] Pred 11:	b'SELECT countries.CountryName, countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN (SELECT car_makers.Country FROM car_makers)' (-3.719) (length=22)
[WRONG] [medium] Pred 12:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-3.767) (length=13)
[WRONG] [medium] Pred 13:	b'SELECT DISTINCT countries.CountryName, countries.CountryId, car_makers.Maker FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-4.109) (length=16)
Error Case 28

Parsing error: from countries join car_makers on countries.CountryId = car_makers.Country where car_makers.FullName in (from countries join car_makers on countries.CountryId = car_makers.Country select countries.CountryName , countries.CountryId
Example 37
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the names and ids of all countries with at least one car maker?'
NL tokens: [b'what', b'are', b'the', b'names', b'and', b'id', b'##s', b'of', b'all', b'countries', b'with', b'at', b'least', b'one', b'car', b'maker', b'?']
NL tokens (original): [b'What', b'are', b'the', b'names', b'and', b'id', b'##s', b'of', b'all', b'countries', b'with', b'at', b'least', b'one', b'car', b'maker', b'?']
['[CLS]', 'what', 'are', 'the', 'names', 'and', 'id', '##s', 'of', 'all', 'countries', 'with', 'at', 'least', 'one', 'car', 'maker', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1'
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) >= 1 select countries.CountryName , countries.CountryId

[WRONG] [medium] Pred 0:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-0.009) (length=13)
[WRONG] [medium] Pred 1:	b'SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-1.087) (length=14)
[WRONG] [medium] Pred 2:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId' (-1.983) (length=15)
[WRONG] [medium] Pred 3:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName IN (SELECT DISTINCT countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country)' (-2.503) (length=29)
[WRONG] [medium] Pred 4:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName IN (SELECT DISTINCT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country)' (-2.562) (length=29)
[WRONG] [medium] Pred 5:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker < "VALUE"' (-2.823) (length=19)
[WRONG] [medium] Pred 6:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "VALUE"' (-2.947) (length=19)
[WRONG] [medium] Pred 7:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "VALUE"' (-3.048) (length=19)
[WRONG] [medium] Pred 8:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker > "VALUE"' (-3.059) (length=19)
[WRONG] [medium] Pred 9:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName < "VALUE"' (-3.062) (length=19)
[WRONG] [medium] Pred 10:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker > "VALUE %"' (-3.122) (length=20)
[WRONG] [medium] Pred 11:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker < "VALUE VALUE"' (-3.150) (length=20)
[WRONG] [medium] Pred 12:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName > "VALUE %"' (-3.234) (length=20)
[WRONG] [medium] Pred 13:	b'SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker > "VALUE VALUE"' (-3.296) (length=20)
[WRONG] [medium] Pred 14:	b'SELECT countries.CountryName, countries.CountryId, MIN(car_makers.Maker) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId' (-3.303) (length=20)
Error Case 29

Example 41
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the average weight and year for each year?'
NL tokens: [b'what', b'is', b'the', b'average', b'weight', b'and', b'year', b'for', b'each', b'year', b'?']
NL tokens (original): [b'What', b'is', b'the', b'average', b'weight', b'and', b'year', b'for', b'each', b'year', b'?']
['[CLS]', 'what', 'is', 'the', 'average', 'weight', 'and', 'year', 'for', 'each', 'year', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR'
Target TF-P tokens: from cars_data group by cars_data.Year select avg (cars_data.Weight) , cars_data.Year

[WRONG] [medium] Pred 0:	b'SELECT AVG(cars_data.Weight), AVG(cars_data.Year), cars_data.Year FROM cars_data GROUP BY cars_data.Year' (-0.040) (length=17)
[CORRE] [medium] Pred 1:	b'SELECT AVG(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year' (-0.492) (length=17)
Error Case 30

argument of type 'int' is not iterable
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}, {'join': 'car_makers', 'on': {'and': [{'eq': ['car_makers.Id', 'car_makers.Id']}, {'eq': ['countries.CountryId', 'countries.CountryId']}]}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}, {'join': 'car_makers', 'on': {'and': [{'eq': ['car_makers.Id', 'car_makers.Id']}, {'eq': ['countries.CountryId', 'countries.Continent']}]}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}, {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}, {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}, {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}, {'join': 'continents', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}, {'join': 'car_makers', 'on': {'and': [{'eq': ['car_makers.Id', 'car_makers.Id']}, {'eq': ['countries.Continent', 'countries.CountryId']}]}}]
argument of type 'int' is not iterable
Example 42
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which countries in europe have at least 3 car manufacturers?'
NL tokens: [b'which', b'countries', b'in', b'europe', b'have', b'at', b'least', b'3', b'car', b'manufacturers', b'?']
NL tokens (original): [b'Which', b'countries', b'in', b'europe', b'have', b'at', b'least', b'3', b'car', b'manufacturers', b'?']
['[CLS]', 'which', 'countries', 'in', 'europe', 'have', 'at', 'least', '3', 'car', 'manufacturers', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused49]', 'europe', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3"
Target TF-P tokens: from countries join continents on countries.Continent = continents.ContId join car_makers on countries.CountryId = car_makers.Country where continents.Continent = "europe" group by countries.CountryName having count (*) >= 3 select countries.CountryName

[WRONG] [extra] Pred 0:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-0.579) (length=20)
[WRONG] [extra] Pred 1:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= "europe"' (-1.685) (length=20)
[WRONG] [extra] Pred 2:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = "europe" GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.227) (length=38)
[WRONG] [extra] Pred 3:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = "europe" AND car_makers.Maker = 3' (-2.236) (length=33)
[WRONG] [extra] Pred 4:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id JOIN continents ON continents.ContId = countries.Continent GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.364) (length=32)
[WRONG] [extra] Pred 5:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON continents.ContId = countries.Continent GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.423) (length=26)
[WRONG] [extra] Pred 6:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId ORDER BY COUNT(*) >= 3' (-2.563) (length=20)
[WRONG] [extra] Pred 7:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = "europe" AND car_makers.Maker >= 3' (-2.681) (length=33)
[WRONG] [extra] Pred 8:	b'SELECT continents.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id JOIN continents ON continents.ContId = countries.Continent GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.713) (length=32)
Error Case 31

Example 43
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the names of all European countries with at least 3 manufacturers?'
NL tokens: [b'what', b'are', b'the', b'names', b'of', b'all', b'european', b'countries', b'with', b'at', b'least', b'3', b'manufacturers', b'?']
NL tokens (original): [b'What', b'are', b'the', b'names', b'of', b'all', b'European', b'countries', b'with', b'at', b'least', b'3', b'manufacturers', b'?']
['[CLS]', 'what', 'are', 'the', 'names', 'of', 'all', 'european', 'countries', 'with', 'at', 'least', '3', 'manufacturers', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused49]', 'europe', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3"
Target TF-P tokens: from countries join continents on countries.Continent = continents.ContId join car_makers on countries.CountryId = car_makers.Country where continents.Continent = "VALUE" group by countries.CountryName having count (*) >= 3 select countries.CountryName

[WRONG] [extra] Pred 0:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3' (-0.045) (length=20)
[WRONG] [extra] Pred 1:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-1.345) (length=20)
[WRONG] [extra] Pred 2:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= "European" INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-1.751) (length=40)
[WRONG] [extra] Pred 3:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent ORDER BY COUNT(*) >= 3' (-1.823) (length=20)
[WRONG] [extra] Pred 4:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= "European"' (-2.087) (length=20)
[WRONG] [extra] Pred 5:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3 INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.095) (length=40)
[WRONG] [extra] Pred 6:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= "European" INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 3' (-2.155) (length=40)
[WRONG] [extra] Pred 7:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= "European" INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3' (-2.267) (length=40)
[WRONG] [extra] Pred 8:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3 INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3' (-2.534) (length=40)
[WRONG] [extra] Pred 9:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= "European" INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3' (-2.656) (length=40)
[WRONG] [extra] Pred 10:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN car_makers ON car_makers.Id = car_makers.Id GROUP BY countries.Continent HAVING COUNT(*) >= 3' (-2.754) (length=26)
[WRONG] [extra] Pred 11:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING car_makers.Maker >= 3 ORDER BY COUNT(*) >= 3' (-2.865) (length=24)
[WRONG] [extra] Pred 12:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING car_makers.FullName >= 3 ORDER BY COUNT(*) >= 3' (-2.866) (length=24)
[WRONG] [extra] Pred 13:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= "European"' (-3.201) (length=20)
[WRONG] [extra] Pred 14:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) >= 3 ORDER BY countries.CountryName' (-3.399) (length=22)
[WRONG] [extra] Pred 15:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent HAVING COUNT(*) > 3' (-3.446) (length=20)
Error Case 32

Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , in (*)
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , limit from car_names where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , car_names.Make
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , limit 1
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , limit from car_names where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , car_names.MakeId
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , join car_makers on cars_data.Id = car_makers.Id where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , car_makers.Maker
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , join car_makers on cars_data.Id = car_makers.Id where cars_data.Cylinders = 3 select max (cars_data.Horsepower) , min (cars_data.Cylinders)
Example 44
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the maximum horsepower and the make of the car models with 3 cylinders?'
NL tokens: [b'what', b'is', b'the', b'maximum', b'horsepower', b'and', b'the', b'make', b'of', b'the', b'car', b'models', b'with', b'3', b'cylinders', b'?']
NL tokens (original): [b'What', b'is', b'the', b'maximum', b'horsepower', b'and', b'the', b'make', b'of', b'the', b'car', b'models', b'with', b'3', b'cylinders', b'?']
['[CLS]', 'what', 'is', 'the', 'maximum', 'horsepower', 'and', 'the', 'make', 'of', 'the', 'car', 'models', 'with', '3', 'cylinders', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Cylinders = 3 select cars_data.Horsepower , car_names.Make order by cars_data.Horsepower desc limit 1

[WRONG] [extra] Pred 0:	b'SELECT MAX(cars_data.Horsepower), COUNT(*) FROM cars_data WHERE cars_data.Cylinders = 3' (-3.000) (length=17)
[WRONG] [extra] Pred 1:	b'SELECT MAX(cars_data.Horsepower), "yes" FROM cars_data WHERE cars_data.Cylinders = 3' (-3.365) (length=14)
[WRONG] [extra] Pred 2:	b'SELECT MAX(cars_data.Horsepower), MAX(cars_data.Cylinders) FROM cars_data WHERE cars_data.Cylinders = 3' (-3.519) (length=17)
[WRONG] [extra] Pred 3:	b'SELECT MAX(cars_data.Horsepower), MIN(cars_data.Cylinders) FROM cars_data WHERE cars_data.Cylinders = 3' (-3.637) (length=17)
[WRONG] [extra] Pred 4:	b'SELECT MAX(cars_data.Horsepower), MAX(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 3' (-3.779) (length=17)
[WRONG] [extra] Pred 5:	b'SELECT MAX(cars_data.Horsepower), MIN(car_makers.Maker) FROM cars_data JOIN car_makers ON cars_data.Id = car_makers.Id WHERE cars_data.Cylinders = 3' (-3.853) (length=23)
[WRONG] [extra] Pred 6:	b'SELECT MAX(cars_data.Horsepower), MAX(car_makers.Maker) FROM cars_data JOIN car_makers ON cars_data.Id = car_makers.Id WHERE cars_data.Cylinders = 3' (-3.873) (length=23)
[WRONG] [extra] Pred 7:	b'SELECT MAX(cars_data.Horsepower), MIN(cars_data.Cylinders) FROM cars_data JOIN car_makers ON cars_data.Id = car_makers.Id WHERE cars_data.Cylinders = 3' (-3.912) (length=23)
[WRONG] [extra] Pred 8:	b'SELECT MAX(cars_data.Horsepower), MIN(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 3' (-4.030) (length=17)
[WRONG] [extra] Pred 9:	b'SELECT MAX(cars_data.Horsepower), MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 3' (-4.036) (length=17)
Error Case 33

ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
Parsing error: from cars_data where cars_data.Cylinders = 3 select max (cars_data.Horsepower) ,
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}]
Example 45
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the largest amount of horsepower for the models with 3 cylinders and what make is it?'
NL tokens: [b'what', b'is', b'the', b'largest', b'amount', b'of', b'horsepower', b'for', b'the', b'models', b'with', b'3', b'cylinders', b'and', b'what', b'make', b'is', b'it', b'?']
NL tokens (original): [b'What', b'is', b'the', b'largest', b'amount', b'of', b'horsepower', b'for', b'the', b'models', b'with', b'3', b'cylinders', b'and', b'what', b'make', b'is', b'it', b'?']
['[CLS]', 'what', 'is', 'the', 'largest', 'amount', 'of', 'horsepower', 'for', 'the', 'models', 'with', '3', 'cylinders', 'and', 'what', 'make', 'is', 'it', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Cylinders = 3 select cars_data.Horsepower , car_names.Make order by cars_data.Horsepower desc limit 1

[WRONG] [extra] Pred 0:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 3' (-2.740) (length=11)
[WRONG] [extra] Pred 1:	b'SELECT MAX(cars_data.Horsepower), MIN(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 3' (-4.272) (length=17)
[WRONG] [extra] Pred 2:	b'SELECT cars_data.Horsepower, MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 3 GROUP BY cars_data.Horsepower' (-4.625) (length=16)
[WRONG] [extra] Pred 3:	b'SELECT MAX(cars_data.Horsepower), 1 FROM cars_data WHERE cars_data.Cylinders = 3' (-5.018) (length=14)
[WRONG] [extra] Pred 4:	b'SELECT "yes", cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 3' (-5.718) (length=11)
[WRONG] [extra] Pred 5:	b'SELECT cars_data.Horsepower FROM cars_data JOIN car_makers ON cars_data.Id = car_makers.Id WHERE cars_data.Cylinders = 3' (-5.879) (length=17)
[WRONG] [extra] Pred 6:	b'SELECT cars_data.Horsepower, MAX(cars_data.Cylinders) FROM cars_data WHERE cars_data.Cylinders = 3 GROUP BY cars_data.Horsepower' (-6.005) (length=16)
[WRONG] [extra] Pred 7:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 3' (-6.425) (length=17)
[WRONG] [extra] Pred 8:	b'SELECT MAX(cars_data.Horsepower), AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 3' (-6.495) (length=17)
Error Case 34

ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data VALUE max (cars_data.Horsepower) order by sum (cars_data.Horsepower) desc limit 1
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from model_list group by model_list.Model select model_list.Model order by limit (*) desc limit 1
Parsing error: from cars_data 1 max (cars_data.Horsepower) order by sum (cars_data.Horsepower) desc limit 1
Parsing error: from model_list group by model_list.Model select model_list.Model order by from cars_data desc desc limit 1
Parsing error: from cars_data VALUE max (cars_data.Horsepower) order by sum (cars_data.Cylinders) desc limit 1
Parsing error: from cars_data 1 max (cars_data.Horsepower) order by sum (cars_data.Cylinders) desc limit 1
Parsing error: from model_list group by model_list.Model select model_list.Model order by from model_list desc desc limit 1
Parsing error: from model_list group by model_list.Model select model_list.Model order by count (*) desc limit 1 , model_list.Model
Parsing error: from model_list group by model_list.Model select model_list.Model order by count (*) desc limit 1 asc limit 1
Parsing error: from model_list group by model_list.Model select model_list.Model order by count (*) desc limit 1 asc
Example 46
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which model saves the most gasoline? That is to say, have the maximum miles per gallon.'
NL tokens: [b'which', b'model', b'saves', b'the', b'most', b'gasoline', b'?', b'that', b'is', b'to', b'say', b',', b'have', b'the', b'maximum', b'miles', b'per', b'gallon', b'.']
NL tokens (original): [b'Which', b'model', b'saves', b'the', b'most', b'gasoline', b'?', b'That', b'is', b'to', b'say', b',', b'have', b'the', b'maximum', b'miles', b'per', b'gallon', b'.']
['[CLS]', 'which', 'model', 'saves', 'the', 'most', 'gasoline', '?', 'that', 'is', 'to', 'say', ',', 'have', 'the', 'maximum', 'miles', 'per', 'gallon', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id select car_names.Model order by cars_data.MPG desc limit 1

[WRONG] [hard] Pred 0:	b'SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(*) DESC LIMIT 1' (-1.131) (length=15)
[WRONG] [hard] Pred 1:	b'SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(*) DESC LIMIT 10' (-6.688) (length=15)
Error Case 35

ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
 50%|█████     | 6/12 [01:46<01:32, 15.35s/it]ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'model_list', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data where cars_data.MPG = (from cars_data select max (cars_data.MPG)) order by cars_data.MPG desc limit 1
Example 47
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the car model with the highest mpg ?'
NL tokens: [b'what', b'is', b'the', b'car', b'model', b'with', b'the', b'highest', b'mp', b'##g', b'?']
NL tokens (original): [b'What', b'is', b'the', b'car', b'model', b'with', b'the', b'highest', b'mp', b'##g', b'?']
['[CLS]', 'what', 'is', 'the', 'car', 'model', 'with', 'the', 'highest', 'mp', '##g', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id select car_names.Model order by cars_data.MPG desc limit 1

[WRONG] [hard] Pred 0:	b'SELECT cars_data.MPG FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1' (-2.897) (length=10)
[WRONG] [hard] Pred 1:	b'SELECT cars_data.Id FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1' (-3.025) (length=10)
[WRONG] [hard] Pred 2:	b'SELECT cars_data.Id FROM cars_data WHERE cars_data.MPG = (SELECT MAX(cars_data.MPG) FROM cars_data)' (-3.048) (length=17)
[WRONG] [hard] Pred 3:	b'SELECT cars_data.Id FROM cars_data WHERE cars_data.MPG = (SELECT MAX(cars_data.MPG) FROM cars_data) ORDER BY cars_data.MPG DESC LIMIT 1' (-3.255) (length=22)
[WRONG] [hard] Pred 4:	b'SELECT cars_data.MPG FROM cars_data WHERE cars_data.MPG = (SELECT MAX(cars_data.MPG) FROM cars_data) ORDER BY cars_data.MPG DESC LIMIT 1' (-3.340) (length=22)
[WRONG] [hard] Pred 5:	b'SELECT cars_data.Id FROM cars_data JOIN cars_data ON cars_data.Id = cars_data.Id WHERE cars_data.MPG = (SELECT MAX(cars_data.MPG) FROM cars_data) ORDER BY cars_data.MPG DESC LIMIT 1' (-3.432) (length=28)
[WRONG] [hard] Pred 6:	b'SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1' (-3.962) (length=10)
[WRONG] [hard] Pred 7:	b'SELECT MAX(cars_data.MPG) FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1' (-4.187) (length=13)
[WRONG] [hard] Pred 8:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.MPG = (SELECT MAX(cars_data.MPG) FROM cars_data)' (-4.253) (length=17)
Error Case 36

ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data select avg (cars_data.Edispl) ,
Parsing error: from cars_data select 10 (cars_data.Edispl)
Parsing error: from cars_data select 12 (cars_data.Edispl)
Parsing error: from cars_data select / (cars_data.Edispl)
Example 51
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the average edispl for all volvos?'
NL tokens: [b'what', b'is', b'the', b'average', b'ed', b'##is', b'##pl', b'for', b'all', b'volvo', b'##s', b'?']
NL tokens (original): [b'What', b'is', b'the', b'average', b'ed', b'##is', b'##pl', b'for', b'all', b'volvo', b'##s', b'?']
['[CLS]', 'what', 'is', 'the', 'average', 'ed', '##is', '##pl', 'for', 'all', 'volvo', '##s', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'volvo', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'volvo', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'volvo', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'"
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where car_names.Model = "volvo" select avg (cars_data.Edispl)

[WRONG] [medium] Pred 0:	b'SELECT AVG(cars_data.Edispl) FROM cars_data' (-0.000) (length=8)
[WRONG] [medium] Pred 1:	b'SELECT AVG(cars_data.Edispl) FROM cars_data' (-5.906) (length=13)
[WRONG] [medium] Pred 2:	b'SELECT AVG(cars_data.Edispl), MIN(cars_data.Edispl) FROM cars_data' (-6.019) (length=13)
[WRONG] [medium] Pred 3:	b'SELECT AVG(cars_data.Edispl) FROM cars_data INTERSECT SELECT AVG(cars_data.Edispl) FROM cars_data' (-6.197) (length=16)
[WRONG] [medium] Pred 4:	b'SELECT AVG(cars_data.Edispl), SUM(cars_data.Edispl) FROM cars_data' (-6.746) (length=13)
[WRONG] [medium] Pred 5:	b'SELECT AVG(cars_data.Edispl), cars_data.Id FROM cars_data' (-6.866) (length=10)
[WRONG] [medium] Pred 6:	b'SELECT AVG(cars_data.Edispl) FROM cars_data INTERSECT SELECT cars_data.Edispl FROM cars_data' (-6.945) (length=15)
 58%|█████▊    | 7/12 [01:48<00:58, 11.63s/it][WRONG] [medium] Pred 7:	b'SELECT AVG(cars_data.Edispl) FROM cars_data ORDER BY cars_data.Edispl' (-7.612) (length=10)
[WRONG] [medium] Pred 8:	b'SELECT AVG(cars_data.Edispl) FROM cars_data INTERSECT SELECT cars_data.Edispl FROM cars_data' (-7.772) (length=13)
[WRONG] [medium] Pred 9:	b'SELECT SUM(cars_data.Edispl) FROM cars_data' (-8.209) (length=8)
[WRONG] [medium] Pred 10:	b'SELECT AVG(cars_data.Edispl - cars_data.Year) FROM cars_data' (-8.408) (length=10)
[WRONG] [medium] Pred 11:	b'SELECT AVG(cars_data.Edispl - cars_data.Cylinders) FROM cars_data' (-8.541) (length=10)
Error Case 37

Example 60
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many car models were produced by the maker with full name American Motor Company?'
NL tokens: [b'how', b'many', b'car', b'models', b'were', b'produced', b'by', b'the', b'maker', b'with', b'full', b'name', b'american', b'motor', b'company', b'?']
NL tokens (original): [b'How', b'many', b'car', b'models', b'were', b'produced', b'by', b'the', b'maker', b'with', b'full', b'name', b'American', b'Motor', b'Company', b'?']
['[CLS]', 'how', 'many', 'car', 'models', 'were', 'produced', 'by', 'the', 'maker', 'with', 'full', 'name', 'american', 'motor', 'company', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused49]', 'america', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused49]', 'american', 'motor', 'company', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'"
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker where car_makers.FullName = "American Motor Company" select count (*)

[WRONG] [medium] Pred 0:	b'SELECT COUNT(*) FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "American Motor Company"' (-0.215) (length=22)
[CORRE] [medium] Pred 1:	b'SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = "American Motor Company"' (-0.449) (length=22)
Error Case 38

Example 62
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which makers designed more than 3 car models? List full name and the id.'
NL tokens: [b'which', b'makers', b'designed', b'more', b'than', b'3', b'car', b'models', b'?', b'list', b'full', b'name', b'and', b'the', b'id', b'.']
NL tokens (original): [b'Which', b'makers', b'designed', b'more', b'than', b'3', b'car', b'models', b'?', b'List', b'full', b'name', b'and', b'the', b'id', b'.']
['[CLS]', 'which', 'makers', 'designed', 'more', 'than', '3', 'car', 'models', '?', 'list', 'full', 'name', 'and', 'the', 'id', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) > 3 select car_makers.FullName , car_makers.Id

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-0.001) (length=24)
[WRONG] [medium] Pred 1:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.133) (length=22)
[WRONG] [medium] Pred 2:	b'SELECT car_makers.Maker, car_makers.FullName, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.345) (length=24)
[WRONG] [medium] Pred 3:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3 INTERSECT SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.525) (length=46)
[WRONG] [medium] Pred 4:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING COUNT(*) > 3' (-1.622) (length=24)
[WRONG] [medium] Pred 5:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.769) (length=24)
[WRONG] [medium] Pred 6:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3 INTERSECT SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.914) (length=44)
 67%|██████▋   | 8/12 [01:55<00:40, 10.24s/it][WRONG] [medium] Pred 7:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.136) (length=24)
[WRONG] [medium] Pred 8:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.374) (length=30)
[WRONG] [medium] Pred 9:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING COUNT(*) > 3' (-2.520) (length=24)
[WRONG] [medium] Pred 10:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.521) (length=26)
[WRONG] [medium] Pred 11:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3 INTERSECT SELECT car_makers.Maker, car_makers.FullName, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.525) (length=46)
[WRONG] [medium] Pred 12:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY model_list.Maker HAVING COUNT(*) > 3' (-2.574) (length=24)
[WRONG] [medium] Pred 13:	b'SELECT car_makers.Maker, car_makers.FullName, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.577) (length=24)
[WRONG] [medium] Pred 14:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING COUNT(*) > 3' (-2.593) (length=22)
[WRONG] [medium] Pred 15:	b'SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) < 3' (-2.976) (length=24)
Error Case 39

Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) > 3 select car_makers.Maker) select car_makers.Maker , car_makers.Id
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) having limit 3 select car_makers.Maker , car_makers.Id
Parsing error: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having having (model_list.Model) > 3 select car_makers.Maker , car_makers.Id
Example 63
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the names and ids of all makers with more than 3 models?'
NL tokens: [b'what', b'are', b'the', b'names', b'and', b'id', b'##s', b'of', b'all', b'makers', b'with', b'more', b'than', b'3', b'models', b'?']
NL tokens (original): [b'What', b'are', b'the', b'names', b'and', b'id', b'##s', b'of', b'all', b'makers', b'with', b'more', b'than', b'3', b'models', b'?']
['[CLS]', 'what', 'are', 'the', 'names', 'and', 'id', '##s', 'of', 'all', 'makers', 'with', 'more', 'than', '3', 'models', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) > 3 select car_makers.FullName , car_makers.Id

[WRONG] [medium] Pred 0:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-0.000) (length=22)
[WRONG] [medium] Pred 1:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING COUNT(*) > 3' (-1.879) (length=22)
[WRONG] [medium] Pred 2:	b'SELECT car_makers.Maker, car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY model_list.Maker HAVING COUNT(*) > 3' (-1.926) (length=22)
[WRONG] [medium] Pred 3:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.MakeId GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.958) (length=28)
[WRONG] [medium] Pred 4:	b'SELECT car_makers.Maker, car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-2.962) (length=22)
[WRONG] [medium] Pred 5:	b'SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-3.058) (length=22)
[WRONG] [medium] Pred 6:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-3.216) (length=22)
[WRONG] [medium] Pred 7:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) < 3' (-3.226) (length=22)
[WRONG] [medium] Pred 8:	b'SELECT car_makers.Maker, MIN(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-3.243) (length=25)
[WRONG] [medium] Pred 9:	b'SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Model HAVING COUNT(*) > 3' (-3.249) (length=22)
[WRONG] [medium] Pred 10:	b'SELECT car_makers.Maker, "min" AS car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-3.260) (length=23)
[WRONG] [medium] Pred 11:	b'SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-3.314) (length=20)
[CORRE] [medium] Pred 12:	b'SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-3.754) (length=22)
Error Case 40

ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_names.MakeId', 'car_names.Model']}}, {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_makers.Id']}}]
Example 64
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?'
NL tokens: [b'which', b'distinctive', b'models', b'are', b'produced', b'by', b'maker', b'with', b'the', b'full', b'name', b'general', b'motors', b'or', b'weighing', b'more', b'than', b'350', b'##0', b'?']
NL tokens (original): [b'Which', b'distinctive', b'models', b'are', b'produced', b'by', b'maker', b'with', b'the', b'full', b'name', b'General', b'Motors', b'or', b'weighing', b'more', b'than', b'350', b'##0', b'?']
['[CLS]', 'which', 'distinctive', 'models', 'are', 'produced', 'by', 'maker', 'with', 'the', 'full', 'name', 'general', 'motors', 'or', 'weighing', 'more', 'than', '350', '##0', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused49]', 'general', 'motors', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500"
Target TF-P tokens: from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id join cars_data on car_names.MakeId = cars_data.Id where car_makers.FullName = "General Motors" or cars_data.Weight > 3500 select distinct model_list.Model

[WRONG] [extra] Pred 0:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-1.281) (length=26)
[WRONG] [extra] Pred 1:	b'SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.171) (length=26)
[WRONG] [extra] Pred 2:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "full General Motors" OR car_makers.FullName = 3500' (-2.437) (length=27)
[WRONG] [extra] Pred 3:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.441) (length=32)
[WRONG] [extra] Pred 4:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.515) (length=32)
[WRONG] [extra] Pred 5:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.561) (length=26)
[WRONG] [extra] Pred 6:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.616) (length=32)
[WRONG] [extra] Pred 7:	b'SELECT DISTINCT model_list.Model, model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.238) (length=28)
[WRONG] [extra] Pred 8:	b'SELECT DISTINCT car_names.Model FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model JOIN car_makers ON car_makers.Id = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.424) (length=32)
[WRONG] [extra] Pred 9:	b'SELECT DISTINCT car_names.Model FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.647) (length=32)
[WRONG] [extra] Pred 10:	b'SELECT DISTINCT car_names.Make FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model JOIN car_makers ON car_makers.Id = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.665) (length=32)
[WRONG] [extra] Pred 11:	b'SELECT DISTINCT car_names.Model FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model JOIN car_makers ON car_makers.Id = car_makers.Country WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.738) (length=32)
[WRONG] [extra] Pred 12:	b'SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.834) (length=32)
[WRONG] [extra] Pred 13:	b'SELECT DISTINCT car_names.Make FROM car_makers JOIN car_names ON car_makers.Id = car_names.Model JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.890) (length=32)
[WRONG] [extra] Pred 14:	b'SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-4.891) (length=32)
Error Case 41

ERROR: Join condition does not match with table: ['model_list', {'join': 'car_names', 'on': {'eq': ['car_names.MakeId', 'car_names.MakeId']}}, {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
Parsing error: from model_list join cars_data on model_list.Model = cars_data.Id join car_makers on model_list.Maker = car_makers.Id where car_makers.FullName = "General Motors" or cars_data.Weight > 350 3500 select distinct model_list.Model
ERROR: Join condition does not match with table: ['model_list', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}, {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'car_names', 'on': {'eq': ['car_names.Model', 'car_names.MakeId']}}, {'join': 'car_makers', 'on': {'eq': ['car_makers.Id', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'car_names', 'on': {'eq': ['model_list.Model', 'car_names.MakeId']}}, {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_names.MakeId']}}]
Example 65
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the different models created by either the car maker General Motors or weighed more than 3500?'
NL tokens: [b'what', b'are', b'the', b'different', b'models', b'created', b'by', b'either', b'the', b'car', b'maker', b'general', b'motors', b'or', b'weighed', b'more', b'than', b'350', b'##0', b'?']
NL tokens (original): [b'What', b'are', b'the', b'different', b'models', b'created', b'by', b'either', b'the', b'car', b'maker', b'General', b'Motors', b'or', b'weighed', b'more', b'than', b'350', b'##0', b'?']
['[CLS]', 'what', 'are', 'the', 'different', 'models', 'created', 'by', 'either', 'the', 'car', 'maker', 'general', 'motors', 'or', 'weighed', 'more', 'than', '350', '##0', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused49]', 'general', 'motors', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500"
Target TF-P tokens: from car_names join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id join cars_data on car_names.MakeId = cars_data.Id where car_makers.FullName = "General Motors" or cars_data.Weight > 3500 select distinct model_list.Model

[WRONG] [extra] Pred 0:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data ON model_list.Model = cars_data.Id JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR cars_data.Weight > 3500' (-1.562) (length=30)
[WRONG] [extra] Pred 1:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.153) (length=26)
[WRONG] [extra] Pred 2:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.704) (length=32)
[WRONG] [extra] Pred 3:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-2.805) (length=32)
[WRONG] [extra] Pred 4:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.080) (length=32)
[WRONG] [extra] Pred 5:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.MakeId JOIN car_makers ON car_makers.Id = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.111) (length=32)
[WRONG] [extra] Pred 6:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Maker = car_names.MakeId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.194) (length=32)
[WRONG] [extra] Pred 7:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Maker = car_names.MakeId JOIN car_makers ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.486) (length=32)
[WRONG] [extra] Pred 8:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Maker = car_names.MakeId JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.549) (length=32)
[WRONG] [extra] Pred 9:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN car_makers ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.565) (length=32)
[WRONG] [extra] Pred 10:	b'SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data ON model_list.Model = cars_data.Id JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName = 3500' (-3.613) (length=32)
Error Case 42

Example 66
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'In which years cars were produced weighing no less than 3000 and no more than 4000 ?'
NL tokens: [b'in', b'which', b'years', b'cars', b'were', b'produced', b'weighing', b'no', b'less', b'than', b'3000', b'and', b'no', b'more', b'than', b'4000', b'?']
NL tokens (original): [b'In', b'which', b'years', b'cars', b'were', b'produced', b'weighing', b'no', b'less', b'than', b'3000', b'and', b'no', b'more', b'than', b'4000', b'?']
['[CLS]', 'in', 'which', 'years', 'cars', 'were', 'produced', 'weighing', 'no', 'less', 'than', '3000', 'and', 'no', 'more', 'than', '4000', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select distinct year from cars_data where weight between 3000 and 4000'
Target TF-P tokens: from cars_data where cars_data.Weight between 3000 and 4000 select distinct cars_data.Year

[WRONG] [easy] Pred 0:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Weight < 4000' (-0.065) (length=14)
[WRONG] [easy] Pred 1:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Weight <= 4000' (-0.517) (length=14)
[WRONG] [easy] Pred 2:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000' (-1.295) (length=20)
[WRONG] [easy] Pred 3:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000' (-1.559) (length=19)
[WRONG] [easy] Pred 4:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000' (-1.742) (length=10)
[WRONG] [easy] Pred 5:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Horsepower <= 4000' (-1.930) (length=14)
[WRONG] [easy] Pred 6:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Horsepower < 4000' (-1.945) (length=14)
[WRONG] [easy] Pred 7:	b'SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000' (-2.206) (length=18)
[WRONG] [easy] Pred 8:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Horsepower != 4000' (-2.319) (length=14)
[WRONG] [easy] Pred 9:	b'SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000' (-2.321) (length=19)
[CORRE] [easy] Pred 10:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN 3000 AND 4000' (-2.520) (length=12)
Error Case 43

ERROR: table "cars_data" in field expression cars_data.Weight is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Horsepower is not in the current scope
Parsing error: from cars_data where cars_data.Weight intersect 4000 select distinct cars_data.Year intersect from cars_data where cars_data.Weight > 3000 select distinct cars_data.Year
Parsing error: from cars_data where cars_data.Weight between 4000 select distinct cars_data.Year intersect from cars_data where cars_data.Weight > 3000 select distinct cars_data.Year
Example 67
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?'
NL tokens: [b'what', b'are', b'the', b'different', b'years', b'in', b'which', b'there', b'were', b'cars', b'produced', b'that', b'weighed', b'less', b'than', b'4000', b'and', b'also', b'cars', b'that', b'weighted', b'more', b'than', b'3000', b'?']
NL tokens (original): [b'What', b'are', b'the', b'different', b'years', b'in', b'which', b'there', b'were', b'cars', b'produced', b'that', b'weighed', b'less', b'than', b'4000', b'and', b'also', b'cars', b'that', b'weighted', b'more', b'than', b'3000', b'?']
['[CLS]', 'what', 'are', 'the', 'different', 'years', 'in', 'which', 'there', 'were', 'cars', 'produced', 'that', 'weighed', 'less', 'than', '4000', 'and', 'also', 'cars', 'that', 'weighted', 'more', 'than', '3000', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select distinct year from cars_data where weight between 3000 and 4000'
Target TF-P tokens: from cars_data where cars_data.Weight between 3000 and 4000 select distinct cars_data.Year

[WRONG] [easy] Pred 0:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000' (-0.001) (length=20)
[WRONG] [easy] Pred 1:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Horsepower > 3000' (-1.236) (length=20)
[WRONG] [easy] Pred 2:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 4000' (-2.279) (length=20)
[WRONG] [easy] Pred 3:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 4000' (-2.617) (length=20)
[WRONG] [easy] Pred 4:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000' (-2.755) (length=20)
[WRONG] [easy] Pred 5:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 4000' (-2.932) (length=30)
[WRONG] [easy] Pred 6:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Horsepower > 3000' (-3.088) (length=30)
[WRONG] [easy] Pred 7:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 EXCEPT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000' (-3.233) (length=20)
[WRONG] [easy] Pred 8:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Horsepower > 3000' (-3.280) (length=20)
[WRONG] [easy] Pred 9:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000' (-3.508) (length=20)
[WRONG] [easy] Pred 10:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Edispl > 3000' (-3.531) (length=20)
[WRONG] [easy] Pred 11:	b'SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year, cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000' (-3.548) (length=22)
Error Case 44

ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_names', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['model_list.ModelId', 'model_list.ModelId']}}]
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
Example 70
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'For model volvo, how many cylinders does the car with the least accelerate have?'
NL tokens: [b'for', b'model', b'volvo', b',', b'how', b'many', b'cylinders', b'does', b'the', b'car', b'with', b'the', b'least', b'accelerate', b'have', b'?']
NL tokens (original): [b'For', b'model', b'volvo', b',', b'how', b'many', b'cylinders', b'does', b'the', b'car', b'with', b'the', b'least', b'accelerate', b'have', b'?']
['[CLS]', 'for', 'model', 'volvo', ',', 'how', 'many', 'cylinders', 'does', 'the', 'car', 'with', 'the', 'least', 'accelerate', 'have', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'volvo', '[unused51]', 'full', 'name', '[unused49]', 'volvo', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'volvo', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'volvo', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1"
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where car_names.Model = "volvo" select cars_data.Cylinders order by cars_data.Accelerate asc limit 1

[WRONG] extra Pred 0:	No valid output! (0.000)
Error Case 45

ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['model_list', {'join': 'cars_data', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Parsing error: from cars_data where cars_data.Accelerate = (from cars_data y "select min (cars_data.Accelerate)) select sum (cars_data.Cylinders)"
ERROR: table "cars_data" in field expression cars_data.Accelerate is not in the current scope
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['cars_data.Id', 'cars_data.Id']}}]
Example 71
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'For a volvo model, how many cylinders does the version with least accelerate have?'
 75%|███████▌  | 9/12 [02:29<00:52, 17.36s/it]NL tokens: [b'for', b'a', b'volvo', b'model', b',', b'how', b'many', b'cylinders', b'does', b'the', b'version', b'with', b'least', b'accelerate', b'have', b'?']
NL tokens (original): [b'For', b'a', b'volvo', b'model', b',', b'how', b'many', b'cylinders', b'does', b'the', b'version', b'with', b'least', b'accelerate', b'have', b'?']
['[CLS]', 'for', 'a', 'volvo', 'model', ',', 'how', 'many', 'cylinders', 'does', 'the', 'version', 'with', 'least', 'accelerate', 'have', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'volvo', '[unused51]', 'full', 'name', '[unused49]', 'volvo', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'volvo', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'volvo', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1"
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where car_names.Model = "volvo" select cars_data.Cylinders order by cars_data.Accelerate asc limit 1

[WRONG] [extra] Pred 0:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data)' (-1.519) (length=17)
[WRONG] [extra] Pred 1:	b'SELECT SUM(cars_data.Cylinders) FROM cars_data WHERE cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data)' (-2.314) (length=20)
[WRONG] [extra] Pred 2:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data) ORDER BY cars_data.Cylinders LIMIT 1' (-2.355) (length=21)
[WRONG] [extra] Pred 3:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data) ORDER BY cars_data.Accelerate LIMIT 1' (-2.561) (length=21)
[WRONG] [extra] Pred 4:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data JOIN car_makers ON cars_data.Id = car_makers.Id WHERE car_makers.FullName = "volvo")' (-2.930) (length=29)
Error Case 46

Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) order by count (*) desc limit 1
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) select count (*) : cars_data.Horsepower desc limit 1
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max max cars_data.Accelerate)) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select desc (cars_data.Accelerate)) select count (*)
Parsing error: from cars_data having where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) select count (*) : cars_data.Horsepower
Example 72
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many cars have a larger accelerate than the car with the largest horsepower?'
NL tokens: [b'how', b'many', b'cars', b'have', b'a', b'larger', b'accelerate', b'than', b'the', b'car', b'with', b'the', b'largest', b'horsepower', b'?']
NL tokens (original): [b'How', b'many', b'cars', b'have', b'a', b'larger', b'accelerate', b'than', b'the', b'car', b'with', b'the', b'largest', b'horsepower', b'?']
['[CLS]', 'how', 'many', 'cars', 'have', 'a', 'larger', 'accelerate', 'than', 'the', 'car', 'with', 'the', 'largest', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 )'
Target TF-P tokens: from cars_data where cars_data.Accelerate > (from cars_data select cars_data.Accelerate order by cars_data.Horsepower desc limit 1) select count (*)

[WRONG] [hard] Pred 0:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-0.000) (length=20)
[WRONG] [hard] Pred 1:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) AND cars_data.Horsepower = (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-2.745) (length=32)
[WRONG] [hard] Pred 2:	b'SELECT COUNT(*) FROM cars_data JOIN cars_data ON cars_data.Id = cars_data.Id WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-2.765) (length=26)
[WRONG] [hard] Pred 3:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) AND cars_data.Horsepower = (SELECT MAX(cars_data.Horsepower) FROM cars_data)' (-2.843) (length=32)
[WRONG] [hard] Pred 4:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Horsepower) FROM cars_data)' (-3.021) (length=20)
[WRONG] [hard] Pred 5:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) ORDER BY cars_data.Accelerate DESC LIMIT 1' (-3.205) (length=25)
[WRONG] [hard] Pred 6:	b'SELECT COUNT(*), cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-3.432) (length=22)
[WRONG] [hard] Pred 7:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) LIMIT 1' (-3.672) (length=22)
[WRONG] [hard] Pred 8:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MIN(cars_data.Accelerate) FROM cars_data)' (-3.735) (length=20)
[WRONG] [hard] Pred 9:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate < (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-3.954) (length=20)
Error Case 47

Parsing error: from cars_data where cars_data.Accelerate > (from cars_data on cars_data.Id = cars_data.Id where cars_data.Horsepower = (from cars_data select max (cars_data.Horsepower)) select cars_data.Id) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data on cars_data.Id = cars_data.Id where cars_data.Horsepower = (from cars_data select max (cars_data.Accelerate)) select cars_data.Id) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max max cars_data.Accelerate)) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) select count (*) desc limit 1
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select desc (cars_data.Accelerate)) select count (*)
Parsing error: from cars_data having where cars_data.Accelerate > (from cars_data select max (cars_data.Accelerate)) select count (*)
Parsing error: from cars_data where cars_data.Accelerate > (from cars_data select order by max (cars_data.Accelerate)) select count (*)
Example 73
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the number of cars with a greater accelerate than the one with the most horsepower?'
NL tokens: [b'what', b'is', b'the', b'number', b'of', b'cars', b'with', b'a', b'greater', b'accelerate', b'than', b'the', b'one', b'with', b'the', b'most', b'horsepower', b'?']
NL tokens (original): [b'What', b'is', b'the', b'number', b'of', b'cars', b'with', b'a', b'greater', b'accelerate', b'than', b'the', b'one', b'with', b'the', b'most', b'horsepower', b'?']
['[CLS]', 'what', 'is', 'the', 'number', 'of', 'cars', 'with', 'a', 'greater', 'accelerate', 'than', 'the', 'one', 'with', 'the', 'most', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 )'
Target TF-P tokens: from cars_data where cars_data.Accelerate > (from cars_data select cars_data.Accelerate order by cars_data.Horsepower desc limit 1) select count (*)

[WRONG] [hard] Pred 0:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-0.000) (length=20)
[WRONG] [hard] Pred 1:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) AND cars_data.Horsepower = (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-2.590) (length=32)
[WRONG] [hard] Pred 2:	b'SELECT COUNT(*) FROM cars_data JOIN cars_data ON cars_data.Id = cars_data.Id WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-2.737) (length=26)
[WRONG] [hard] Pred 3:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) AND cars_data.Horsepower = (SELECT MAX(cars_data.Horsepower) FROM cars_data)' (-2.892) (length=32)
[WRONG] [hard] Pred 4:	b'SELECT COUNT(*), cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)' (-3.331) (length=22)
[WRONG] [hard] Pred 5:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data) ORDER BY cars_data.Accelerate DESC LIMIT 1' (-3.376) (length=25)
[WRONG] [hard] Pred 6:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data GROUP BY cars_data.Id)' (-3.693) (length=22)
[WRONG] [hard] Pred 7:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Horsepower) FROM cars_data)' (-3.735) (length=20)
[WRONG] [hard] Pred 8:	b'SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MIN(cars_data.Accelerate) FROM cars_data)' (-3.915) (length=20)
Error Case 48

Parsing error: from (from car_makers join countries on car_makers.Country = countries.CountryId group by countries.CountryId having count (*) > 2 select countries.CountryName
unhashable type: 'dict'
unhashable type: 'dict'
Parsing error: from (from car_makers join car_makers on car_makers.Id = car_makers.Id join countries on car_makers.Country = countries.CountryId group by countries.CountryId having count (*) > 2 select countries.CountryName
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
unhashable type: 'dict'
Example 74
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'How many countries has more than 2 car makers ?'
NL tokens: [b'how', b'many', b'countries', b'has', b'more', b'than', b'2', b'car', b'makers', b'?']
NL tokens (original): [b'How', b'many', b'countries', b'has', b'more', b'than', b'2', b'car', b'makers', b'?']
['[CLS]', 'how', 'many', 'countries', 'has', 'more', 'than', '2', 'car', 'makers', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2'
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) > 2 select count (*)

[WRONG] [medium] Pred 0:	b'SELECT COUNT(*) FROM (SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-0.387) (length=28)
[WRONG] [medium] Pred 1:	b'SELECT COUNT(*) FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > 2)' (-0.573) (length=22)
[WRONG] [medium] Pred 2:	b'SELECT COUNT(*) FROM (SELECT countries.CountryId FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.111) (length=28)
[WRONG] [medium] Pred 3:	b'SELECT COUNT(*) FROM (SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.228) (length=28)
[WRONG] [medium] Pred 4:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2' (-1.580) (length=20)
[WRONG] [medium] Pred 5:	b'SELECT COUNT(*) FROM (SELECT countries.CountryName FROM car_makers JOIN car_makers ON car_makers.Id = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.628) (length=34)
[WRONG] [medium] Pred 6:	b'SELECT COUNT(*) FROM (SELECT countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.674) (length=28)
[WRONG] [medium] Pred 7:	b'SELECT COUNT(*) FROM (SELECT car_makers.Country FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-2.228) (length=28)
[WRONG] [medium] Pred 8:	b'SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2' (-2.417) (length=25)
[WRONG] [medium] Pred 9:	b'SELECT countries.CountryName FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2' (-2.480) (length=20)
Error Case 49

ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_makers', 'on': {'eq': ['countries.CountryId', 'countries.Continent']}}]
unhashable type: 'dict'
ERROR: Join condition does not match with table: ['car_makers', {'join': 'countries', 'on': {'eq': ['countries.Continent', 'countries.CountryId']}}]
unhashable type: 'dict'
Parsing error: from (from car_makers (car_makers.Country) > 2 select car_makers.Country) select count (*)
Parsing error: from (from car_makers group by car_makers.Country having count (*) > 2 select car_makers.Country select count (*)
ERROR: table "countries" in field expression countries.CountryId is not in the current scope
Example 75
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the number of countries with more than 2 car makers ?'
NL tokens: [b'what', b'is', b'the', b'number', b'of', b'countries', b'with', b'more', b'than', b'2', b'car', b'makers', b'?']
NL tokens (original): [b'What', b'is', b'the', b'number', b'of', b'countries', b'with', b'more', b'than', b'2', b'car', b'makers', b'?']
['[CLS]', 'what', 'is', 'the', 'number', 'of', 'countries', 'with', 'more', 'than', '2', 'car', 'makers', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2'
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) > 2 select count (*)

[WRONG] [medium] Pred 0:	b'SELECT COUNT(*) FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > 2)' (-0.396) (length=22)
[WRONG] [medium] Pred 1:	b'SELECT COUNT(*) FROM (SELECT countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.049) (length=28)
[WRONG] [medium] Pred 2:	b'SELECT COUNT(*) FROM (SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.526) (length=28)
[WRONG] [medium] Pred 3:	b'SELECT COUNT(*) FROM (SELECT countries.CountryId FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.561) (length=28)
[WRONG] [medium] Pred 4:	b'SELECT COUNT(*) FROM (SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-1.873) (length=28)
[WRONG] [medium] Pred 5:	b'SELECT COUNT(*) FROM (SELECT countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-2.689) (length=28)
[WRONG] [medium] Pred 6:	b'SELECT COUNT(*) FROM (SELECT car_makers.Country FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 2)' (-2.763) (length=28)
[WRONG] [medium] Pred 7:	b'SELECT COUNT(*) FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) >= 2)' (-3.060) (length=22)
Error Case 50

Parsing error: from cars_data where cars_data.Cylinders = 4 order by cars_data.Horsepower desc limit 1
Parsing error: from cars_data where cars_data.Cylinders = 4 select ? order by cars_data.Horsepower desc limit 1
Example 78
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'For the cars with 4 cylinders, which model has the largest horsepower?'
NL tokens: [b'for', b'the', b'cars', b'with', b'4', b'cylinders', b',', b'which', b'model', b'has', b'the', b'largest', b'horsepower', b'?']
NL tokens (original): [b'For', b'the', b'cars', b'with', b'4', b'cylinders', b',', b'which', b'model', b'has', b'the', b'largest', b'horsepower', b'?']
['[CLS]', 'for', 'the', 'cars', 'with', '4', 'cylinders', ',', 'which', 'model', 'has', 'the', 'largest', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Cylinders = 4 select car_names.Model order by cars_data.Horsepower desc limit 1

[WRONG] [extra] Pred 0:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-0.683) (length=14)
[WRONG] [extra] Pred 1:	b'SELECT cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.178) (length=14)
[WRONG] [extra] Pred 2:	b'SELECT cars_data.Accelerate FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.333) (length=14)
[WRONG] [extra] Pred 3:	b'SELECT * FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.452) (length=14)
[WRONG] [extra] Pred 4:	b'SELECT "the" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.783) (length=14)
[WRONG] [extra] Pred 5:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.812) (length=14)
[WRONG] [extra] Pred 6:	b'SELECT "largest" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.834) (length=14)
[WRONG] [extra] Pred 7:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4' (-3.892) (length=12)
[WRONG] [extra] Pred 8:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-3.970) (length=14)
[WRONG] [extra] Pred 9:	b'SELECT cars_data.Year FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-4.087) (length=14)
[WRONG] [extra] Pred 10:	b'SELECT "has" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-4.192) (length=14)
[WRONG] [extra] Pred 11:	b'SELECT cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Horsepower = (SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4)' (-4.243) (length=25)
[WRONG] [extra] Pred 12:	b'SELECT horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-4.279) (length=14)
[WRONG] [extra] Pred 13:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 AND cars_data.Horsepower = (SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4)' (-4.296) (length=25)
Error Case 51

Example 79
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'For all of the 4 cylinder cars, which model has the most horsepower?'
NL tokens: [b'for', b'all', b'of', b'the', b'4', b'cylinder', b'cars', b',', b'which', b'model', b'has', b'the', b'most', b'horsepower', b'?']
NL tokens (original): [b'For', b'all', b'of', b'the', b'4', b'cylinder', b'cars', b',', b'which', b'model', b'has', b'the', b'most', b'horsepower', b'?']
['[CLS]', 'for', 'all', 'of', 'the', '4', 'cylinder', 'cars', ',', 'which', 'model', 'has', 'the', 'most', 'horsepower', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1'
Target TF-P tokens: from car_names join cars_data on car_names.MakeId = cars_data.Id where cars_data.Cylinders = 4 select car_names.Model order by cars_data.Horsepower desc limit 1

 83%|████████▎ | 10/12 [02:47<00:35, 17.50s/it][WRONG] [extra] Pred 0:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-0.143) (length=14)
[WRONG] [extra] Pred 1:	b'SELECT * FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-1.591) (length=14)
[WRONG] [extra] Pred 2:	b'SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-1.719) (length=14)
[WRONG] [extra] Pred 3:	b'SELECT cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-1.990) (length=14)
[WRONG] [extra] Pred 4:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT "most"' (-2.133) (length=14)
[WRONG] [extra] Pred 5:	b'SELECT cars_data.Accelerate FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.318) (length=14)
[WRONG] [extra] Pred 6:	b'SELECT "the" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.334) (length=14)
[WRONG] [extra] Pred 7:	b'SELECT cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.483) (length=14)
[WRONG] [extra] Pred 8:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT "the"' (-2.508) (length=14)
[WRONG] [extra] Pred 9:	b'SELECT "most" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.607) (length=14)
[WRONG] [extra] Pred 10:	b'SELECT "has" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.667) (length=14)
[WRONG] [extra] Pred 11:	b'SELECT cars_data.Year FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.681) (length=14)
[WRONG] [extra] Pred 12:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 3' (-2.682) (length=14)
[WRONG] [extra] Pred 13:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 4' (-2.829) (length=14)
[WRONG] [extra] Pred 14:	b'SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Horsepower = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.855) (length=14)
[WRONG] [extra] Pred 15:	b'SELECT "which" FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1' (-2.856) (length=14)
Error Case 52

ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}, {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}, {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}, {'join': 'cars_data', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
Example 80
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.'
NL tokens: [b'among', b'the', b'cars', b'with', b'more', b'than', b'lowest', b'horsepower', b',', b'which', b'ones', b'do', b'not', b'have', b'more', b'than', b'3', b'cylinders', b'?', b'list', b'the', b'car', b'make', b'##id', b'and', b'make', b'name', b'.']
NL tokens (original): [b'Among', b'the', b'cars', b'with', b'more', b'than', b'lowest', b'horsepower', b',', b'which', b'ones', b'do', b'not', b'have', b'more', b'than', b'3', b'cylinders', b'?', b'List', b'the', b'car', b'make', b'##id', b'and', b'make', b'name', b'.']
['[CLS]', 'among', 'the', 'cars', 'with', 'more', 'than', 'lowest', 'horsepower', ',', 'which', 'ones', 'do', 'not', 'have', 'more', 'than', '3', 'cylinders', '?', 'list', 'the', 'car', 'make', '##id', 'and', 'make', 'name', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3'
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where cars_data.Horsepower > (from cars_data select min (cars_data.Horsepower)) and cars_data.Cylinders <= 3 select car_names.MakeId , car_names.Make

[WRONG] [extra] Pred 0:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Horsepower > 3' (-3.368) (length=23)
[WRONG] [extra] Pred 1:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Horsepower > 3' (-3.728) (length=23)
[WRONG] [extra] Pred 2:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Cylinders > 3' (-3.949) (length=23)
[WRONG] [extra] Pred 3:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Cylinders > 3' (-4.122) (length=23)
[WRONG] [extra] Pred 4:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Horsepower > 3 AND cars_data.Cylinders > 3' (-4.332) (length=27)
[WRONG] [extra] Pred 5:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Horsepower > 3 AND cars_data.Cylinders > 3' (-4.649) (length=27)
[WRONG] [extra] Pred 6:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Accelerate WHERE cars_data.Horsepower > 3' (-4.686) (length=23)
[WRONG] [extra] Pred 7:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Horsepower > 3 AND cars_data.Cylinders < 3' (-4.738) (length=27)
[WRONG] [extra] Pred 8:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Cylinders > 3 AND cars_data.Cylinders > 3' (-4.839) (length=27)
[WRONG] [extra] Pred 9:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Cylinders > 3 AND cars_data.Cylinders > 3' (-4.996) (length=27)
[WRONG] [extra] Pred 10:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Horsepower > 3 GROUP BY car_names.MakeId' (-5.027) (length=25)
[WRONG] [extra] Pred 11:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Horsepower > 3 GROUP BY car_names.MakeId' (-5.407) (length=25)
[WRONG] [extra] Pred 12:	b'SELECT car_makers.Maker, car_names.Make FROM car_names JOIN car_makers ON car_names.Model = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Horsepower > 3 ORDER BY cars_data.Horsepower' (-5.490) (length=25)
Error Case 53

Parsing error: from car_names join car_makers on car_names.MakeId = car_makers.Id no < 4 select car_names.Make , car_makers.FullName except from cars_data join car_makers on car_names.Model = car_makers.Id where cars_data.Horsepower < 4 select car_names.Make , car_makers.FullName
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
Parsing error: from car_names join car_makers on car_names.MakeId = car_makers.Id no < 4 select car_names.Make , car_makers.FullName except from cars_data join car_makers on cars_data.Id = car_makers.Id where cars_data.Horsepower < 4 select car_names.Make , car_makers.FullName
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.MakeId', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.MakeId', 'car_makers.Id']}}]
Parsing error: from car_names join car_makers on car_names.MakeId = car_makers.Id no < 4 select car_names.Make , car_makers.FullName except from cars_data join car_makers on car_names.Model = car_makers.Id where cars_data.Horsepower < 4 select car_names.MakeId , car_makers.FullName
ERROR: table "car_names" in field expression car_names.Make is not in the current scope
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.MakeId', 'cars_data.Id']}}]
Parsing error: from car_names join car_makers on car_names.MakeId = car_makers.Id no < 4 select car_names.Make , car_makers.FullName except from cars_data join car_makers on car_names.Model = car_makers.Id where cars_data.Cylinders < 4 select car_names.Make , car_makers.FullName
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.MakeId', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['cars_data', {'join': 'car_makers', 'on': {'eq': ['car_names.Model', 'car_makers.Id']}}]
ERROR: table "car_names" in field expression car_names.Make is not in the current scope
ERROR: table "car_names" in field expression car_names.MakeId is not in the current scope
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['car_names.MakeId', 'car_names.MakeId']}}]
Example 81
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?'
NL tokens: [b'among', b'the', b'cars', b'that', b'do', b'not', b'have', b'the', b'minimum', b'horsepower', b',', b'what', b'are', b'the', b'make', b'id', b'##s', b'and', b'names', b'of', b'all', b'those', b'with', b'less', b'than', b'4', b'cylinders', b'?']
NL tokens (original): [b'Among', b'the', b'cars', b'that', b'do', b'not', b'have', b'the', b'minimum', b'horsepower', b',', b'what', b'are', b'the', b'make', b'id', b'##s', b'and', b'names', b'of', b'all', b'those', b'with', b'less', b'than', b'4', b'cylinders', b'?']
['[CLS]', 'among', 'the', 'cars', 'that', 'do', 'not', 'have', 'the', 'minimum', 'horsepower', ',', 'what', 'are', 'the', 'make', 'id', '##s', 'and', 'names', 'of', 'all', 'those', 'with', 'less', 'than', '4', 'cylinders', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4'
Target TF-P tokens: from cars_data join car_names on cars_data.Id = car_names.MakeId where cars_data.Horsepower > (from cars_data select min (cars_data.Horsepower)) and cars_data.Cylinders < 4 select car_names.MakeId , car_names.Make

[WRONG] extra Pred 0:	No valid output! (0.000)
Error Case 54

Parsing error: from cars_data where cars_data.Cylinders = 8 select max or cars_data.Year) > 1980 select max (cars_data.Horsepower)
Example 82
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?'
NL tokens: [b'what', b'is', b'the', b'maximum', b'miles', b'per', b'gallon', b'of', b'the', b'car', b'with', b'8', b'cylinders', b'or', b'produced', b'before', b'1980', b'?']
NL tokens (original): [b'What', b'is', b'the', b'maximum', b'miles', b'per', b'gallon', b'of', b'the', b'car', b'with', b'8', b'cylinders', b'or', b'produced', b'before', b'1980', b'?']
['[CLS]', 'what', 'is', 'the', 'maximum', 'miles', 'per', 'gallon', 'of', 'the', 'car', 'with', '8', 'cylinders', 'or', 'produced', 'before', '1980', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select max(mpg) from cars_data where cylinders  =  8 or year  <  1980'
Target TF-P tokens: from cars_data where cars_data.Cylinders = 8 or cars_data.Year < 1980 select max (cars_data.MPG)

[WRONG] [medium] Pred 0:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-0.000) (length=16)
[WRONG] [medium] Pred 1:	b'SELECT MAX(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-1.810) (length=16)
[WRONG] [medium] Pred 2:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Year < 1980' (-2.606) (length=16)
[WRONG] [medium] Pred 3:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders >= 8 OR cars_data.Year < 1980' (-2.734) (length=16)
[WRONG] [medium] Pred 4:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data JOIN cars_data ON cars_data.Id = cars_data.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-2.887) (length=22)
[WRONG] [medium] Pred 5:	b'SELECT MAX(cars_data.Edispl) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-3.367) (length=16)
[WRONG] [medium] Pred 6:	b'SELECT MAX(cars_data.Horsepower), cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-3.583) (length=18)
[WRONG] [medium] Pred 7:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8' (-3.640) (length=12)
[WRONG] [medium] Pred 8:	b'SELECT MAX(cars_data.Accelerate) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-3.649) (length=16)
[WRONG] [medium] Pred 9:	b'SELECT MAX(*) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-3.705) (length=16)
[WRONG] [medium] Pred 10:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Cylinders < 1980' (-3.713) (length=16)
[WRONG] [medium] Pred 11:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980' (-3.949) (length=16)
[WRONG] [medium] Pred 12:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980' (-4.092) (length=16)
[WRONG] [medium] Pred 13:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders > 8 OR cars_data.Year < 1980' (-4.148) (length=16)
[WRONG] [medium] Pred 14:	b'SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = MOD(8, cars_data.Year) < 1980' (-4.226) (length=16)
Error Case 55

ERROR: table "model_list" in field expression model_list.Model is not in the current scope
ERROR: table "car_makers" in field expression car_makers.FullName is not in the current scope
ERROR: table "car_makers" in field expression car_makers.Maker is not in the current scope
Parsing error: from model_list where model_list.Model in (from model_list join car_makers on model_list.Maker = car_makers.Id where car_makers.FullName = "Ford Motor Company" select model_list.Model) select model_list.Model except from model_list join car_makers on model_list.Maker = car_makers.Id where car_makers.FullName = "Ford Motor Company" select model_list.Model) select model_list.Model
Example 84
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b"Which models are lighter than 3500 but not built by the 'Ford Motor Company'?"
NL tokens: [b'which', b'models', b'are', b'lighter', b'than', b'350', b'##0', b'but', b'not', b'built', b'by', b'the', b"'", b'ford', b'motor', b'company', b"'", b'?']
NL tokens (original): [b'Which', b'models', b'are', b'lighter', b'than', b'350', b'##0', b'but', b'not', b'built', b'by', b'the', b"'", b'Ford', b'Motor', b'Company', b"'", b'?']
['[CLS]', 'which', 'models', 'are', 'lighter', 'than', '350', '##0', 'but', 'not', 'built', 'by', 'the', "'", 'ford', 'motor', 'company', "'", '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'ford', '[unused51]', 'full', 'name', '[unused49]', 'ford', 'motor', 'company', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'ford', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'ford', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'"
Target TF-P tokens: from model_list join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id join car_makers on model_list.Maker = car_makers.Id where cars_data.Weight < 3500 and car_makers.FullName != "Ford Motor Company" select distinct model_list.Model

[WRONG] [extra] Pred 0:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.448) (length=38)
[WRONG] [extra] Pred 1:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.Maker = "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.541) (length=38)
[WRONG] [extra] Pred 2:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName != "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.595) (length=38)
[WRONG] [extra] Pred 3:	b'SELECT model_list.Model FROM model_list WHERE model_list.Model IN (SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company") EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.606) (length=47)
[WRONG] [extra] Pred 4:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName < "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.650) (length=38)
[WRONG] [extra] Pred 5:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.Maker != "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.716) (length=38)
[WRONG] [extra] Pred 6:	b'SELECT model_list.Model FROM model_list WHERE model_list.Model IN (SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company")' (-0.731) (length=47)
[WRONG] [extra] Pred 7:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.Maker < "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company"' (-0.872) (length=38)
[WRONG] [extra] Pred 8:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = "Ford Motor Company"' (-0.891) (length=38)
[WRONG] [extra] Pred 9:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.Maker = "Ford Motor Company" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = "Ford Motor Company"' (-0.985) (length=38)
[WRONG] [extra] Pred 10:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName = "Ford Motor Company" AND model_list.Model != "Ford Motor Company"' (-1.015) (length=27)
[WRONG] [extra] Pred 11:	b'SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.Maker = "Ford Motor Company" AND model_list.Model != "Ford Motor Company"' (-1.071) (length=27)
Error Case 56

ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
ERROR: Join condition does not match with table: ['car_names', {'join': 'car_makers', 'on': {'eq': ['model_list.Maker', 'car_makers.Id']}}]
Example 85
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?'
NL tokens: [b'what', b'are', b'the', b'different', b'models', b'w', b'##tha', b'##t', b'are', b'lighter', b'than', b'350', b'##0', b'but', b'were', b'not', b'built', b'by', b'the', b'ford', b'motor', b'company', b'?']
NL tokens (original): [b'What', b'are', b'the', b'different', b'models', b'w', b'##tha', b'##t', b'are', b'lighter', b'than', b'350', b'##0', b'but', b'were', b'not', b'built', b'by', b'the', b'Ford', b'Motor', b'Company', b'?']
['[CLS]', 'what', 'are', 'the', 'different', 'models', 'w', '##tha', '##t', 'are', 'lighter', 'than', '350', '##0', 'but', 'were', 'not', 'built', 'by', 'the', 'ford', 'motor', 'company', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'ford', '[unused51]', 'full', 'name', '[unused49]', 'ford', 'motor', 'company', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'ford', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'ford', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'"
Target TF-P tokens: from model_list join car_names on model_list.Model = car_names.Model join cars_data on car_names.MakeId = cars_data.Id join car_makers on model_list.Maker = car_makers.Id where cars_data.Weight < 3500 and car_makers.FullName != "Ford Motor Company" select distinct model_list.Model

[WRONG] extra Pred 0:	No valid output! (0.000)
Error Case 57

Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having count (*)) select car_makers.Country) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having on car_makers.Id) select car_makers.Country) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having in (*) = 1 select car_makers.Country) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having on countries.Continent) select countries.CountryId) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having in (*) > 1 select car_makers.Country) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having count (*)) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having count (*)) select countries.CountryId) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having in (*)) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having in (*)) select car_makers.Country) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country select car_makers.Country having (*) desc limit 1) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having on countries.CountryId) select countries.Continent) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having on countries.CountryId) select countries.CountryName
Parsing error: from countries where countries.CountryId not in (from car_makers group by car_makers.Country having on countries.Continent) select countries.CountryName
Example 86
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the name of the countries where there is not a single car maker?'
NL tokens: [b'what', b'are', b'the', b'name', b'of', b'the', b'countries', b'where', b'there', b'is', b'not', b'a', b'single', b'car', b'maker', b'?']
NL tokens (original): [b'What', b'are', b'the', b'name', b'of', b'the', b'countries', b'where', b'there', b'is', b'not', b'a', b'single', b'car', b'maker', b'?']
['[CLS]', 'what', 'are', 'the', 'name', 'of', 'the', 'countries', 'where', 'there', 'is', 'not', 'a', 'single', 'car', 'maker', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country'
Target TF-P tokens: from countries select countries.CountryName except from countries join car_makers on countries.CountryId = car_makers.Country select countries.CountryName

[WRONG] [hard] Pred 0:	b'SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) = 1)' (-0.123) (length=24)
[WRONG] [hard] Pred 1:	b'SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > 1)' (-0.521) (length=24)
[WRONG] [hard] Pred 2:	b'SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country)' (-0.597) (length=17)
Error Case 58

Example 87
 92%|█████████▏| 11/12 [03:17<00:21, 21.18s/it]car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the names of the countries with no car makers?'
NL tokens: [b'what', b'are', b'the', b'names', b'of', b'the', b'countries', b'with', b'no', b'car', b'makers', b'?']
NL tokens (original): [b'What', b'are', b'the', b'names', b'of', b'the', b'countries', b'with', b'no', b'car', b'makers', b'?']
['[CLS]', 'what', 'are', 'the', 'names', 'of', 'the', 'countries', 'with', 'no', 'car', 'makers', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country'
Target TF-P tokens: from countries select countries.CountryName except from countries join car_makers on countries.CountryId = car_makers.Country select countries.CountryName

[WRONG] [hard] Pred 0:	b'SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)' (-0.000) (length=15)
[WRONG] [hard] Pred 1:	b'SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers) INTERSECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-2.677) (length=26)
[CORRE] [hard] Pred 2:	b'SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country' (-2.990) (length=16)
Error Case 59

ERROR: table "model_list" in field expression model_list.Maker is not in the current scope
ERROR: table "model_list" in field expression model_list.Maker is not in the current scope
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['model_list.Model', 'car_names.MakeId']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: table "model_list" in field expression model_list.Maker is not in the current scope
Example 88
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .'
NL tokens: [b'which', b'are', b'the', b'car', b'makers', b'which', b'produce', b'at', b'least', b'2', b'models', b'and', b'more', b'than', b'3', b'car', b'makers', b'?', b'list', b'the', b'id', b'and', b'the', b'maker', b'.']
NL tokens (original): [b'Which', b'are', b'the', b'car', b'makers', b'which', b'produce', b'at', b'least', b'2', b'models', b'and', b'more', b'than', b'3', b'car', b'makers', b'?', b'List', b'the', b'id', b'and', b'the', b'maker', b'.']
['[CLS]', 'which', 'are', 'the', 'car', 'makers', 'which', 'produce', 'at', 'least', '2', 'models', 'and', 'more', 'than', '3', 'car', 'makers', '?', 'list', 'the', 'id', 'and', 'the', 'maker', '.', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) >= 2 select car_makers.Id , car_makers.Maker intersect from car_makers join model_list on car_makers.Id = model_list.Maker join car_names on model_list.Model = car_names.Model group by car_makers.Id having count (*) > 3 select car_makers.Id , car_makers.Maker

[WRONG] [extra] Pred 0:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2' (-0.220) (length=22)
[WRONG] [extra] Pred 1:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Id, car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.264) (length=38)
[WRONG] [extra] Pred 2:	b'SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.429) (length=44)
[WRONG] [extra] Pred 3:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker, car_makers.Id FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.454) (length=38)
[WRONG] [extra] Pred 4:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker FROM car_makers JOIN model_list ON model_list.Model = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.542) (length=44)
[WRONG] [extra] Pred 5:	b'SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.546) (length=44)
[WRONG] [extra] Pred 6:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Id, car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.555) (length=38)
[WRONG] [extra] Pred 7:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.649) (length=38)
[WRONG] [extra] Pred 8:	b'SELECT car_makers.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.654) (length=44)
[WRONG] [extra] Pred 9:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.659) (length=44)
[WRONG] [extra] Pred 10:	b'SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Maker, car_makers.Id FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.718) (length=38)
Error Case 60

ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'car_names', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'cars_data', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
ERROR: Join condition does not match with table: ['car_makers', {'join': 'cars_data', 'on': {'eq': ['car_makers.Id', 'model_list.Maker']}}]
Example 89
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?'
NL tokens: [b'what', b'are', b'the', b'id', b'##s', b'and', b'makers', b'of', b'all', b'car', b'makers', b'that', b'produce', b'at', b'least', b'2', b'models', b'and', b'make', b'more', b'than', b'3', b'cars', b'?']
NL tokens (original): [b'What', b'are', b'the', b'id', b'##s', b'and', b'makers', b'of', b'all', b'car', b'makers', b'that', b'produce', b'at', b'least', b'2', b'models', b'and', b'make', b'more', b'than', b'3', b'cars', b'?']
['[CLS]', 'what', 'are', 'the', 'id', '##s', 'and', 'makers', 'of', 'all', 'car', 'makers', 'that', 'produce', 'at', 'least', '2', 'models', 'and', 'make', 'more', 'than', '3', 'cars', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused51]', 'full', 'name', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b'SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3'
Target TF-P tokens: from car_makers join model_list on car_makers.Id = model_list.Maker group by car_makers.Id having count (*) >= 2 select car_makers.Id , car_makers.Maker intersect from car_makers join model_list on car_makers.Id = model_list.Maker join car_names on model_list.Model = car_names.Model group by car_makers.Id having count (*) > 3 select car_makers.Id , car_makers.Maker

[WRONG] [extra] Pred 0:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.061) (length=44)
[WRONG] [extra] Pred 1:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-0.151) (length=44)
[WRONG] [extra] Pred 2:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.703) (length=44)
[WRONG] [extra] Pred 3:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-0.769) (length=44)
[WRONG] [extra] Pred 4:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.769) (length=44)
[WRONG] [extra] Pred 5:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-0.825) (length=44)
[WRONG] [extra] Pred 6:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.873) (length=38)
[WRONG] [extra] Pred 7:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 UNION SELECT car_makers.Id, car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-0.913) (length=38)
[WRONG] [extra] Pred 8:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.Make GROUP BY car_makers.Id HAVING COUNT(*) >= 3' (-1.017) (length=44)
[WRONG] [extra] Pred 9:	b'SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.Make GROUP BY car_makers.Id HAVING COUNT(*) > 3' (-1.050) (length=44)
Error Case 61

ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
Example 90
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b"What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"
NL tokens: [b'what', b'are', b'the', b'id', b'and', b'names', b'of', b'the', b'countries', b'which', b'have', b'more', b'than', b'3', b'car', b'makers', b'or', b'produce', b'the', b"'", b'fiat', b"'", b'model', b'?']
NL tokens (original): [b'What', b'are', b'the', b'id', b'and', b'names', b'of', b'the', b'countries', b'which', b'have', b'more', b'than', b'3', b'car', b'makers', b'or', b'produce', b'the', b"'", b'fiat', b"'", b'model', b'?']
['[CLS]', 'what', 'are', 'the', 'id', 'and', 'names', 'of', 'the', 'countries', 'which', 'have', 'more', 'than', '3', 'car', 'makers', 'or', 'produce', 'the', "'", 'fiat', "'", 'model', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'fiat', '[unused51]', 'full', 'name', '[unused49]', 'fiat', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'fiat', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'fiat', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat'"
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) > 3 select countries.CountryId , countries.CountryName union from countries join car_makers on countries.CountryId = car_makers.Country join model_list on car_makers.Id = model_list.Maker where model_list.Model = "fiat" select countries.CountryId , countries.CountryName

[WRONG] [extra] Pred 0:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-0.466) (length=41)
[WRONG] [extra] Pred 1:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "fiat"' (-0.943) (length=41)
[WRONG] [extra] Pred 2:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryName, countries.Continent FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.012) (length=41)
[WRONG] [extra] Pred 3:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.022) (length=41)
[WRONG] [extra] Pred 4:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.185) (length=41)
Error Case 62

ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'model_list', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: Join condition does not match with table: ['countries', {'join': 'car_names', 'on': {'eq': ['countries.CountryId', 'car_makers.Country']}}]
ERROR: table "car_makers" in field expression car_makers.Maker is not in the current scope
Example 91
car_1
 +-- continents (continents)
 |   +-- ContId (cont id) [PRIMARY] [FOREIGN]
 |   +-- Continent (continent)
 +-- countries (countries)
 |   +-- CountryId (country id) [PRIMARY] [FOREIGN]
 |   +-- CountryName (country name)
 |   +-- Continent (continent) [FOREIGN]
 +-- car_makers (car makers)
 |   +-- Id (id) [PRIMARY] [FOREIGN]
 |   +-- Maker (maker)
 |   +-- FullName (full name)
 |   +-- Country (country) [FOREIGN]
 +-- model_list (model list)
 |   +-- ModelId (model id) [PRIMARY]
 |   +-- Maker (maker) [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 +-- car_names (car names)
 |   +-- MakeId (make id) [PRIMARY] [FOREIGN]
 |   +-- Model (model) [FOREIGN]
 |   +-- Make (make)
 +-- cars_data (cars data)
     +-- Id (id) [PRIMARY] [FOREIGN]
     +-- MPG (mpg)
     +-- Cylinders (cylinders)
     +-- Edispl (edispl)
     +-- Horsepower (horsepower)
     +-- Weight (weight)
     +-- Accelerate (accelerate)
     +-- Year (year)
NL: b'What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?'
NL tokens: [b'what', b'are', b'the', b'id', b'##s', b'and', b'names', b'of', b'all', b'countries', b'that', b'either', b'have', b'more', b'than', b'3', b'car', b'makers', b'or', b'produce', b'fiat', b'model', b'?']
NL tokens (original): [b'What', b'are', b'the', b'id', b'##s', b'and', b'names', b'of', b'all', b'countries', b'that', b'either', b'have', b'more', b'than', b'3', b'car', b'makers', b'or', b'produce', b'fiat', b'model', b'?']
['[CLS]', 'what', 'are', 'the', 'id', '##s', 'and', 'names', 'of', 'all', 'countries', 'that', 'either', 'have', 'more', 'than', '3', 'car', 'makers', 'or', 'produce', 'fiat', 'model', '?', '[SEP]', '*', '[unused50]', 'continents', '[unused51]', 'con', '##t', 'id', '[unused51]', 'continent', '[unused50]', 'countries', '[unused51]', 'country', 'id', '[unused51]', 'country', 'name', '[unused51]', 'continent', '[unused50]', 'car', 'makers', '[unused51]', 'id', '[unused51]', 'maker', '[unused49]', 'fiat', '[unused51]', 'full', 'name', '[unused49]', 'fiat', '[unused51]', 'country', '[unused50]', 'model', 'list', '[unused51]', 'model', 'id', '[unused51]', 'maker', '[unused51]', 'model', '[unused49]', 'fiat', '[unused50]', 'car', 'names', '[unused51]', 'make', 'id', '[unused51]', 'model', '[unused49]', 'fiat', '[unused51]', 'make', '[unused50]', 'cars', 'data', '[unused51]', 'id', '[unused51]', 'mp', '##g', '[unused51]', 'cylinders', '[unused51]', 'ed', '##is', '##pl', '[unused51]', 'horsepower', '[unused51]', 'weight', '[unused51]', 'accelerate', '[unused51]', 'year', '[SEP]']
Target 0: b"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat'"
Target TF-P tokens: from countries join car_makers on countries.CountryId = car_makers.Country group by countries.CountryId having count (*) > 3 select countries.CountryId , countries.CountryName union from countries join car_makers on countries.CountryId = car_makers.Country join model_list on car_makers.Id = model_list.Maker where model_list.Model = "fiat" select countries.CountryId , countries.CountryName

[WRONG] [extra] Pred 0:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "fiat"' (-0.518) (length=41)
[WRONG] [extra] Pred 1:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-0.719) (length=41)
[WRONG] [extra] Pred 2:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "fiat"' (-0.906) (length=41)
[WRONG] [extra] Pred 3:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.135) (length=41)
[WRONG] [extra] Pred 4:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 EXCEPT SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "fiat"' (-1.370) (length=41)
[WRONG] [extra] Pred 5:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = "fiat"' (-1.381) (length=41)
[WRONG] [extra] Pred 6:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 EXCEPT SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.575) (length=41)
100%|██████████| 12/12 [03:38<00:00, 21.00s/it]
[WRONG] [extra] Pred 7:	b'SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) > 3 UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName = "fiat"' (-1.584) (length=41)
Error Case 63

Model predictions saved to /home/shelunts/thesis/TabularSemantingParsing/model/spider.bridge.lstm.meta.ts.ppl-0.85.2.dn.eo.feat.bert-large-uncased.xavier-1024-400-400-8-2-0.0005-inv-sqr-0.0005-4000-6e-05-inv-sqr-3e-05-4000-0.3-0.3-0.0-0.0-1-8-0.0-0.0-res-0.2-0.0-ff-0.4-0.0/predictions.16.1.05.dev.txt
DEV set performance
Top-1 exact match: 0.315
Top-2 exact match: 0.370
Top-3 exact match: 0.402
Top-5 exact match: 0.413
Top-10 exact match: 0.413
Table error: -0.500
